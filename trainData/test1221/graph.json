[{"cfgs":[],"code":"private Comparator<Field> supertypesLast = new Comparator<Field>() {\rpublic int compare(Field field1, Field field2) {Class<?> field1Type = field1.getType();Class<?> field2Type = field2.getType();if(field1Type.isAssignableFrom(field2Type)) {return -1;}if(field2Type.isAssignableFrom(field1Type)) {return 1;}return 0;}}","dfgs":[],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":true,"lineBeg":28,"lineEnd":41,"lineMapIndex":-1,"methodParents":[],"nodeIndex":0},{"cfgs":[],"code":"return 1","dfgs":[],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":true,"lineBeg":37,"lineEnd":37,"lineMapIndex":22,"methodParents":[],"nodeIndex":1},{"cfgs":[3],"code":"public void injectMocksOnFields(Set<Field> testClassFields, Set<Object> mocks, Object testClass) ","dfgs":[3,4,6,7,5],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":true,"lineBeg":49,"lineEnd":49,"lineMapIndex":24,"methodParents":[],"nodeIndex":2},{"cfgs":[4],"code":"for (Field field : testClassFields)","dfgs":[5],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":true,"lineBeg":50,"lineEnd":50,"lineMapIndex":25,"methodParents":[],"nodeIndex":3},{"cfgs":[5],"code":"Object fieldInstance = null","dfgs":[],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":true,"lineBeg":51,"lineEnd":51,"lineMapIndex":27,"methodParents":[],"nodeIndex":4},{"cfgs":[6],"code":"fieldInstance = new FieldInitializer(testClass, field).initialize()","dfgs":[6],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":true,"lineBeg":53,"lineEnd":53,"lineMapIndex":28,"methodParents":[],"nodeIndex":5},{"cfgs":[7],"code":"Class<?> fieldClass = fieldInstance.getClass()","dfgs":[7],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":true,"lineBeg":59,"lineEnd":59,"lineMapIndex":29,"methodParents":[],"nodeIndex":6},{"cfgs":[],"code":"injectMockCandidate(fieldClass, mocks, fieldInstance)","dfgs":[],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":true,"lineBeg":61,"lineEnd":61,"lineMapIndex":30,"methodParents":[8],"nodeIndex":7},{"cfgs":[9],"code":"for(Field field : declaredFields)","dfgs":[9],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":true,"lineBeg":71,"lineEnd":71,"lineMapIndex":31,"methodParents":[],"nodeIndex":8},{"cfgs":[],"code":"mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject()","dfgs":[],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":true,"lineBeg":72,"lineEnd":72,"lineMapIndex":32,"methodParents":[20],"nodeIndex":9},{"cfgs":[],"code":"import org.junit.Ignore","dfgs":[],"fName":"test_org_mockitousage_bugs_InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java","fieldParents":[],"isDel":true,"lineBeg":3,"lineEnd":3,"lineMapIndex":-1,"methodParents":[],"nodeIndex":10},{"cfgs":[12],"code":"private Service illegalInjectionExample = new Service()","dfgs":[],"fName":"test_org_mockitousage_bugs_InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java","fieldParents":[],"isDel":true,"lineBeg":19,"lineEnd":19,"lineMapIndex":37,"methodParents":[],"nodeIndex":11},{"cfgs":[],"code":"private Object reference = new Object()","dfgs":[],"fName":"test_org_mockitousage_bugs_InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java","fieldParents":[],"isDel":true,"lineBeg":21,"lineEnd":21,"lineMapIndex":36,"methodParents":[],"nodeIndex":12},{"cfgs":[],"code":"\rpublic void test()","dfgs":[],"fName":"test_org_mockitousage_bugs_InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java","fieldParents":[],"isDel":true,"lineBeg":32,"lineEnd":33,"lineMapIndex":-1,"methodParents":[],"nodeIndex":13},{"cfgs":[],"code":"assertSame(reference, illegalInjectionExample.mockShouldNotGoInHere)","dfgs":[],"fName":"test_org_mockitousage_bugs_InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java","fieldParents":[11],"isDel":true,"lineBeg":34,"lineEnd":34,"lineMapIndex":39,"methodParents":[],"nodeIndex":14},{"cfgs":[],"code":"public class Bean ","dfgs":[],"fName":"test_org_mockitousage_bugs_InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java","fieldParents":[],"isDel":true,"lineBeg":38,"lineEnd":38,"lineMapIndex":40,"methodParents":[],"nodeIndex":15},{"cfgs":[],"code":"public class Service ","dfgs":[],"fName":"test_org_mockitousage_bugs_InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java","fieldParents":[],"isDel":true,"lineBeg":40,"lineEnd":40,"lineMapIndex":41,"methodParents":[],"nodeIndex":16},{"cfgs":[],"code":"public final Object mockShouldNotGoInHere = reference","dfgs":[],"fName":"test_org_mockitousage_bugs_InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java","fieldParents":[],"isDel":true,"lineBeg":42,"lineEnd":42,"lineMapIndex":42,"methodParents":[],"nodeIndex":17},{"cfgs":[],"code":"return new OngoingInjecter() {\rpublic boolean thenInject() {try {if (!new BeanPropertySetter(fieldInstance, field).set(matchingMock)) {new FieldSetter(fieldInstance, field).set(matchingMock);}} catch (Exception e) {throw new MockitoException(\"Problems injecting dependency in \" + field.getName(), e);}return true;}}","dfgs":[],"fName":"src_org_mockito_internal_configuration_injection_FinalMockCandidateFilter.java","fieldParents":[],"isDel":true,"lineBeg":23,"lineEnd":34,"lineMapIndex":43,"methodParents":[],"nodeIndex":18},{"cfgs":[],"code":"return new OngoingInjecter() {\rpublic boolean thenInject() {return false;}}","dfgs":[],"fName":"src_org_mockito_internal_configuration_injection_FinalMockCandidateFilter.java","fieldParents":[],"isDel":true,"lineBeg":37,"lineEnd":41,"lineMapIndex":44,"methodParents":[],"nodeIndex":19},{"cfgs":[],"code":"boolean thenInject()","dfgs":[],"fName":"src_org_mockito_internal_configuration_injection_OngoingInjecter.java","fieldParents":[],"isDel":true,"lineBeg":17,"lineEnd":17,"lineMapIndex":45,"methodParents":[],"nodeIndex":20},{"cfgs":[],"code":"import java.util.HashSet","dfgs":[],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":false,"lineBeg":18,"lineEnd":18,"lineMapIndex":-1,"methodParents":[],"nodeIndex":21},{"cfgs":[],"code":"return 1","dfgs":[],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":false,"lineBeg":35,"lineEnd":35,"lineMapIndex":1,"methodParents":[],"nodeIndex":22},{"cfgs":[],"code":"return -1","dfgs":[],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":false,"lineBeg":38,"lineEnd":38,"lineMapIndex":-1,"methodParents":[],"nodeIndex":23},{"cfgs":[25],"code":"public void injectMocksOnFields(Set<Field> injectMocksFields, Set<Object> mocks, Object testClassInstance) ","dfgs":[25,26,27,29,30,28],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":false,"lineBeg":72,"lineEnd":72,"lineMapIndex":2,"methodParents":[],"nodeIndex":24},{"cfgs":[26],"code":"for (Field field : injectMocksFields)","dfgs":[28],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":false,"lineBeg":73,"lineEnd":73,"lineMapIndex":3,"methodParents":[],"nodeIndex":25},{"cfgs":[27],"code":"Set<Object> mocksToBeInjected = new HashSet<Object>(mocks)","dfgs":[30],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":false,"lineBeg":74,"lineEnd":74,"lineMapIndex":-1,"methodParents":[],"nodeIndex":26},{"cfgs":[28],"code":"Object injectMocksFieldInstance = null","dfgs":[],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":false,"lineBeg":75,"lineEnd":75,"lineMapIndex":4,"methodParents":[],"nodeIndex":27},{"cfgs":[29],"code":"injectMocksFieldInstance = new FieldInitializer(testClassInstance, field).initialize()","dfgs":[29],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":false,"lineBeg":77,"lineEnd":77,"lineMapIndex":5,"methodParents":[],"nodeIndex":28},{"cfgs":[30],"code":"Class<?> fieldClass = injectMocksFieldInstance.getClass()","dfgs":[30],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":false,"lineBeg":83,"lineEnd":83,"lineMapIndex":6,"methodParents":[],"nodeIndex":29},{"cfgs":[],"code":"injectMockCandidate(fieldClass, mocksToBeInjected, injectMocksFieldInstance)","dfgs":[],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":false,"lineBeg":85,"lineEnd":85,"lineMapIndex":7,"methodParents":[31],"nodeIndex":30},{"cfgs":[32],"code":"for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz))","dfgs":[32],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":false,"lineBeg":92,"lineEnd":92,"lineMapIndex":8,"methodParents":[34],"nodeIndex":31},{"cfgs":[33],"code":"Object injected = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject()","dfgs":[33],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":false,"lineBeg":93,"lineEnd":93,"lineMapIndex":9,"methodParents":[45],"nodeIndex":32},{"cfgs":[],"code":"mocks.remove(injected)","dfgs":[],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":false,"lineBeg":94,"lineEnd":94,"lineMapIndex":-1,"methodParents":[],"nodeIndex":33},{"cfgs":[35],"code":"private Field[] orderedInstanceFieldsFrom(Class<?> awaitingInjectionClazz) ","dfgs":[35],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":false,"lineBeg":98,"lineEnd":98,"lineMapIndex":-1,"methodParents":[],"nodeIndex":34},{"cfgs":[],"code":"return declaredFields","dfgs":[],"fName":"src_org_mockito_internal_configuration_DefaultInjectionEngine.java","fieldParents":[],"isDel":false,"lineBeg":101,"lineEnd":101,"lineMapIndex":-1,"methodParents":[],"nodeIndex":35},{"cfgs":[],"code":"private static final Object REFERENCE = new Object()","dfgs":[],"fName":"test_org_mockitousage_bugs_InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java","fieldParents":[],"isDel":false,"lineBeg":17,"lineEnd":17,"lineMapIndex":12,"methodParents":[],"nodeIndex":36},{"cfgs":[],"code":"private Service illegalInjectionExample = new Service()","dfgs":[],"fName":"test_org_mockitousage_bugs_InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java","fieldParents":[],"isDel":false,"lineBeg":21,"lineEnd":21,"lineMapIndex":11,"methodParents":[],"nodeIndex":37},{"cfgs":[],"code":"\rpublic void mock_should_be_injected_once_and_in_the_best_matching_type()","dfgs":[],"fName":"test_org_mockitousage_bugs_InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java","fieldParents":[],"isDel":false,"lineBeg":31,"lineEnd":32,"lineMapIndex":-1,"methodParents":[],"nodeIndex":38},{"cfgs":[],"code":"assertSame(REFERENCE, illegalInjectionExample.mockShouldNotGoInHere)","dfgs":[],"fName":"test_org_mockitousage_bugs_InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java","fieldParents":[36],"isDel":false,"lineBeg":33,"lineEnd":33,"lineMapIndex":14,"methodParents":[],"nodeIndex":39},{"cfgs":[],"code":"public static class Bean ","dfgs":[],"fName":"test_org_mockitousage_bugs_InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java","fieldParents":[],"isDel":false,"lineBeg":37,"lineEnd":37,"lineMapIndex":15,"methodParents":[],"nodeIndex":40},{"cfgs":[],"code":"public static class Service ","dfgs":[],"fName":"test_org_mockitousage_bugs_InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java","fieldParents":[],"isDel":false,"lineBeg":38,"lineEnd":38,"lineMapIndex":16,"methodParents":[],"nodeIndex":41},{"cfgs":[],"code":"public final Object mockShouldNotGoInHere = REFERENCE","dfgs":[],"fName":"test_org_mockitousage_bugs_InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java","fieldParents":[],"isDel":false,"lineBeg":40,"lineEnd":40,"lineMapIndex":17,"methodParents":[],"nodeIndex":42},{"cfgs":[],"code":"return new OngoingInjecter() {\rpublic Object thenInject() {try {if (!new BeanPropertySetter(fieldInstance, field).set(matchingMock)) {new FieldSetter(fieldInstance, field).set(matchingMock);}} catch (Exception e) {throw new MockitoException(\"Problems injecting dependency in \" + field.getName(), e);}return matchingMock;}}","dfgs":[],"fName":"src_org_mockito_internal_configuration_injection_FinalMockCandidateFilter.java","fieldParents":[],"isDel":false,"lineBeg":23,"lineEnd":34,"lineMapIndex":18,"methodParents":[],"nodeIndex":43},{"cfgs":[],"code":"return new OngoingInjecter() {\rpublic Object thenInject() {return null;}}","dfgs":[],"fName":"src_org_mockito_internal_configuration_injection_FinalMockCandidateFilter.java","fieldParents":[],"isDel":false,"lineBeg":37,"lineEnd":41,"lineMapIndex":19,"methodParents":[],"nodeIndex":44},{"cfgs":[],"code":"Object thenInject()","dfgs":[],"fName":"src_org_mockito_internal_configuration_injection_OngoingInjecter.java","fieldParents":[],"isDel":false,"lineBeg":17,"lineEnd":17,"lineMapIndex":20,"methodParents":[],"nodeIndex":45}]