[{"cfgs":[],"code":"return numerator.doubleValue() / denominator.doubleValue()","dfgs":[],"fName":"src_main_java_org_apache_commons_math_fraction_BigFraction.java","fieldParents":[],"isDel":true,"lineBeg":685,"lineEnd":685,"lineMapIndex":-1,"methodParents":[0],"nodeIndex":0},{"cfgs":[],"code":"return numerator.floatValue() / denominator.floatValue()","dfgs":[],"fName":"src_main_java_org_apache_commons_math_fraction_BigFraction.java","fieldParents":[],"isDel":true,"lineBeg":729,"lineEnd":729,"lineMapIndex":-1,"methodParents":[1],"nodeIndex":1},{"cfgs":[3],"code":"double result = numerator.doubleValue() / denominator.doubleValue()","dfgs":[3,4],"fName":"src_main_java_org_apache_commons_math_fraction_BigFraction.java","fieldParents":[],"isDel":false,"lineBeg":685,"lineEnd":685,"lineMapIndex":-1,"methodParents":[2],"nodeIndex":2},{"cfgs":[4,6],"code":"if (Double.isNaN(result))","dfgs":[6,4],"fName":"src_main_java_org_apache_commons_math_fraction_BigFraction.java","fieldParents":[],"isDel":false,"lineBeg":686,"lineEnd":686,"lineMapIndex":-1,"methodParents":[],"nodeIndex":3},{"cfgs":[5],"code":"int shift = Math.max(numerator.bitLength(),denominator.bitLength()) - Double.MAX_EXPONENT","dfgs":[5],"fName":"src_main_java_org_apache_commons_math_fraction_BigFraction.java","fieldParents":[],"isDel":false,"lineBeg":689,"lineEnd":690,"lineMapIndex":-1,"methodParents":[],"nodeIndex":4},{"cfgs":[6],"code":"result = numerator.shiftRight(shift).doubleValue() /denominator.shiftRight(shift).doubleValue()","dfgs":[6],"fName":"src_main_java_org_apache_commons_math_fraction_BigFraction.java","fieldParents":[],"isDel":false,"lineBeg":691,"lineEnd":692,"lineMapIndex":-1,"methodParents":[2],"nodeIndex":5},{"cfgs":[],"code":"return result","dfgs":[],"fName":"src_main_java_org_apache_commons_math_fraction_BigFraction.java","fieldParents":[],"isDel":false,"lineBeg":694,"lineEnd":694,"lineMapIndex":-1,"methodParents":[],"nodeIndex":6},{"cfgs":[8],"code":"float result = numerator.floatValue() / denominator.floatValue()","dfgs":[8,9],"fName":"src_main_java_org_apache_commons_math_fraction_BigFraction.java","fieldParents":[],"isDel":false,"lineBeg":738,"lineEnd":738,"lineMapIndex":-1,"methodParents":[7],"nodeIndex":7},{"cfgs":[9,11],"code":"if (Double.isNaN(result))","dfgs":[11],"fName":"src_main_java_org_apache_commons_math_fraction_BigFraction.java","fieldParents":[],"isDel":false,"lineBeg":739,"lineEnd":739,"lineMapIndex":-1,"methodParents":[],"nodeIndex":8},{"cfgs":[10],"code":"int shift = Math.max(numerator.bitLength(),denominator.bitLength()) - Float.MAX_EXPONENT","dfgs":[10],"fName":"src_main_java_org_apache_commons_math_fraction_BigFraction.java","fieldParents":[],"isDel":false,"lineBeg":742,"lineEnd":743,"lineMapIndex":-1,"methodParents":[],"nodeIndex":9},{"cfgs":[11],"code":"result = numerator.shiftRight(shift).floatValue() /denominator.shiftRight(shift).floatValue()","dfgs":[11],"fName":"src_main_java_org_apache_commons_math_fraction_BigFraction.java","fieldParents":[],"isDel":false,"lineBeg":744,"lineEnd":745,"lineMapIndex":-1,"methodParents":[7],"nodeIndex":10},{"cfgs":[],"code":"return result","dfgs":[],"fName":"src_main_java_org_apache_commons_math_fraction_BigFraction.java","fieldParents":[],"isDel":false,"lineBeg":747,"lineEnd":747,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[],"code":"public void testDoubleValueForLargeNumeratorAndDenominator() ","dfgs":[],"fName":"src_test_java_org_apache_commons_math_fraction_BigFractionTest.java","fieldParents":[],"isDel":false,"lineBeg":203,"lineEnd":203,"lineMapIndex":-1,"methodParents":[],"nodeIndex":12},{"cfgs":[14],"code":"final BigInteger pow400 = BigInteger.TEN.pow(400)","dfgs":[14,16],"fName":"src_test_java_org_apache_commons_math_fraction_BigFractionTest.java","fieldParents":[],"isDel":false,"lineBeg":204,"lineEnd":204,"lineMapIndex":-1,"methodParents":[],"nodeIndex":13},{"cfgs":[15],"code":"final BigInteger pow401 = BigInteger.TEN.pow(401)","dfgs":[16],"fName":"src_test_java_org_apache_commons_math_fraction_BigFractionTest.java","fieldParents":[],"isDel":false,"lineBeg":205,"lineEnd":205,"lineMapIndex":-1,"methodParents":[],"nodeIndex":14},{"cfgs":[16],"code":"final BigInteger two = new BigInteger(\"2\")","dfgs":[16],"fName":"src_test_java_org_apache_commons_math_fraction_BigFractionTest.java","fieldParents":[],"isDel":false,"lineBeg":206,"lineEnd":206,"lineMapIndex":-1,"methodParents":[],"nodeIndex":15},{"cfgs":[17],"code":"final BigFraction large = new BigFraction(pow401.add(BigInteger.ONE),pow400.multiply(two))","dfgs":[17],"fName":"src_test_java_org_apache_commons_math_fraction_BigFractionTest.java","fieldParents":[],"isDel":false,"lineBeg":207,"lineEnd":208,"lineMapIndex":-1,"methodParents":[],"nodeIndex":16},{"cfgs":[],"code":"Assert.assertEquals(5, large.doubleValue(), 1e-15)","dfgs":[],"fName":"src_test_java_org_apache_commons_math_fraction_BigFractionTest.java","fieldParents":[],"isDel":false,"lineBeg":210,"lineEnd":210,"lineMapIndex":-1,"methodParents":[2],"nodeIndex":17},{"cfgs":[],"code":"public void testFloatValueForLargeNumeratorAndDenominator() ","dfgs":[],"fName":"src_test_java_org_apache_commons_math_fraction_BigFractionTest.java","fieldParents":[],"isDel":false,"lineBeg":215,"lineEnd":215,"lineMapIndex":-1,"methodParents":[],"nodeIndex":18},{"cfgs":[20],"code":"final BigInteger pow400 = BigInteger.TEN.pow(400)","dfgs":[20,22],"fName":"src_test_java_org_apache_commons_math_fraction_BigFractionTest.java","fieldParents":[],"isDel":false,"lineBeg":216,"lineEnd":216,"lineMapIndex":-1,"methodParents":[],"nodeIndex":19},{"cfgs":[21],"code":"final BigInteger pow401 = BigInteger.TEN.pow(401)","dfgs":[22],"fName":"src_test_java_org_apache_commons_math_fraction_BigFractionTest.java","fieldParents":[],"isDel":false,"lineBeg":217,"lineEnd":217,"lineMapIndex":-1,"methodParents":[],"nodeIndex":20},{"cfgs":[22],"code":"final BigInteger two = new BigInteger(\"2\")","dfgs":[22],"fName":"src_test_java_org_apache_commons_math_fraction_BigFractionTest.java","fieldParents":[],"isDel":false,"lineBeg":218,"lineEnd":218,"lineMapIndex":-1,"methodParents":[],"nodeIndex":21},{"cfgs":[23],"code":"final BigFraction large = new BigFraction(pow401.add(BigInteger.ONE),pow400.multiply(two))","dfgs":[23],"fName":"src_test_java_org_apache_commons_math_fraction_BigFractionTest.java","fieldParents":[],"isDel":false,"lineBeg":219,"lineEnd":220,"lineMapIndex":-1,"methodParents":[],"nodeIndex":22},{"cfgs":[],"code":"Assert.assertEquals(5, large.floatValue(), 1e-15)","dfgs":[],"fName":"src_test_java_org_apache_commons_math_fraction_BigFractionTest.java","fieldParents":[],"isDel":false,"lineBeg":222,"lineEnd":222,"lineMapIndex":-1,"methodParents":[7],"nodeIndex":23}]