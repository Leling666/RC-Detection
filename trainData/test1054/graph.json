[{"cfgs":[1,2],"code":"FieldValueGenerator alwaysGenerator = FieldValueGeneratorFactory.forCronField(new CronField(CronFieldName.YEAR, Always.always(), FieldConstraintsBuilder.instance().createConstraintsInstance()))","dfgs":[1,3],"fName":"src_main_java_com_cronutils_model_time_SingleExecutionTime.java","fieldParents":[],"isDel":true,"lineBeg":88,"lineEnd":88,"lineMapIndex":-1,"methodParents":[],"nodeIndex":0},{"cfgs":[],"code":"this.yearsValueGenerator = yearsValueCronField==null?alwaysGenerator:createYearValueGeneratorInstance(yearsValueCronField)","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_SingleExecutionTime.java","fieldParents":[],"isDel":true,"lineBeg":93,"lineEnd":93,"lineMapIndex":-1,"methodParents":[],"nodeIndex":1},{"cfgs":[3],"code":"else","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_SingleExecutionTime.java","fieldParents":[],"isDel":true,"lineBeg":94,"lineEnd":94,"lineMapIndex":-1,"methodParents":[],"nodeIndex":2},{"cfgs":[],"code":"this.yearsValueGenerator = alwaysGenerator","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_SingleExecutionTime.java","fieldParents":[],"isDel":true,"lineBeg":95,"lineEnd":95,"lineMapIndex":-1,"methodParents":[],"nodeIndex":3},{"cfgs":[],"code":"this.yearsValueGenerator = (yearsValueCronField == null)? FieldValueGeneratorFactory.forCronField(new CronField(CronFieldName.YEAR, Always.always(),cronDefinition.getFieldDefinition(CronFieldName.YEAR).getConstraints())): createYearValueGeneratorInstance(yearsValueCronField)","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_SingleExecutionTime.java","fieldParents":[],"isDel":false,"lineBeg":92,"lineEnd":95,"lineMapIndex":-1,"methodParents":[],"nodeIndex":4},{"cfgs":[6],"code":"else","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_SingleExecutionTime.java","fieldParents":[],"isDel":false,"lineBeg":96,"lineEnd":96,"lineMapIndex":-1,"methodParents":[],"nodeIndex":5},{"cfgs":[],"code":"this.yearsValueGenerator = FieldValueGeneratorFactory.forCronField(new CronField(CronFieldName.YEAR, Always.always(),FieldConstraintsBuilder.instance().createConstraintsInstance()))","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_SingleExecutionTime.java","fieldParents":[],"isDel":false,"lineBeg":97,"lineEnd":98,"lineMapIndex":-1,"methodParents":[],"nodeIndex":6},{"cfgs":[],"code":"import com.cronutils.model.CronType","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_ExecutionTimeQuartzIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":33,"lineEnd":33,"lineMapIndex":-1,"methodParents":[],"nodeIndex":7},{"cfgs":[],"code":"import com.cronutils.model.definition.CronDefinition","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_ExecutionTimeQuartzIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":34,"lineEnd":34,"lineMapIndex":-1,"methodParents":[],"nodeIndex":8},{"cfgs":[],"code":"import org.junit.Assert","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_ExecutionTimeQuartzIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":35,"lineEnd":35,"lineMapIndex":-1,"methodParents":[],"nodeIndex":9},{"cfgs":[],"code":"public void testBoundary() ","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_ExecutionTimeQuartzIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":915,"lineEnd":915,"lineMapIndex":-1,"methodParents":[],"nodeIndex":10},{"cfgs":[12],"code":"ExecutionTime execution = ExecutionTime.forCron(parser.parse(\"0 0 12 * * ?\"))","dfgs":[14,13],"fName":"src_test_java_com_cronutils_model_time_ExecutionTimeQuartzIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":916,"lineEnd":916,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[13],"code":"ZonedDateTime dateTimeBefore1970 = ZonedDateTime.of(1900, 1, 1, 0, 0, 0, 0, ZoneOffset.UTC)","dfgs":[13,15],"fName":"src_test_java_com_cronutils_model_time_ExecutionTimeQuartzIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":918,"lineEnd":918,"lineMapIndex":-1,"methodParents":[],"nodeIndex":12},{"cfgs":[14],"code":"Optional<ZonedDateTime> next = execution.nextExecution(dateTimeBefore1970)","dfgs":[14,17],"fName":"src_test_java_com_cronutils_model_time_ExecutionTimeQuartzIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":919,"lineEnd":919,"lineMapIndex":-1,"methodParents":[],"nodeIndex":13},{"cfgs":[15],"code":"assertTrue(next.isPresent())","dfgs":[18,15],"fName":"src_test_java_com_cronutils_model_time_ExecutionTimeQuartzIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":920,"lineEnd":920,"lineMapIndex":-1,"methodParents":[],"nodeIndex":14},{"cfgs":[16],"code":"Assert.assertEquals(ZonedDateTime.of(1970, 1, 1, 12, 0, 0, 0, ZoneOffset.UTC), next.get())","dfgs":[19,16],"fName":"src_test_java_com_cronutils_model_time_ExecutionTimeQuartzIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":921,"lineEnd":921,"lineMapIndex":-1,"methodParents":[],"nodeIndex":15},{"cfgs":[17],"code":"ZonedDateTime dateTimeAfter2099 = ZonedDateTime.of(2150, 1, 1, 0, 0, 0, 0, ZoneOffset.UTC)","dfgs":[17,19],"fName":"src_test_java_com_cronutils_model_time_ExecutionTimeQuartzIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":924,"lineEnd":924,"lineMapIndex":-1,"methodParents":[],"nodeIndex":16},{"cfgs":[18],"code":"Optional<ZonedDateTime> last = execution.lastExecution(dateTimeAfter2099)","dfgs":[18],"fName":"src_test_java_com_cronutils_model_time_ExecutionTimeQuartzIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":925,"lineEnd":925,"lineMapIndex":-1,"methodParents":[],"nodeIndex":17},{"cfgs":[19],"code":"assertTrue(last.isPresent())","dfgs":[19],"fName":"src_test_java_com_cronutils_model_time_ExecutionTimeQuartzIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":926,"lineEnd":926,"lineMapIndex":-1,"methodParents":[],"nodeIndex":18},{"cfgs":[],"code":"Assert.assertEquals(ZonedDateTime.of(2099, 12, 31, 12, 0, 0, 0, ZoneOffset.UTC), last.get())","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_ExecutionTimeQuartzIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":927,"lineEnd":927,"lineMapIndex":-1,"methodParents":[],"nodeIndex":19}]