[{"cfgs":[],"code":"assertTrue((nextRun.getHourOfDay()+1) % 2 == 0)","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_ExecutionTimeCron4jIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":87,"lineEnd":87,"lineMapIndex":65,"methodParents":[],"nodeIndex":0},{"cfgs":[],"code":"assertTrue((nextRun.getMinuteOfHour()+1) % 15 == 0)","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_ExecutionTimeCron4jIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":109,"lineEnd":109,"lineMapIndex":66,"methodParents":[],"nodeIndex":1},{"cfgs":[],"code":"import static org.junit.Assert.assertNotNull","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":13,"lineEnd":13,"lineMapIndex":-1,"methodParents":[],"nodeIndex":2},{"cfgs":[],"code":"public void testCorrectMonthScaleForNextExecution1()","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":144,"lineEnd":144,"lineMapIndex":-1,"methodParents":[],"nodeIndex":3},{"cfgs":[5],"code":"CronDefinition cronDefinition = CronDefinitionBuilder.instanceDefinitionFor(CronType.UNIX)","dfgs":[5],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":145,"lineEnd":145,"lineMapIndex":-1,"methodParents":[],"nodeIndex":4},{"cfgs":[6],"code":"CronParser parser = new CronParser(cronDefinition)","dfgs":[7],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":146,"lineEnd":146,"lineMapIndex":-1,"methodParents":[],"nodeIndex":5},{"cfgs":[7],"code":"String crontab = \"* * */3 */4 */5\"","dfgs":[7],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":147,"lineEnd":147,"lineMapIndex":-1,"methodParents":[],"nodeIndex":6},{"cfgs":[8],"code":"Cron cron = parser.parse(crontab)","dfgs":[8],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":148,"lineEnd":148,"lineMapIndex":-1,"methodParents":[],"nodeIndex":7},{"cfgs":[9],"code":"ExecutionTime executionTime = ExecutionTime.forCron(cron)","dfgs":[10],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":149,"lineEnd":149,"lineMapIndex":-1,"methodParents":[],"nodeIndex":8},{"cfgs":[10],"code":"DateTime scanTime = DateTime.parse(\"2015-12-10T16:32:56.586-08:00\")","dfgs":[10],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":150,"lineEnd":150,"lineMapIndex":-1,"methodParents":[],"nodeIndex":9},{"cfgs":[11],"code":"DateTime nextExecutionTime = executionTime.nextExecution(scanTime)","dfgs":[11],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":151,"lineEnd":151,"lineMapIndex":-1,"methodParents":[],"nodeIndex":10},{"cfgs":[12],"code":"System.out.println(String.format(\"Scan time %s, next execution time: %s\", scanTime, nextExecutionTime))","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":152,"lineEnd":152,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[],"code":"assertNotNull(null)","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":153,"lineEnd":153,"lineMapIndex":-1,"methodParents":[],"nodeIndex":12},{"cfgs":[],"code":"public void testCorrectMonthScaleForNextExecution2()","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":161,"lineEnd":161,"lineMapIndex":-1,"methodParents":[],"nodeIndex":13},{"cfgs":[15],"code":"public void testCorrectNextExecutionDoW1()","dfgs":[16,17,23,15,18,19,20,21,22],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":176,"lineEnd":176,"lineMapIndex":-1,"methodParents":[],"nodeIndex":14},{"cfgs":[16],"code":"CronDefinition cronDefinition = CronDefinitionBuilder.instanceDefinitionFor(CronType.UNIX)","dfgs":[16],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":177,"lineEnd":177,"lineMapIndex":-1,"methodParents":[],"nodeIndex":15},{"cfgs":[17],"code":"CronParser parser = new CronParser(cronDefinition)","dfgs":[18],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":178,"lineEnd":178,"lineMapIndex":-1,"methodParents":[],"nodeIndex":16},{"cfgs":[18],"code":"String crontab = \"* * */3 */4 */5\"","dfgs":[18],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":179,"lineEnd":179,"lineMapIndex":-1,"methodParents":[],"nodeIndex":17},{"cfgs":[19],"code":"Cron cron = parser.parse(crontab)","dfgs":[19],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":180,"lineEnd":180,"lineMapIndex":-1,"methodParents":[],"nodeIndex":18},{"cfgs":[20],"code":"ExecutionTime executionTime = ExecutionTime.forCron(cron)","dfgs":[21],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":181,"lineEnd":181,"lineMapIndex":-1,"methodParents":[],"nodeIndex":19},{"cfgs":[21],"code":"DateTime scanTime = DateTime.parse(\"2015-12-10T16:32:56.586-08:00\")","dfgs":[21],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":182,"lineEnd":182,"lineMapIndex":-1,"methodParents":[],"nodeIndex":20},{"cfgs":[22],"code":"DateTime nextExecutionTime = executionTime.nextExecution(scanTime)","dfgs":[22],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":183,"lineEnd":183,"lineMapIndex":-1,"methodParents":[],"nodeIndex":21},{"cfgs":[23],"code":"System.out.println(String.format(\"Scan time %s, next execution time: %s\", scanTime, nextExecutionTime))","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":184,"lineEnd":184,"lineMapIndex":-1,"methodParents":[],"nodeIndex":22},{"cfgs":[],"code":"assertNotNull(null)","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":185,"lineEnd":185,"lineMapIndex":-1,"methodParents":[],"nodeIndex":23},{"cfgs":[25],"code":"public void testCorrectNextExecutionDoW2()","dfgs":[25],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":192,"lineEnd":192,"lineMapIndex":68,"methodParents":[],"nodeIndex":24},{"cfgs":[],"code":"assertNotNull(null)","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":true,"lineBeg":201,"lineEnd":201,"lineMapIndex":-1,"methodParents":[],"nodeIndex":25},{"cfgs":[],"code":"import com.google.common.annotations.VisibleForTesting","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":5,"lineEnd":5,"lineMapIndex":-1,"methodParents":[],"nodeIndex":26},{"cfgs":[28,29],"code":"if(reference>=expression.getConstraints().getEndRange())","dfgs":[30,29,31,32],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":29,"lineEnd":29,"lineMapIndex":-1,"methodParents":[],"nodeIndex":27},{"cfgs":[29],"code":"throw new NoSuchValueException()","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":30,"lineEnd":30,"lineMapIndex":-1,"methodParents":[],"nodeIndex":28},{"cfgs":[30],"code":"int referenceWithOffset = reference+offset()","dfgs":[30],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":33,"lineEnd":33,"lineMapIndex":-1,"methodParents":[50],"nodeIndex":29},{"cfgs":[31],"code":"int remainder = referenceWithOffset % period","dfgs":[31],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":35,"lineEnd":35,"lineMapIndex":-1,"methodParents":[],"nodeIndex":30},{"cfgs":[32],"code":"int next = reference+(period-remainder)","dfgs":[32],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":36,"lineEnd":36,"lineMapIndex":-1,"methodParents":[],"nodeIndex":31},{"cfgs":[33,34],"code":"if(next<expression.getConstraints().getStartRange())","dfgs":[34,33],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":37,"lineEnd":37,"lineMapIndex":-1,"methodParents":[],"nodeIndex":32},{"cfgs":[],"code":"return expression.getConstraints().getStartRange()","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":38,"lineEnd":38,"lineMapIndex":-1,"methodParents":[],"nodeIndex":33},{"cfgs":[35,36],"code":"if(next>expression.getConstraints().getEndRange())","dfgs":[36],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":40,"lineEnd":40,"lineMapIndex":-1,"methodParents":[],"nodeIndex":34},{"cfgs":[36],"code":"throw new NoSuchValueException()","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":41,"lineEnd":41,"lineMapIndex":-1,"methodParents":[],"nodeIndex":35},{"cfgs":[],"code":"return next","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":43,"lineEnd":43,"lineMapIndex":-1,"methodParents":[],"nodeIndex":36},{"cfgs":[38,39],"code":"if(reference<expression.getConstraints().getStartRange())","dfgs":[40,39,42,44,43],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":48,"lineEnd":48,"lineMapIndex":-1,"methodParents":[],"nodeIndex":37},{"cfgs":[39],"code":"throw new NoSuchValueException()","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":49,"lineEnd":49,"lineMapIndex":-1,"methodParents":[],"nodeIndex":38},{"cfgs":[40],"code":"int referenceWithOffset = reference+offset()","dfgs":[40],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":52,"lineEnd":52,"lineMapIndex":-1,"methodParents":[50],"nodeIndex":39},{"cfgs":[42,43],"code":"int remainder = referenceWithOffset % period","dfgs":[43,42],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":54,"lineEnd":54,"lineMapIndex":71,"methodParents":[],"nodeIndex":40},{"cfgs":[],"code":"int previous","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":55,"lineEnd":55,"lineMapIndex":-1,"methodParents":[],"nodeIndex":41},{"cfgs":[44],"code":"previous = reference-period","dfgs":[44],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":57,"lineEnd":57,"lineMapIndex":-1,"methodParents":[],"nodeIndex":42},{"cfgs":[44],"code":"previous = reference-remainder","dfgs":[44],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":59,"lineEnd":59,"lineMapIndex":-1,"methodParents":[],"nodeIndex":43},{"cfgs":[45,46],"code":"if(previous<expression.getConstraints().getStartRange())","dfgs":[46],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":61,"lineEnd":61,"lineMapIndex":-1,"methodParents":[],"nodeIndex":44},{"cfgs":[46],"code":"throw new NoSuchValueException()","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":62,"lineEnd":62,"lineMapIndex":-1,"methodParents":[],"nodeIndex":45},{"cfgs":[47,48],"code":"if(previous>expression.getConstraints().getEndRange())","dfgs":[48,47],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":64,"lineEnd":64,"lineMapIndex":-1,"methodParents":[],"nodeIndex":46},{"cfgs":[],"code":"return expression.getConstraints().getEndRange()","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":65,"lineEnd":65,"lineMapIndex":-1,"methodParents":[],"nodeIndex":47},{"cfgs":[],"code":"return previous","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":67,"lineEnd":67,"lineMapIndex":-1,"methodParents":[],"nodeIndex":48},{"cfgs":[],"code":"return ((value+offset()) % every.getTime().getValue()) == 0","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":88,"lineEnd":88,"lineMapIndex":75,"methodParents":[50],"nodeIndex":49},{"cfgs":[51],"code":"int offset()","dfgs":[51],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":97,"lineEnd":97,"lineMapIndex":-1,"methodParents":[],"nodeIndex":50},{"cfgs":[],"code":"return 1-expression.getConstraints().getStartRange()","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":true,"lineBeg":98,"lineEnd":98,"lineMapIndex":-1,"methodParents":[],"nodeIndex":51},{"cfgs":[53],"code":"int value = time*j-(2+((int)(2*Math.random())))","dfgs":[54,53],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":true,"lineBeg":41,"lineEnd":41,"lineMapIndex":76,"methodParents":[],"nodeIndex":52},{"cfgs":[54],"code":"int expected = j*time-1","dfgs":[55],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":true,"lineBeg":42,"lineEnd":42,"lineMapIndex":-1,"methodParents":[],"nodeIndex":53},{"cfgs":[55],"code":"int calculated = fieldValueGenerator.generateNextValue(value)","dfgs":[55],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":true,"lineBeg":43,"lineEnd":43,"lineMapIndex":77,"methodParents":[27],"nodeIndex":54},{"cfgs":[],"code":"assertEquals(String.format(\"Next value for %s was expected %s, but got %s\", value, expected, calculated), expected, calculated)","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":true,"lineBeg":44,"lineEnd":44,"lineMapIndex":-1,"methodParents":[],"nodeIndex":55},{"cfgs":[],"code":"public void testGenerateNextValueNoNextValue() throws Exception ","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":true,"lineBeg":49,"lineEnd":49,"lineMapIndex":-1,"methodParents":[],"nodeIndex":56},{"cfgs":[],"code":"fieldValueGenerator.generateNextValue(Integer.MAX_VALUE)","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":true,"lineBeg":50,"lineEnd":50,"lineMapIndex":-1,"methodParents":[27],"nodeIndex":57},{"cfgs":[59],"code":"for(int j=1; j<10; j++)","dfgs":[59],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":true,"lineBeg":55,"lineEnd":55,"lineMapIndex":78,"methodParents":[],"nodeIndex":58},{"cfgs":[],"code":"assertEquals(j*time-1, fieldValueGenerator.generatePreviousValue(value))","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":true,"lineBeg":57,"lineEnd":57,"lineMapIndex":79,"methodParents":[37],"nodeIndex":59},{"cfgs":[],"code":"public void testGeneratePreviousValueNoPreviousValue() throws Exception ","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":true,"lineBeg":62,"lineEnd":62,"lineMapIndex":-1,"methodParents":[],"nodeIndex":60},{"cfgs":[],"code":"fieldValueGenerator.generatePreviousValue(0)","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":true,"lineBeg":63,"lineEnd":63,"lineMapIndex":-1,"methodParents":[37],"nodeIndex":61},{"cfgs":[],"code":"assertEquals(candidatesQty, candidates.size())","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":true,"lineBeg":70,"lineEnd":70,"lineMapIndex":80,"methodParents":[],"nodeIndex":62},{"cfgs":[],"code":"assertTrue(fieldValueGenerator.isMatch(time-1))","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":true,"lineBeg":75,"lineEnd":75,"lineMapIndex":81,"methodParents":[49],"nodeIndex":63},{"cfgs":[],"code":"for(int j=2; j<12; j++)","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_AlwaysFieldValueGeneratorTest.java","fieldParents":[],"isDel":true,"lineBeg":42,"lineEnd":42,"lineMapIndex":82,"methodParents":[],"nodeIndex":64},{"cfgs":[],"code":"assertTrue(nextRun.getHourOfDay() % 2 == 0)","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_ExecutionTimeCron4jIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":87,"lineEnd":87,"lineMapIndex":0,"methodParents":[],"nodeIndex":65},{"cfgs":[],"code":"assertTrue(nextRun.getMinuteOfHour() % 15 == 0)","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_ExecutionTimeCron4jIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":109,"lineEnd":109,"lineMapIndex":1,"methodParents":[],"nodeIndex":66},{"cfgs":[],"code":"public void testCorrectMonthScaleForNextExecution()","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":143,"lineEnd":143,"lineMapIndex":-1,"methodParents":[],"nodeIndex":67},{"cfgs":[69],"code":"public void testCorrectNextExecutionDoW()","dfgs":[69],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":158,"lineEnd":158,"lineMapIndex":24,"methodParents":[],"nodeIndex":68},{"cfgs":[],"code":"System.out.println(String.format(\"Scan time %s, next execution time: %s\", scanTime, nextExecutionTime))","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_ExecutionTimeUnixIntegrationTest.java","fieldParents":[],"isDel":false,"lineBeg":166,"lineEnd":166,"lineMapIndex":-1,"methodParents":[],"nodeIndex":69},{"cfgs":[],"code":"return reference + period","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":false,"lineBeg":30,"lineEnd":30,"lineMapIndex":-1,"methodParents":[],"nodeIndex":70},{"cfgs":[72,73],"code":"int remainder = reference % period","dfgs":[73,72],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":false,"lineBeg":37,"lineEnd":37,"lineMapIndex":40,"methodParents":[],"nodeIndex":71},{"cfgs":[],"code":"return reference-period","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":false,"lineBeg":39,"lineEnd":39,"lineMapIndex":-1,"methodParents":[],"nodeIndex":72},{"cfgs":[],"code":"return reference-remainder","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":false,"lineBeg":41,"lineEnd":41,"lineMapIndex":-1,"methodParents":[],"nodeIndex":73},{"cfgs":[75],"code":"int start = every.getConstraints().getStartRange()","dfgs":[75],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":false,"lineBeg":63,"lineEnd":63,"lineMapIndex":-1,"methodParents":[],"nodeIndex":74},{"cfgs":[],"code":"return ((value-start) % every.getTime().getValue()) == 0","dfgs":[],"fName":"src_main_java_com_cronutils_model_time_generator_EveryFieldValueGenerator.java","fieldParents":[],"isDel":false,"lineBeg":64,"lineEnd":64,"lineMapIndex":49,"methodParents":[],"nodeIndex":75},{"cfgs":[77],"code":"int value = time*j-1-((int)(2*Math.random()))","dfgs":[77],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":false,"lineBeg":41,"lineEnd":41,"lineMapIndex":52,"methodParents":[],"nodeIndex":76},{"cfgs":[],"code":"assertEquals(j*time, fieldValueGenerator.generateNextValue(value))","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":false,"lineBeg":42,"lineEnd":42,"lineMapIndex":54,"methodParents":[70],"nodeIndex":77},{"cfgs":[79],"code":"for(int j=0; j<10; j++)","dfgs":[79],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":false,"lineBeg":48,"lineEnd":48,"lineMapIndex":58,"methodParents":[],"nodeIndex":78},{"cfgs":[],"code":"assertEquals(j*time, fieldValueGenerator.generatePreviousValue(value))","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":false,"lineBeg":50,"lineEnd":50,"lineMapIndex":59,"methodParents":[71],"nodeIndex":79},{"cfgs":[],"code":"assertEquals(candidatesQty-1, candidates.size())","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":false,"lineBeg":58,"lineEnd":58,"lineMapIndex":62,"methodParents":[],"nodeIndex":80},{"cfgs":[],"code":"assertTrue(fieldValueGenerator.isMatch(time))","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_EveryFieldValueGeneratorTest.java","fieldParents":[],"isDel":false,"lineBeg":63,"lineEnd":63,"lineMapIndex":63,"methodParents":[74],"nodeIndex":81},{"cfgs":[],"code":"for(int j=0; j<10; j++)","dfgs":[],"fName":"src_test_java_com_cronutils_model_time_generator_AlwaysFieldValueGeneratorTest.java","fieldParents":[],"isDel":false,"lineBeg":42,"lineEnd":42,"lineMapIndex":64,"methodParents":[],"nodeIndex":82}]