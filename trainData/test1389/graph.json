[{"cfgs":[1],"code":"public void testLang59() throws Exception ","dfgs":[1,3,2],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":true,"lineBeg":982,"lineEnd":982,"lineMapIndex":-1,"methodParents":[],"nodeIndex":0},{"cfgs":[2],"code":"Date oct31_01MDT = new Date(1099206000000L)","dfgs":[2],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":true,"lineBeg":984,"lineEnd":984,"lineMapIndex":10,"methodParents":[],"nodeIndex":1},{"cfgs":[3],"code":"Date result = DateUtils.truncate(oct31_01MDT, Calendar.HOUR_OF_DAY)","dfgs":[3],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":true,"lineBeg":985,"lineEnd":985,"lineMapIndex":-1,"methodParents":[],"nodeIndex":2},{"cfgs":[],"code":"assertEquals(oct31_01MDT, result)","dfgs":[],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":true,"lineBeg":986,"lineEnd":986,"lineMapIndex":-1,"methodParents":[],"nodeIndex":3},{"cfgs":[],"code":"val.set(fields[i][0], val.get(fields[i][0]) - offset)","dfgs":[],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":true,"lineBeg":692,"lineEnd":692,"lineMapIndex":59,"methodParents":[],"nodeIndex":4},{"cfgs":[6],"code":"public void testTruncateLang59() throws Exception ","dfgs":[8,10,11,12,13,14,7,9,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,6,20],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":890,"lineEnd":890,"lineMapIndex":-1,"methodParents":[],"nodeIndex":5},{"cfgs":[7],"code":"TimeZone MST_MDT = TimeZone.getTimeZone(\"MST7MDT\")","dfgs":[7],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":893,"lineEnd":893,"lineMapIndex":-1,"methodParents":[],"nodeIndex":6},{"cfgs":[8],"code":"TimeZone.setDefault(MST_MDT)","dfgs":[9,36],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":894,"lineEnd":894,"lineMapIndex":-1,"methodParents":[],"nodeIndex":7},{"cfgs":[9],"code":"DateFormat format = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSS z\")","dfgs":[9],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":895,"lineEnd":895,"lineMapIndex":-1,"methodParents":[],"nodeIndex":8},{"cfgs":[10],"code":"format.setTimeZone(MST_MDT)","dfgs":[15],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":896,"lineEnd":896,"lineMapIndex":-1,"methodParents":[],"nodeIndex":9},{"cfgs":[11],"code":"Date oct31_01MDT = new Date(1099206000000L)","dfgs":[11],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":898,"lineEnd":898,"lineMapIndex":1,"methodParents":[],"nodeIndex":10},{"cfgs":[12],"code":"Date oct31MDT             = new Date(oct31_01MDT.getTime()       - 3600000L)","dfgs":[15,12],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":900,"lineEnd":900,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[13],"code":"Date oct31_01_02MDT       = new Date(oct31_01MDT.getTime()       + 120000L)","dfgs":[16,13],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":901,"lineEnd":901,"lineMapIndex":-1,"methodParents":[],"nodeIndex":12},{"cfgs":[14],"code":"Date oct31_01_02_03MDT    = new Date(oct31_01_02MDT.getTime()    + 3000L)","dfgs":[17,14],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":902,"lineEnd":902,"lineMapIndex":-1,"methodParents":[],"nodeIndex":13},{"cfgs":[15],"code":"Date oct31_01_02_03_04MDT = new Date(oct31_01_02_03MDT.getTime() + 4L)","dfgs":[18,19],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":903,"lineEnd":903,"lineMapIndex":-1,"methodParents":[],"nodeIndex":14},{"cfgs":[16],"code":"assertEquals(\"Check 00:00:00.000\", \"2004-10-31 00:00:00.000 MDT\", format.format(oct31MDT))","dfgs":[16,29],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":905,"lineEnd":905,"lineMapIndex":-1,"methodParents":[],"nodeIndex":15},{"cfgs":[17],"code":"assertEquals(\"Check 01:00:00.000\", \"2004-10-31 01:00:00.000 MDT\", format.format(oct31_01MDT))","dfgs":[17,21],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":906,"lineEnd":906,"lineMapIndex":-1,"methodParents":[],"nodeIndex":16},{"cfgs":[18],"code":"assertEquals(\"Check 01:02:00.000\", \"2004-10-31 01:02:00.000 MDT\", format.format(oct31_01_02MDT))","dfgs":[18,26],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":907,"lineEnd":907,"lineMapIndex":-1,"methodParents":[],"nodeIndex":17},{"cfgs":[19],"code":"assertEquals(\"Check 01:02:03.000\", \"2004-10-31 01:02:03.000 MDT\", format.format(oct31_01_02_03MDT))","dfgs":[19,25],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":908,"lineEnd":908,"lineMapIndex":-1,"methodParents":[],"nodeIndex":18},{"cfgs":[20],"code":"assertEquals(\"Check 01:02:03.004\", \"2004-10-31 01:02:03.004 MDT\", format.format(oct31_01_02_03_04MDT))","dfgs":[23,24],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":909,"lineEnd":909,"lineMapIndex":-1,"methodParents":[],"nodeIndex":19},{"cfgs":[21],"code":"Calendar gval = Calendar.getInstance()","dfgs":[21,22,24,25,26,27,28,29,30,31,32,33,34,35],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":912,"lineEnd":912,"lineMapIndex":-1,"methodParents":[],"nodeIndex":20},{"cfgs":[22],"code":"gval.setTime(new Date(oct31_01MDT.getTime()))","dfgs":[22,23],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":913,"lineEnd":913,"lineMapIndex":-1,"methodParents":[],"nodeIndex":21},{"cfgs":[23],"code":"gval.set(Calendar.MINUTE, gval.get(Calendar.MINUTE))","dfgs":[26,23],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":914,"lineEnd":914,"lineMapIndex":-1,"methodParents":[],"nodeIndex":22},{"cfgs":[24],"code":"assertEquals(\"Demonstrate Problem\", gval.getTime().getTime(), oct31_01MDT.getTime() + 3600000L)","dfgs":[24,27],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":915,"lineEnd":915,"lineMapIndex":-1,"methodParents":[],"nodeIndex":23},{"cfgs":[25],"code":"assertEquals(\"Truncate Calendar.MILLISECOND\",oct31_01_02_03_04MDT, DateUtils.truncate(oct31_01_02_03_04MDT, Calendar.MILLISECOND))","dfgs":[25,30],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":918,"lineEnd":919,"lineMapIndex":-1,"methodParents":[],"nodeIndex":24},{"cfgs":[26],"code":"assertEquals(\"Truncate Calendar.SECOND\",oct31_01_02_03MDT, DateUtils.truncate(oct31_01_02_03_04MDT, Calendar.SECOND))","dfgs":[26,31],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":921,"lineEnd":922,"lineMapIndex":-1,"methodParents":[],"nodeIndex":25},{"cfgs":[27],"code":"assertEquals(\"Truncate Calendar.MINUTE\",oct31_01_02MDT, DateUtils.truncate(oct31_01_02_03_04MDT, Calendar.MINUTE))","dfgs":[27,32],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":924,"lineEnd":925,"lineMapIndex":-1,"methodParents":[],"nodeIndex":26},{"cfgs":[28],"code":"assertEquals(\"Truncate Calendar.HOUR_OF_DAY\",oct31_01MDT, DateUtils.truncate(oct31_01_02_03_04MDT, Calendar.HOUR_OF_DAY))","dfgs":[28,33],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":927,"lineEnd":928,"lineMapIndex":-1,"methodParents":[],"nodeIndex":27},{"cfgs":[29],"code":"assertEquals(\"Truncate Calendar.HOUR\",oct31_01MDT, DateUtils.truncate(oct31_01_02_03_04MDT, Calendar.HOUR))","dfgs":[29,33,34],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":930,"lineEnd":931,"lineMapIndex":-1,"methodParents":[],"nodeIndex":28},{"cfgs":[30],"code":"assertEquals(\"Truncate Calendar.DATE\",oct31MDT, DateUtils.truncate(oct31_01_02_03_04MDT, Calendar.DATE))","dfgs":[30,35],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":933,"lineEnd":934,"lineMapIndex":-1,"methodParents":[],"nodeIndex":29},{"cfgs":[31],"code":"assertEquals(\"Round Calendar.MILLISECOND\",oct31_01_02_03_04MDT, DateUtils.round(oct31_01_02_03_04MDT, Calendar.MILLISECOND))","dfgs":[31],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":938,"lineEnd":939,"lineMapIndex":-1,"methodParents":[],"nodeIndex":30},{"cfgs":[32],"code":"assertEquals(\"Round Calendar.SECOND\",oct31_01_02_03MDT, DateUtils.round(oct31_01_02_03_04MDT, Calendar.SECOND))","dfgs":[32],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":941,"lineEnd":942,"lineMapIndex":-1,"methodParents":[],"nodeIndex":31},{"cfgs":[33],"code":"assertEquals(\"Round Calendar.MINUTE\",oct31_01_02MDT, DateUtils.round(oct31_01_02_03_04MDT, Calendar.MINUTE))","dfgs":[33],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":944,"lineEnd":945,"lineMapIndex":-1,"methodParents":[],"nodeIndex":32},{"cfgs":[34],"code":"assertEquals(\"Round Calendar.HOUR_OF_DAY\",oct31_01MDT, DateUtils.round(oct31_01_02_03_04MDT, Calendar.HOUR_OF_DAY))","dfgs":[34],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":947,"lineEnd":948,"lineMapIndex":-1,"methodParents":[],"nodeIndex":33},{"cfgs":[35],"code":"assertEquals(\"Round Calendar.HOUR\",oct31_01MDT, DateUtils.round(oct31_01_02_03_04MDT, Calendar.HOUR))","dfgs":[35],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":950,"lineEnd":951,"lineMapIndex":-1,"methodParents":[],"nodeIndex":34},{"cfgs":[36],"code":"assertEquals(\"Round Calendar.DATE\",oct31MDT, DateUtils.round(oct31_01_02_03_04MDT, Calendar.DATE))","dfgs":[36],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":953,"lineEnd":954,"lineMapIndex":-1,"methodParents":[],"nodeIndex":35},{"cfgs":[],"code":"TimeZone.setDefault(defaultZone)","dfgs":[],"fName":"src_test_org_apache_commons_lang_time_DateUtilsTest.java","fieldParents":[],"isDel":false,"lineBeg":957,"lineEnd":957,"lineMapIndex":-1,"methodParents":[],"nodeIndex":36},{"cfgs":[38,39],"code":"if (field == Calendar.MILLISECOND)","dfgs":[42,45,50],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":624,"lineEnd":624,"lineMapIndex":-1,"methodParents":[],"nodeIndex":37},{"cfgs":[],"code":"return","dfgs":[],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":625,"lineEnd":625,"lineMapIndex":-1,"methodParents":[],"nodeIndex":38},{"cfgs":[40],"code":"Date date = val.getTime()","dfgs":[40,42],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":634,"lineEnd":634,"lineMapIndex":-1,"methodParents":[],"nodeIndex":39},{"cfgs":[41],"code":"long time = date.getTime()","dfgs":[55,44,49,54],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":635,"lineEnd":635,"lineMapIndex":-1,"methodParents":[],"nodeIndex":40},{"cfgs":[42],"code":"boolean done = false","dfgs":[48],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":636,"lineEnd":636,"lineMapIndex":-1,"methodParents":[],"nodeIndex":41},{"cfgs":[43],"code":"int millisecs = val.get(Calendar.MILLISECOND)","dfgs":[47,43,44],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":639,"lineEnd":639,"lineMapIndex":-1,"methodParents":[],"nodeIndex":42},{"cfgs":[44,47],"code":"if (!round || millisecs < 500)","dfgs":[44,48,53],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":640,"lineEnd":640,"lineMapIndex":-1,"methodParents":[],"nodeIndex":43},{"cfgs":[45],"code":"time = time - millisecs","dfgs":[55,49,54],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":641,"lineEnd":641,"lineMapIndex":-1,"methodParents":[],"nodeIndex":44},{"cfgs":[46,47],"code":"if (field == Calendar.SECOND)","dfgs":[47,50],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":642,"lineEnd":642,"lineMapIndex":-1,"methodParents":[],"nodeIndex":45},{"cfgs":[47],"code":"done = true","dfgs":[48],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":643,"lineEnd":643,"lineMapIndex":-1,"methodParents":[],"nodeIndex":46},{"cfgs":[48],"code":"int seconds = val.get(Calendar.SECOND)","dfgs":[52,48,49],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":648,"lineEnd":648,"lineMapIndex":-1,"methodParents":[],"nodeIndex":47},{"cfgs":[49,52],"code":"if (!done && (!round || seconds < 30))","dfgs":[53,49],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":649,"lineEnd":649,"lineMapIndex":-1,"methodParents":[],"nodeIndex":48},{"cfgs":[50],"code":"time = time - (seconds * 1000L)","dfgs":[55,54],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":650,"lineEnd":650,"lineMapIndex":-1,"methodParents":[],"nodeIndex":49},{"cfgs":[51,52],"code":"if (field == Calendar.MINUTE)","dfgs":[52],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":651,"lineEnd":651,"lineMapIndex":-1,"methodParents":[],"nodeIndex":50},{"cfgs":[52],"code":"done = true","dfgs":[53],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":652,"lineEnd":652,"lineMapIndex":-1,"methodParents":[],"nodeIndex":51},{"cfgs":[53],"code":"int minutes = val.get(Calendar.MINUTE)","dfgs":[57,53,54,59,58],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":657,"lineEnd":657,"lineMapIndex":-1,"methodParents":[],"nodeIndex":52},{"cfgs":[54,55],"code":"if (!done && (!round || minutes < 30))","dfgs":[54],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":658,"lineEnd":658,"lineMapIndex":-1,"methodParents":[],"nodeIndex":53},{"cfgs":[55],"code":"time = time - (minutes * 60000L)","dfgs":[55],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":659,"lineEnd":659,"lineMapIndex":-1,"methodParents":[],"nodeIndex":54},{"cfgs":[56,58],"code":"if (date.getTime() != time)","dfgs":[56],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":663,"lineEnd":663,"lineMapIndex":-1,"methodParents":[],"nodeIndex":55},{"cfgs":[57],"code":"date.setTime(time)","dfgs":[57],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":664,"lineEnd":664,"lineMapIndex":-1,"methodParents":[],"nodeIndex":56},{"cfgs":[58],"code":"val.setTime(date)","dfgs":[59,58],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":665,"lineEnd":665,"lineMapIndex":-1,"methodParents":[],"nodeIndex":57},{"cfgs":[59],"code":"if (offset != 0)","dfgs":[59],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":737,"lineEnd":737,"lineMapIndex":-1,"methodParents":[],"nodeIndex":58},{"cfgs":[],"code":"val.set(fields[i][0], val.get(fields[i][0]) - offset)","dfgs":[],"fName":"src_java_org_apache_commons_lang_time_DateUtils.java","fieldParents":[],"isDel":false,"lineBeg":738,"lineEnd":738,"lineMapIndex":4,"methodParents":[],"nodeIndex":59}]