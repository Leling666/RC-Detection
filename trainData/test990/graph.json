[{"cfgs":[1],"code":"public List<String> getValues() ","dfgs":[1],"fName":"src_main_java_com_healthmarketscience_jackcess_impl_query_AppendQueryImpl.java","fieldParents":[],"isDel":true,"lineBeg":60,"lineEnd":60,"lineMapIndex":6,"methodParents":[],"nodeIndex":0},{"cfgs":[],"code":"return new RowFormatter(getValueRows()) {@Override protected void format(StringBuilder builder, Row row) {builder.append(row.expression);}}.format()","dfgs":[],"fName":"src_main_java_com_healthmarketscience_jackcess_impl_query_AppendQueryImpl.java","fieldParents":[],"isDel":true,"lineBeg":61,"lineEnd":65,"lineMapIndex":7,"methodParents":[],"nodeIndex":1},{"cfgs":[],"code":"builder.append(row.expression)","dfgs":[],"fName":"src_main_java_com_healthmarketscience_jackcess_impl_query_AppendQueryImpl.java","fieldParents":[],"isDel":true,"lineBeg":63,"lineEnd":63,"lineMapIndex":-1,"methodParents":[],"nodeIndex":2},{"cfgs":[],"code":"expectedQueries.put(\"AppendQuery\",multiline(\"INSERT INTO Table3\",\"SELECT [Table1].[col2], [Table2].[col2], [Table2].[col3]\",\"FROM Table3, Table1 INNER JOIN Table2 ON [Table1].[col1]=[Table2].[col1];\"))","dfgs":[],"fName":"src_test_java_com_healthmarketscience_jackcess_query_QueryTest.java","fieldParents":[],"isDel":true,"lineBeg":207,"lineEnd":211,"lineMapIndex":13,"methodParents":[],"nodeIndex":3},{"cfgs":[5],"code":"public List<String> getTargetColumns() ","dfgs":[5],"fName":"src_main_java_com_healthmarketscience_jackcess_impl_query_AppendQueryImpl.java","fieldParents":[],"isDel":false,"lineBeg":43,"lineEnd":43,"lineMapIndex":-1,"methodParents":[],"nodeIndex":4},{"cfgs":[],"code":"return new RowFormatter(getTargetRows()) {@Override protected void format(StringBuilder builder, Row row) {toOptionalQuotedExpr(builder, row.name2, true);}}.format()","dfgs":[],"fName":"src_main_java_com_healthmarketscience_jackcess_impl_query_AppendQueryImpl.java","fieldParents":[],"isDel":false,"lineBeg":44,"lineEnd":48,"lineMapIndex":-1,"methodParents":[8],"nodeIndex":5},{"cfgs":[7],"code":"public List<String> getValues() ","dfgs":[7],"fName":"src_main_java_com_healthmarketscience_jackcess_impl_query_AppendQueryImpl.java","fieldParents":[],"isDel":false,"lineBeg":59,"lineEnd":59,"lineMapIndex":0,"methodParents":[],"nodeIndex":6},{"cfgs":[],"code":"return new RowFormatter(getValueRows()) {@Override protected void format(StringBuilder builder, Row row) {builder.append(row.expression);}}.format()","dfgs":[],"fName":"src_main_java_com_healthmarketscience_jackcess_impl_query_AppendQueryImpl.java","fieldParents":[],"isDel":false,"lineBeg":60,"lineEnd":64,"lineMapIndex":1,"methodParents":[],"nodeIndex":7},{"cfgs":[9],"code":"protected List<Row> getTargetRows() ","dfgs":[9],"fName":"src_main_java_com_healthmarketscience_jackcess_impl_query_AppendQueryImpl.java","fieldParents":[],"isDel":false,"lineBeg":76,"lineEnd":76,"lineMapIndex":-1,"methodParents":[],"nodeIndex":8},{"cfgs":[],"code":"return new RowFilter() {@Override protected boolean keep(Row row) {return (row.name2 != null);}}.filter(super.getColumnRows())","dfgs":[],"fName":"src_main_java_com_healthmarketscience_jackcess_impl_query_AppendQueryImpl.java","fieldParents":[],"isDel":false,"lineBeg":77,"lineEnd":81,"lineMapIndex":-1,"methodParents":[],"nodeIndex":9},{"cfgs":[11],"code":"List<String> columns = getTargetColumns()","dfgs":[11],"fName":"src_main_java_com_healthmarketscience_jackcess_impl_query_AppendQueryImpl.java","fieldParents":[],"isDel":false,"lineBeg":89,"lineEnd":89,"lineMapIndex":-1,"methodParents":[4],"nodeIndex":10},{"cfgs":[12],"code":"if(!columns.isEmpty())","dfgs":[12],"fName":"src_main_java_com_healthmarketscience_jackcess_impl_query_AppendQueryImpl.java","fieldParents":[],"isDel":false,"lineBeg":90,"lineEnd":90,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[],"code":"builder.append(\" (\").append(columns).append(')')","dfgs":[],"fName":"src_main_java_com_healthmarketscience_jackcess_impl_query_AppendQueryImpl.java","fieldParents":[],"isDel":false,"lineBeg":91,"lineEnd":91,"lineMapIndex":-1,"methodParents":[],"nodeIndex":12},{"cfgs":[],"code":"expectedQueries.put(\"AppendQuery\",multiline(\"INSERT INTO Table3 (col2, col2, col3)\",\"SELECT [Table1].[col2], [Table2].[col2], [Table2].[col3]\",\"FROM Table3, Table1 INNER JOIN Table2 ON [Table1].[col1]=[Table2].[col1];\"))","dfgs":[],"fName":"src_test_java_com_healthmarketscience_jackcess_query_QueryTest.java","fieldParents":[],"isDel":false,"lineBeg":207,"lineEnd":211,"lineMapIndex":3,"methodParents":[],"nodeIndex":13},{"cfgs":[15],"code":"public void testAppendQuery() throws Exception","dfgs":[15,17,16,18],"fName":"src_test_java_com_healthmarketscience_jackcess_query_QueryTest.java","fieldParents":[],"isDel":false,"lineBeg":260,"lineEnd":261,"lineMapIndex":-1,"methodParents":[],"nodeIndex":14},{"cfgs":[16],"code":"AppendQuery query = (AppendQuery)newQuery(Query.Type.APPEND, null, \"Table2\",// newRow(TABLE_ATTRIBUTE, null, \"Table1\", null),newRow(COLUMN_ATTRIBUTE, \"54\", APPEND_VALUE_FLAG, null, null),newRow(COLUMN_ATTRIBUTE, \"'hello'\", APPEND_VALUE_FLAG, null, null))","dfgs":[16,17],"fName":"src_test_java_com_healthmarketscience_jackcess_query_QueryTest.java","fieldParents":[],"isDel":false,"lineBeg":262,"lineEnd":266,"lineMapIndex":-1,"methodParents":[],"nodeIndex":15},{"cfgs":[17],"code":"assertEquals(multiline(\"INSERT INTO Table2\", \"VALUES (54, 'hello');\"), query.toSQLString())","dfgs":[17],"fName":"src_test_java_com_healthmarketscience_jackcess_query_QueryTest.java","fieldParents":[],"isDel":false,"lineBeg":268,"lineEnd":269,"lineMapIndex":-1,"methodParents":[],"nodeIndex":16},{"cfgs":[18],"code":"query = (AppendQuery)newQuery(Query.Type.APPEND, null, \"Table2\",// newRow(TABLE_ATTRIBUTE, null, \"Table1\", null),newRow(COLUMN_ATTRIBUTE, \"54\", APPEND_VALUE_FLAG, null, \"ID\"),newRow(COLUMN_ATTRIBUTE, \"'hello'\", APPEND_VALUE_FLAG, null, \"Field 3\"))","dfgs":[18],"fName":"src_test_java_com_healthmarketscience_jackcess_query_QueryTest.java","fieldParents":[],"isDel":false,"lineBeg":271,"lineEnd":275,"lineMapIndex":-1,"methodParents":[],"nodeIndex":17},{"cfgs":[],"code":"assertEquals(multiline(\"INSERT INTO Table2 (ID, [Field 3])\", \"VALUES (54, 'hello');\"), query.toSQLString())","dfgs":[],"fName":"src_test_java_com_healthmarketscience_jackcess_query_QueryTest.java","fieldParents":[],"isDel":false,"lineBeg":277,"lineEnd":278,"lineMapIndex":-1,"methodParents":[],"nodeIndex":18},{"cfgs":[],"code":"public List<String> getTargetColumns()","dfgs":[],"fName":"src_main_java_com_healthmarketscience_jackcess_query_AppendQuery.java","fieldParents":[],"isDel":false,"lineBeg":33,"lineEnd":33,"lineMapIndex":-1,"methodParents":[],"nodeIndex":19}]