[{"cfgs":[1],"code":"final EigenDecomposition dec = new EigenDecomposition(m)","dfgs":[1],"fName":"src_main_java_org_apache_commons_math3_optimization_general_AbstractLeastSquaresOptimizer.java","fieldParents":[],"isDel":true,"lineBeg":561,"lineEnd":561,"lineMapIndex":15,"methodParents":[],"nodeIndex":0},{"cfgs":[],"code":"return dec.getSquareRoot()","dfgs":[],"fName":"src_main_java_org_apache_commons_math3_optimization_general_AbstractLeastSquaresOptimizer.java","fieldParents":[],"isDel":true,"lineBeg":562,"lineEnd":562,"lineMapIndex":16,"methodParents":[],"nodeIndex":1},{"cfgs":[],"code":"import org.apache.commons.math3.linear.Array2DRowRealMatrix","dfgs":[],"fName":"src_main_java_org_apache_commons_math3_optimization_Weight.java","fieldParents":[],"isDel":true,"lineBeg":21,"lineEnd":21,"lineMapIndex":33,"methodParents":[],"nodeIndex":2},{"cfgs":[4],"code":"final int dim = weight.length","dfgs":[4],"fName":"src_main_java_org_apache_commons_math3_optimization_Weight.java","fieldParents":[],"isDel":true,"lineBeg":44,"lineEnd":44,"lineMapIndex":-1,"methodParents":[],"nodeIndex":3},{"cfgs":[5],"code":"weightMatrix = new Array2DRowRealMatrix(dim, dim)","dfgs":[5,6],"fName":"src_main_java_org_apache_commons_math3_optimization_Weight.java","fieldParents":[],"isDel":true,"lineBeg":45,"lineEnd":45,"lineMapIndex":34,"methodParents":[],"nodeIndex":4},{"cfgs":[6],"code":"for (int i = 0; i < dim; i++)","dfgs":[6],"fName":"src_main_java_org_apache_commons_math3_optimization_Weight.java","fieldParents":[],"isDel":true,"lineBeg":46,"lineEnd":46,"lineMapIndex":-1,"methodParents":[],"nodeIndex":5},{"cfgs":[],"code":"weightMatrix.setEntry(i, i, weight[i])","dfgs":[],"fName":"src_main_java_org_apache_commons_math3_optimization_Weight.java","fieldParents":[],"isDel":true,"lineBeg":47,"lineEnd":47,"lineMapIndex":-1,"methodParents":[],"nodeIndex":6},{"cfgs":[],"code":"import org.apache.commons.math3.linear.DiagonalMatrix","dfgs":[],"fName":"src_main_java_org_apache_commons_math3_optimization_general_AbstractLeastSquaresOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":29,"lineEnd":29,"lineMapIndex":-1,"methodParents":[],"nodeIndex":7},{"cfgs":[9,14],"code":"if (m instanceof DiagonalMatrix)","dfgs":[9,15],"fName":"src_main_java_org_apache_commons_math3_optimization_general_AbstractLeastSquaresOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":562,"lineEnd":562,"lineMapIndex":-1,"methodParents":[],"nodeIndex":8},{"cfgs":[10],"code":"final int dim = m.getRowDimension()","dfgs":[10,12],"fName":"src_main_java_org_apache_commons_math3_optimization_general_AbstractLeastSquaresOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":563,"lineEnd":563,"lineMapIndex":-1,"methodParents":[],"nodeIndex":9},{"cfgs":[11],"code":"final RealMatrix sqrtM = new DiagonalMatrix(dim)","dfgs":[13,11,12],"fName":"src_main_java_org_apache_commons_math3_optimization_general_AbstractLeastSquaresOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":564,"lineEnd":564,"lineMapIndex":-1,"methodParents":[],"nodeIndex":10},{"cfgs":[12],"code":"for (int i = 0; i < dim; i++)","dfgs":[12],"fName":"src_main_java_org_apache_commons_math3_optimization_general_AbstractLeastSquaresOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":565,"lineEnd":565,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[13],"code":"sqrtM.setEntry(i, i, FastMath.sqrt(m.getEntry(i, i)))","dfgs":[13],"fName":"src_main_java_org_apache_commons_math3_optimization_general_AbstractLeastSquaresOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":566,"lineEnd":566,"lineMapIndex":-1,"methodParents":[],"nodeIndex":12},{"cfgs":[],"code":"return sqrtM","dfgs":[],"fName":"src_main_java_org_apache_commons_math3_optimization_general_AbstractLeastSquaresOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":568,"lineEnd":568,"lineMapIndex":-1,"methodParents":[],"nodeIndex":13},{"cfgs":[15],"code":"else","dfgs":[],"fName":"src_main_java_org_apache_commons_math3_optimization_general_AbstractLeastSquaresOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":569,"lineEnd":569,"lineMapIndex":-1,"methodParents":[],"nodeIndex":14},{"cfgs":[16],"code":"final EigenDecomposition dec = new EigenDecomposition(m)","dfgs":[16],"fName":"src_main_java_org_apache_commons_math3_optimization_general_AbstractLeastSquaresOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":570,"lineEnd":570,"lineMapIndex":0,"methodParents":[],"nodeIndex":15},{"cfgs":[],"code":"return dec.getSquareRoot()","dfgs":[],"fName":"src_main_java_org_apache_commons_math3_optimization_general_AbstractLeastSquaresOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":571,"lineEnd":571,"lineMapIndex":1,"methodParents":[],"nodeIndex":16},{"cfgs":[],"code":"public void testLargeSample() ","dfgs":[],"fName":"src_test_java_org_apache_commons_math3_optimization_fitting_PolynomialFitterTest.java","fieldParents":[],"isDel":false,"lineBeg":227,"lineEnd":227,"lineMapIndex":-1,"methodParents":[],"nodeIndex":17},{"cfgs":[19],"code":"Random randomizer = new Random(0x5551480dca5b369bl)","dfgs":[21],"fName":"src_test_java_org_apache_commons_math3_optimization_fitting_PolynomialFitterTest.java","fieldParents":[],"isDel":false,"lineBeg":228,"lineEnd":228,"lineMapIndex":-1,"methodParents":[],"nodeIndex":18},{"cfgs":[20],"code":"double maxError = 0","dfgs":[32,30],"fName":"src_test_java_org_apache_commons_math3_optimization_fitting_PolynomialFitterTest.java","fieldParents":[],"isDel":false,"lineBeg":229,"lineEnd":229,"lineMapIndex":-1,"methodParents":[],"nodeIndex":19},{"cfgs":[21,32],"code":"for (int degree = 0; degree < 10; ++degree)","dfgs":[21],"fName":"src_test_java_org_apache_commons_math3_optimization_fitting_PolynomialFitterTest.java","fieldParents":[],"isDel":false,"lineBeg":230,"lineEnd":230,"lineMapIndex":-1,"methodParents":[],"nodeIndex":20},{"cfgs":[22],"code":"PolynomialFunction p = buildRandomPolynomial(degree, randomizer)","dfgs":[26,25,29],"fName":"src_test_java_org_apache_commons_math3_optimization_fitting_PolynomialFitterTest.java","fieldParents":[],"isDel":false,"lineBeg":231,"lineEnd":231,"lineMapIndex":-1,"methodParents":[],"nodeIndex":21},{"cfgs":[23],"code":"PolynomialFitter fitter = new PolynomialFitter(new LevenbergMarquardtOptimizer())","dfgs":[27,25],"fName":"src_test_java_org_apache_commons_math3_optimization_fitting_PolynomialFitterTest.java","fieldParents":[],"isDel":false,"lineBeg":233,"lineEnd":233,"lineMapIndex":-1,"methodParents":[],"nodeIndex":22},{"cfgs":[24,26],"code":"for (int i = 0; i < 40000; ++i)","dfgs":[24],"fName":"src_test_java_org_apache_commons_math3_optimization_fitting_PolynomialFitterTest.java","fieldParents":[],"isDel":false,"lineBeg":234,"lineEnd":234,"lineMapIndex":-1,"methodParents":[],"nodeIndex":23},{"cfgs":[25],"code":"double x = -1.0 + i / 20000.0","dfgs":[25],"fName":"src_test_java_org_apache_commons_math3_optimization_fitting_PolynomialFitterTest.java","fieldParents":[],"isDel":false,"lineBeg":235,"lineEnd":235,"lineMapIndex":-1,"methodParents":[],"nodeIndex":24},{"cfgs":[],"code":"fitter.addObservedPoint(1.0, x,p.value(x) + 0.1 * randomizer.nextGaussian())","dfgs":[27,29],"fName":"src_test_java_org_apache_commons_math3_optimization_fitting_PolynomialFitterTest.java","fieldParents":[],"isDel":false,"lineBeg":236,"lineEnd":237,"lineMapIndex":-1,"methodParents":[],"nodeIndex":25},{"cfgs":[27],"code":"final double[] init = new double[degree + 1]","dfgs":[27],"fName":"src_test_java_org_apache_commons_math3_optimization_fitting_PolynomialFitterTest.java","fieldParents":[],"isDel":false,"lineBeg":240,"lineEnd":240,"lineMapIndex":-1,"methodParents":[],"nodeIndex":26},{"cfgs":[28],"code":"PolynomialFunction fitted = new PolynomialFunction(fitter.fit(init))","dfgs":[29],"fName":"src_test_java_org_apache_commons_math3_optimization_fitting_PolynomialFitterTest.java","fieldParents":[],"isDel":false,"lineBeg":241,"lineEnd":241,"lineMapIndex":-1,"methodParents":[],"nodeIndex":27},{"cfgs":[29],"code":"for (double x = -1.0; x < 1.0; x += 0.01)","dfgs":[29],"fName":"src_test_java_org_apache_commons_math3_optimization_fitting_PolynomialFitterTest.java","fieldParents":[],"isDel":false,"lineBeg":243,"lineEnd":243,"lineMapIndex":-1,"methodParents":[],"nodeIndex":28},{"cfgs":[30],"code":"double error = FastMath.abs(p.value(x) - fitted.value(x)) /(1.0 + FastMath.abs(p.value(x)))","dfgs":[30],"fName":"src_test_java_org_apache_commons_math3_optimization_fitting_PolynomialFitterTest.java","fieldParents":[],"isDel":false,"lineBeg":244,"lineEnd":245,"lineMapIndex":-1,"methodParents":[],"nodeIndex":29},{"cfgs":[31],"code":"maxError = FastMath.max(maxError, error)","dfgs":[32,31],"fName":"src_test_java_org_apache_commons_math3_optimization_fitting_PolynomialFitterTest.java","fieldParents":[],"isDel":false,"lineBeg":246,"lineEnd":246,"lineMapIndex":-1,"methodParents":[],"nodeIndex":30},{"cfgs":[],"code":"Assert.assertTrue(FastMath.abs(error) < 0.01)","dfgs":[32],"fName":"src_test_java_org_apache_commons_math3_optimization_fitting_PolynomialFitterTest.java","fieldParents":[],"isDel":false,"lineBeg":247,"lineEnd":247,"lineMapIndex":-1,"methodParents":[],"nodeIndex":31},{"cfgs":[],"code":"Assert.assertTrue(maxError > 0.001)","dfgs":[],"fName":"src_test_java_org_apache_commons_math3_optimization_fitting_PolynomialFitterTest.java","fieldParents":[],"isDel":false,"lineBeg":250,"lineEnd":250,"lineMapIndex":-1,"methodParents":[],"nodeIndex":32},{"cfgs":[],"code":"import org.apache.commons.math3.linear.DiagonalMatrix","dfgs":[],"fName":"src_main_java_org_apache_commons_math3_optimization_Weight.java","fieldParents":[],"isDel":false,"lineBeg":21,"lineEnd":21,"lineMapIndex":2,"methodParents":[],"nodeIndex":33},{"cfgs":[],"code":"weightMatrix = new DiagonalMatrix(weight)","dfgs":[],"fName":"src_main_java_org_apache_commons_math3_optimization_Weight.java","fieldParents":[],"isDel":false,"lineBeg":44,"lineEnd":44,"lineMapIndex":4,"methodParents":[],"nodeIndex":34}]