[{"cfgs":[1],"code":"RawTextNode newNode =RawTextNode.concat((List<RawTextNode>) parent.getChildren().subList(start, lastNonEmptyRawTextNode + 1))","dfgs":[1],"fName":"java_src_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPass.java","fieldParents":[],"isDel":true,"lineBeg":104,"lineEnd":106,"lineMapIndex":3,"methodParents":[],"nodeIndex":0},{"cfgs":[],"code":"((ParentSoyNode) parent).replaceChild(start, newNode)","dfgs":[],"fName":"java_src_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPass.java","fieldParents":[],"isDel":true,"lineBeg":107,"lineEnd":107,"lineMapIndex":4,"methodParents":[],"nodeIndex":1},{"cfgs":[3],"code":"if (start < lastNonEmptyRawTextNode)","dfgs":[3],"fName":"java_src_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPass.java","fieldParents":[],"isDel":false,"lineBeg":104,"lineEnd":104,"lineMapIndex":-1,"methodParents":[],"nodeIndex":2},{"cfgs":[4],"code":"RawTextNode newNode =RawTextNode.concat((List<RawTextNode>) parent.getChildren().subList(start, lastNonEmptyRawTextNode + 1))","dfgs":[4],"fName":"java_src_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPass.java","fieldParents":[],"isDel":false,"lineBeg":105,"lineEnd":107,"lineMapIndex":0,"methodParents":[],"nodeIndex":3},{"cfgs":[],"code":"((ParentSoyNode) parent).replaceChild(start, newNode)","dfgs":[],"fName":"java_src_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPass.java","fieldParents":[],"isDel":false,"lineBeg":109,"lineEnd":109,"lineMapIndex":1,"methodParents":[],"nodeIndex":4},{"cfgs":[],"code":"import com.google.template.soy.soytree.SoyNode.Kind","dfgs":[],"fName":"java_tests_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPassTest.java","fieldParents":[],"isDel":false,"lineBeg":28,"lineEnd":28,"lineMapIndex":-1,"methodParents":[],"nodeIndex":5},{"cfgs":[],"code":"public void testForConcurrentModificationBug() ","dfgs":[],"fName":"java_tests_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPassTest.java","fieldParents":[],"isDel":false,"lineBeg":150,"lineEnd":150,"lineMapIndex":-1,"methodParents":[],"nodeIndex":6},{"cfgs":[8],"code":"String testFileContent =\"{namespace boo}\\n\"+ \"{template .finishedInWrongBlock}\\n\"+ \"{@param p : ?}\\n\"+ \"// the whitespace finishes the attribute value, but it was started in another\"+ \" block\\n\"+ \"<div x=x{if $p}a {/if}>\\n\"+ \"<div x=\\\"x{if $p}a\\\"{/if}>  // ditto but for quoted values\\n\"+ \"\\n\"+ \"// special case for finishing in the wrong block\\n\"+ \"{/template}\"","dfgs":[9],"fName":"java_tests_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPassTest.java","fieldParents":[],"isDel":false,"lineBeg":151,"lineEnd":161,"lineMapIndex":-1,"methodParents":[],"nodeIndex":7},{"cfgs":[9],"code":"ErrorReporter boomForTest = ErrorReporter.createForTest()","dfgs":[9],"fName":"java_tests_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPassTest.java","fieldParents":[],"isDel":false,"lineBeg":163,"lineEnd":163,"lineMapIndex":-1,"methodParents":[],"nodeIndex":8},{"cfgs":[10],"code":"SoyFileSetNode soyFileSetNode =SoyFileSetParserBuilder.forFileContents(testFileContent).errorReporter(boomForTest).parse() // NOTE(b/145693330): this would fail..fileSet()","dfgs":[10],"fName":"java_tests_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPassTest.java","fieldParents":[],"isDel":false,"lineBeg":164,"lineEnd":168,"lineMapIndex":-1,"methodParents":[],"nodeIndex":9},{"cfgs":[11],"code":"TemplateNode template = soyFileSetNode.getChild(0).getChild(0)","dfgs":[11],"fName":"java_tests_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPassTest.java","fieldParents":[],"isDel":false,"lineBeg":169,"lineEnd":169,"lineMapIndex":-1,"methodParents":[],"nodeIndex":10},{"cfgs":[12],"code":"for (int i = 0; i < template.numChildren(); i++)","dfgs":[12],"fName":"java_tests_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPassTest.java","fieldParents":[],"isDel":false,"lineBeg":170,"lineEnd":170,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[13],"code":"if (template.getChild(i) instanceof RawTextNode)","dfgs":[13],"fName":"java_tests_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPassTest.java","fieldParents":[],"isDel":false,"lineBeg":171,"lineEnd":171,"lineMapIndex":-1,"methodParents":[],"nodeIndex":12},{"cfgs":[14],"code":"RawTextNode rtn = (RawTextNode) template.getChild(i)","dfgs":[15,14,17,16],"fName":"java_tests_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPassTest.java","fieldParents":[],"isDel":false,"lineBeg":172,"lineEnd":172,"lineMapIndex":-1,"methodParents":[],"nodeIndex":13},{"cfgs":[15],"code":"assertThat(rtn.getRawText()).isNotEmpty()","dfgs":[16,18],"fName":"java_tests_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPassTest.java","fieldParents":[],"isDel":false,"lineBeg":173,"lineEnd":173,"lineMapIndex":-1,"methodParents":[],"nodeIndex":14},{"cfgs":[16,17],"code":"if (i > 0)","dfgs":[17,16],"fName":"java_tests_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPassTest.java","fieldParents":[],"isDel":false,"lineBeg":174,"lineEnd":174,"lineMapIndex":-1,"methodParents":[],"nodeIndex":15},{"cfgs":[17],"code":"assertThat(template.getChild(i - 1).getKind()).isNotEqualTo(Kind.RAW_TEXT_NODE)","dfgs":[17,18],"fName":"java_tests_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPassTest.java","fieldParents":[],"isDel":false,"lineBeg":175,"lineEnd":175,"lineMapIndex":-1,"methodParents":[],"nodeIndex":16},{"cfgs":[18],"code":"if (i < template.numChildren() - 1)","dfgs":[18],"fName":"java_tests_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPassTest.java","fieldParents":[],"isDel":false,"lineBeg":177,"lineEnd":177,"lineMapIndex":-1,"methodParents":[],"nodeIndex":17},{"cfgs":[],"code":"assertThat(template.getChild(i + 1).getKind()).isNotEqualTo(Kind.RAW_TEXT_NODE)","dfgs":[],"fName":"java_tests_com_google_template_soy_passes_CombineConsecutiveRawTextNodesPassTest.java","fieldParents":[],"isDel":false,"lineBeg":178,"lineEnd":178,"lineMapIndex":-1,"methodParents":[],"nodeIndex":18}]