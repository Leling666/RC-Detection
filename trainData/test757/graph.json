[{"cfgs":[],"code":"selectList = new ArrayList<>()","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_SelectQueryOp.java","fieldParents":[],"isDel":true,"lineBeg":48,"lineEnd":48,"lineMapIndex":32,"methodParents":[],"nodeIndex":0},{"cfgs":[],"code":"filter = Optional.empty()","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_SelectQueryOp.java","fieldParents":[],"isDel":true,"lineBeg":52,"lineEnd":52,"lineMapIndex":33,"methodParents":[],"nodeIndex":1},{"cfgs":[],"code":"return groupby","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_SelectQueryOp.java","fieldParents":[],"isDel":true,"lineBeg":80,"lineEnd":80,"lineMapIndex":-1,"methodParents":[],"nodeIndex":2},{"cfgs":[],"code":"sel.addSelectItem(findAndReplaceBaseTableReference(item, aliasUpdateMap))","dfgs":[],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":117,"lineEnd":117,"lineMapIndex":60,"methodParents":[4],"nodeIndex":3},{"cfgs":[5,6],"code":"SelectItem findAndReplaceBaseTableReference(SelectItem oldColumn, Map<String, String> aliasUpdateMap)throws UnexpectedTypeException","dfgs":[5,6],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":160,"lineEnd":162,"lineMapIndex":65,"methodParents":[],"nodeIndex":4},{"cfgs":[],"code":"return replaceBaseTableReference((UnnamedColumn) oldColumn, aliasUpdateMap)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":164,"lineEnd":164,"lineMapIndex":66,"methodParents":[7],"nodeIndex":5},{"cfgs":[],"code":"return new AliasedColumn(replaceBaseTableReference(col.getColumn(), aliasUpdateMap),col.getAliasName())","dfgs":[],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":168,"lineEnd":170,"lineMapIndex":67,"methodParents":[],"nodeIndex":6},{"cfgs":[8],"code":"UnnamedColumn replaceBaseTableReference(UnnamedColumn oldColumn, Map<String, String> aliasUpdateMap)throws UnexpectedTypeException","dfgs":[8],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":177,"lineEnd":179,"lineMapIndex":68,"methodParents":[],"nodeIndex":7},{"cfgs":[],"code":"newOperands.add(replaceBaseTableReference(c, aliasUpdateMap))","dfgs":[],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":190,"lineEnd":190,"lineMapIndex":69,"methodParents":[7],"nodeIndex":8},{"cfgs":[12,11,10],"code":"AbstractRelation scrambledSource = null","dfgs":[12],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":332,"lineEnd":332,"lineMapIndex":77,"methodParents":[],"nodeIndex":9},{"cfgs":[12,11],"code":"scrambledSource = rewrittenSource","dfgs":[12],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":340,"lineEnd":340,"lineMapIndex":78,"methodParents":[],"nodeIndex":10},{"cfgs":[12],"code":"sel.addSelectItem(findAndReplaceBaseTableReference(item, aliasUpdateMap))","dfgs":[19,16,17,18,21,20],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":349,"lineEnd":349,"lineMapIndex":79,"methodParents":[4],"nodeIndex":11},{"cfgs":[13],"code":"BaseTable scrambledTable = (BaseTable) ((SelectQueryOp) scrambledSource).getFromList().get(0)","dfgs":[13],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":357,"lineEnd":357,"lineMapIndex":80,"methodParents":[],"nodeIndex":12},{"cfgs":[14],"code":"String scrambledTableAliasName = scrambledTable.getAliasName().get()","dfgs":[14,19],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":358,"lineEnd":358,"lineMapIndex":84,"methodParents":[],"nodeIndex":13},{"cfgs":[15],"code":"String scrambledSchemaName = scrambledTable.getSchemaName()","dfgs":[15,16],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":359,"lineEnd":359,"lineMapIndex":-1,"methodParents":[],"nodeIndex":14},{"cfgs":[16],"code":"String scrambledTableName = scrambledTable.getTableName()","dfgs":[16],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":360,"lineEnd":360,"lineMapIndex":-1,"methodParents":[],"nodeIndex":15},{"cfgs":[17],"code":"String inclusionProbabilityColumn =scrambleMeta.getInclusionProbabilityColumn(scrambledSchemaName, scrambledTableName)","dfgs":[17,19],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":361,"lineEnd":362,"lineMapIndex":85,"methodParents":[],"nodeIndex":16},{"cfgs":[18],"code":"String inclusionProbBlockDiffColumn =scrambleMeta.getInclusionProbabilityBlockDifferenceColumn(scrambledSchemaName, scrambledTableName)","dfgs":[18,20],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":363,"lineEnd":364,"lineMapIndex":86,"methodParents":[],"nodeIndex":17},{"cfgs":[19],"code":"String subsampleColumn =scrambleMeta.getSubsampleColumn(scrambledSchemaName, scrambledTableName)","dfgs":[21,20,19],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":365,"lineEnd":366,"lineMapIndex":87,"methodParents":[],"nodeIndex":18},{"cfgs":[20],"code":"sel.addSelectItem(new AliasedColumn(new BaseColumn(scrambledTableAliasName, inclusionProbabilityColumn), incProbColAliasName))","dfgs":[20],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":373,"lineEnd":374,"lineMapIndex":88,"methodParents":[],"nodeIndex":19},{"cfgs":[21],"code":"sel.addSelectItem(new AliasedColumn(new BaseColumn(scrambledTableAliasName, inclusionProbBlockDiffColumn), incProbBlockDiffAliasName))","dfgs":[21],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":375,"lineEnd":376,"lineMapIndex":89,"methodParents":[],"nodeIndex":20},{"cfgs":[],"code":"sel.addSelectItem(new AliasedColumn(new BaseColumn(scrambledTableAliasName, subsampleColumn), subsampleAliasName))","dfgs":[],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":true,"lineBeg":377,"lineEnd":378,"lineMapIndex":90,"methodParents":[],"nodeIndex":21},{"cfgs":[],"code":"String expected = \"select `verdictalias1`.`verdictalias2` as mygroup, sum(`verdictalias1`.`verdictalias3`) as a, \"+ \"std(`verdictalias1`.`verdictalias3` * sqrt(`verdictalias1`.`verdictalias4`)) / \"+ \"sqrt(sum(`verdictalias1`.`verdictalias4`)) as std_a \"+ \"from (\"+ \"select `t`.`mygroup` as verdictalias2, \"+ \"sum(`t`.`mycolumn1` / (`t`.`verdictincprob` + (`t`.`verdictincprobblockdiff` * \" + k + \"))) as verdictalias3, \"+ \"sum(case 1 when `t`.`mycolumn1` is not null else 0 end) as verdictalias4 \"+ \"from `myschema`.`mytable` as t \"+ \"where `t`.`verdictpartition` = \" + k + \" \"+ \"group by `verdictalias2`, `t`.`verdictsid`) as verdictalias1 \"+ \"group by `mygroup`\"","dfgs":[],"fName":"src_test_java_org_verdictdb_core_rewriter_ScrambleRewriterFlatQueryTest.java","fieldParents":[],"isDel":true,"lineBeg":158,"lineEnd":168,"lineMapIndex":100,"methodParents":[],"nodeIndex":22},{"cfgs":[],"code":"String expected = \"select `verdictalias1`.`verdictalias2` as myalias, sum(`verdictalias1`.`verdictalias3`) as a, \"+ \"std(`verdictalias1`.`verdictalias3` * sqrt(`verdictalias1`.`verdictalias4`)) / \"+ \"sqrt(sum(`verdictalias1`.`verdictalias4`)) as std_a \"+ \"from (\"+ \"select `t`.`mygroup` as verdictalias2, \"+ \"sum(`t`.`mycolumn1` / (`t`.`verdictincprob` + (`t`.`verdictincprobblockdiff` * \" + k + \"))) as verdictalias3, \"+ \"sum(case 1 when `t`.`mycolumn1` is not null else 0 end) as verdictalias4 \"+ \"from `myschema`.`mytable` as t \"+ \"where `t`.`verdictpartition` = \" + k + \" \"+ \"group by `verdictalias2`, `t`.`verdictsid`) as verdictalias1 \"+ \"group by `myalias`\"","dfgs":[],"fName":"src_test_java_org_verdictdb_core_rewriter_ScrambleRewriterFlatQueryTest.java","fieldParents":[],"isDel":true,"lineBeg":189,"lineEnd":199,"lineMapIndex":101,"methodParents":[],"nodeIndex":23},{"cfgs":[],"code":"String expected = \"select `verdictalias1`.`verdictalias2` as mygroup, \"+ \"sum(`verdictalias1`.`verdictalias3`) as a, \"+ \"std(`verdictalias1`.`verdictalias3` * sqrt(`verdictalias1`.`verdictalias4`)) / \"+ \"sqrt(sum(`verdictalias1`.`verdictalias4`)) as std_a \"+ \"from (\"+ \"select `t`.`mygroup` as verdictalias2, \"+ \"sum(1 / (`t`.`verdictincprob` + (`t`.`verdictincprobblockdiff` * \" + k + \"))) as verdictalias3, \"+ \"count(*) as verdictalias4 \"+ \"from `myschema`.`mytable` as t \"+ \"where `t`.`verdictpartition` = \" + k + \" \"+ \"group by `verdictalias2`, `t`.`verdictsid`) as verdictalias1 \"+ \"group by `mygroup`\"","dfgs":[],"fName":"src_test_java_org_verdictdb_core_rewriter_ScrambleRewriterFlatQueryTest.java","fieldParents":[],"isDel":true,"lineBeg":219,"lineEnd":230,"lineMapIndex":102,"methodParents":[],"nodeIndex":24},{"cfgs":[],"code":"String expected = \"select `verdictalias1`.`verdictalias2` as mygroup, \"+ \"sum(`verdictalias1`.`verdictalias3`) / sum(`verdictalias1`.`verdictalias4`) as a, \"+ \"std((`verdictalias1`.`verdictalias3` / `verdictalias1`.`verdictalias4`)\"+ \" * sqrt(`verdictalias1`.`verdictalias5`)) / \"+ \"sqrt(sum(`verdictalias1`.`verdictalias5`)) as std_a \"+ \"from (\"+ \"select `t`.`mygroup` as verdictalias2, \"+ \"sum(`t`.`mycolumn1` / (`t`.`verdictincprob` + (`t`.`verdictincprobblockdiff` * \" + k + \"))) as verdictalias3, \"+ \"sum((case 1 when `t`.`mycolumn1` is not null else 0 end) / \"+ \"(`t`.`verdictincprob` + (`t`.`verdictincprobblockdiff` * \" + k + \"))) as verdictalias4, \"+ \"sum(case 1 when `t`.`mycolumn1` is not null else 0 end) as verdictalias5 \"+ \"from `myschema`.`mytable` as t \"+ \"where `t`.`verdictpartition` = \" + k + \" \"+ \"group by `verdictalias2`, `t`.`verdictsid`) as verdictalias1 \"+ \"group by `mygroup`\"","dfgs":[],"fName":"src_test_java_org_verdictdb_core_rewriter_ScrambleRewriterFlatQueryTest.java","fieldParents":[],"isDel":true,"lineBeg":251,"lineEnd":265,"lineMapIndex":103,"methodParents":[],"nodeIndex":25},{"cfgs":[27],"code":"SelectQueryOp nestedSource = SelectQueryOp.getSelectQueryOp(Arrays.<SelectItem>asList(new AliasedColumn(ColumnOp.multiply(new BaseColumn(\"t\", \"price\"), new BaseColumn(\"t\", \"discount\")),\"discounted_price\")),base)","dfgs":[27],"fName":"src_test_java_org_verdictdb_core_rewriter_ScrambleRewriterFlatQueryTest.java","fieldParents":[],"isDel":true,"lineBeg":275,"lineEnd":279,"lineMapIndex":104,"methodParents":[],"nodeIndex":26},{"cfgs":[28],"code":"SelectQueryOp relation = SelectQueryOp.getSelectQueryOp(Arrays.<SelectItem>asList(new AliasedColumn(new ColumnOp(\"sum\", new BaseColumn(\"t\", \"mycolumn1\")), \"a\")),nestedSource)","dfgs":[28],"fName":"src_test_java_org_verdictdb_core_rewriter_ScrambleRewriterFlatQueryTest.java","fieldParents":[],"isDel":true,"lineBeg":280,"lineEnd":283,"lineMapIndex":106,"methodParents":[],"nodeIndex":27},{"cfgs":[],"code":"String expected = \"select sum(`verdictalias2`.`verdictalias3`) as a, \"+ \"std(`verdictalias2`.`verdictalias3` * sqrt(`verdictalias2`.`verdictalias4`)) / \"+ \"sqrt(sum(`verdictalias2`.`verdictalias4`)) as std_a \"+ \"from (\"+ \"select sum(`t`.`mycolumn1` / (`t`.`verdictincprob` + (`t`.`verdictincprobblockdiff` * \" + k + \"))) as verdictalias3, \"+ \"sum(case 1 when `t`.`mycolumn1` is not null else 0 end) as verdictalias4 \"+ \"from (\"+ \"select `t`.`price` * `t`.`discount` as discounted_price \"+ \"from `myschema`.`mytable` as t \"+ \"where `t`.`verdictpartition` = \" + k + \") as verdictalias1 \"+ \"group by `t`.`verdictsid`) as verdictalias2\"","dfgs":[],"fName":"src_test_java_org_verdictdb_core_rewriter_ScrambleRewriterFlatQueryTest.java","fieldParents":[],"isDel":true,"lineBeg":289,"lineEnd":299,"lineMapIndex":107,"methodParents":[],"nodeIndex":28},{"cfgs":[],"code":"import org.apache.commons.lang3.builder.EqualsBuilder","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_SelectQueryOp.java","fieldParents":[],"isDel":false,"lineBeg":7,"lineEnd":7,"lineMapIndex":-1,"methodParents":[],"nodeIndex":29},{"cfgs":[],"code":"import org.apache.commons.lang3.builder.HashCodeBuilder","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_SelectQueryOp.java","fieldParents":[],"isDel":false,"lineBeg":8,"lineEnd":8,"lineMapIndex":-1,"methodParents":[],"nodeIndex":30},{"cfgs":[],"code":"import org.apache.commons.lang3.builder.ToStringBuilder","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_SelectQueryOp.java","fieldParents":[],"isDel":false,"lineBeg":9,"lineEnd":9,"lineMapIndex":-1,"methodParents":[],"nodeIndex":31},{"cfgs":[],"code":"this.selectList = new ArrayList<>()","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_SelectQueryOp.java","fieldParents":[],"isDel":false,"lineBeg":52,"lineEnd":52,"lineMapIndex":0,"methodParents":[],"nodeIndex":32},{"cfgs":[],"code":"this.filter = Optional.empty()","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_SelectQueryOp.java","fieldParents":[],"isDel":false,"lineBeg":56,"lineEnd":56,"lineMapIndex":1,"methodParents":[],"nodeIndex":33},{"cfgs":[35],"code":"public void clearGroupby() ","dfgs":[35],"fName":"src_main_java_org_verdictdb_core_logical_query_SelectQueryOp.java","fieldParents":[],"isDel":false,"lineBeg":63,"lineEnd":63,"lineMapIndex":-1,"methodParents":[],"nodeIndex":34},{"cfgs":[],"code":"this.groupby = new ArrayList<>()","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_SelectQueryOp.java","fieldParents":[],"isDel":false,"lineBeg":64,"lineEnd":64,"lineMapIndex":-1,"methodParents":[],"nodeIndex":35},{"cfgs":[37],"code":"public int hashCode() ","dfgs":[37],"fName":"src_main_java_org_verdictdb_core_logical_query_SelectQueryOp.java","fieldParents":[],"isDel":false,"lineBeg":92,"lineEnd":92,"lineMapIndex":-1,"methodParents":[],"nodeIndex":36},{"cfgs":[],"code":"return HashCodeBuilder.reflectionHashCode(this)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_SelectQueryOp.java","fieldParents":[],"isDel":false,"lineBeg":93,"lineEnd":93,"lineMapIndex":-1,"methodParents":[],"nodeIndex":37},{"cfgs":[39],"code":"public boolean equals(Object obj) ","dfgs":[39],"fName":"src_main_java_org_verdictdb_core_logical_query_SelectQueryOp.java","fieldParents":[],"isDel":false,"lineBeg":97,"lineEnd":97,"lineMapIndex":-1,"methodParents":[],"nodeIndex":38},{"cfgs":[],"code":"return EqualsBuilder.reflectionEquals(this, obj)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_SelectQueryOp.java","fieldParents":[],"isDel":false,"lineBeg":98,"lineEnd":98,"lineMapIndex":-1,"methodParents":[],"nodeIndex":39},{"cfgs":[41],"code":"public String toString() ","dfgs":[41],"fName":"src_main_java_org_verdictdb_core_logical_query_SelectQueryOp.java","fieldParents":[],"isDel":false,"lineBeg":102,"lineEnd":102,"lineMapIndex":-1,"methodParents":[],"nodeIndex":40},{"cfgs":[],"code":"return ToStringBuilder.reflectionToString(this)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_SelectQueryOp.java","fieldParents":[],"isDel":false,"lineBeg":103,"lineEnd":103,"lineMapIndex":-1,"methodParents":[],"nodeIndex":41},{"cfgs":[],"code":"import org.apache.commons.lang3.builder.EqualsBuilder","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_ColumnOp.java","fieldParents":[],"isDel":false,"lineBeg":7,"lineEnd":7,"lineMapIndex":-1,"methodParents":[],"nodeIndex":42},{"cfgs":[],"code":"import org.apache.commons.lang3.builder.HashCodeBuilder","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_ColumnOp.java","fieldParents":[],"isDel":false,"lineBeg":8,"lineEnd":8,"lineMapIndex":-1,"methodParents":[],"nodeIndex":43},{"cfgs":[],"code":"import org.apache.commons.lang3.builder.ToStringBuilder","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_ColumnOp.java","fieldParents":[],"isDel":false,"lineBeg":9,"lineEnd":9,"lineMapIndex":-1,"methodParents":[],"nodeIndex":44},{"cfgs":[46],"code":"public int hashCode() ","dfgs":[46],"fName":"src_main_java_org_verdictdb_core_logical_query_ColumnOp.java","fieldParents":[],"isDel":false,"lineBeg":139,"lineEnd":139,"lineMapIndex":-1,"methodParents":[],"nodeIndex":45},{"cfgs":[],"code":"return HashCodeBuilder.reflectionHashCode(this)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_ColumnOp.java","fieldParents":[],"isDel":false,"lineBeg":140,"lineEnd":140,"lineMapIndex":-1,"methodParents":[],"nodeIndex":46},{"cfgs":[48],"code":"public boolean equals(Object obj) ","dfgs":[48],"fName":"src_main_java_org_verdictdb_core_logical_query_ColumnOp.java","fieldParents":[],"isDel":false,"lineBeg":144,"lineEnd":144,"lineMapIndex":-1,"methodParents":[],"nodeIndex":47},{"cfgs":[],"code":"return EqualsBuilder.reflectionEquals(this, obj)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_ColumnOp.java","fieldParents":[],"isDel":false,"lineBeg":145,"lineEnd":145,"lineMapIndex":-1,"methodParents":[],"nodeIndex":48},{"cfgs":[50],"code":"public String toString() ","dfgs":[50],"fName":"src_main_java_org_verdictdb_core_logical_query_ColumnOp.java","fieldParents":[],"isDel":false,"lineBeg":149,"lineEnd":149,"lineMapIndex":-1,"methodParents":[],"nodeIndex":49},{"cfgs":[],"code":"return ToStringBuilder.reflectionToString(this)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_ColumnOp.java","fieldParents":[],"isDel":false,"lineBeg":150,"lineEnd":150,"lineMapIndex":-1,"methodParents":[],"nodeIndex":50},{"cfgs":[],"code":"import org.apache.commons.lang3.builder.EqualsBuilder","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_AliasedColumn.java","fieldParents":[],"isDel":false,"lineBeg":3,"lineEnd":3,"lineMapIndex":-1,"methodParents":[],"nodeIndex":51},{"cfgs":[],"code":"import org.apache.commons.lang3.builder.HashCodeBuilder","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_AliasedColumn.java","fieldParents":[],"isDel":false,"lineBeg":4,"lineEnd":4,"lineMapIndex":-1,"methodParents":[],"nodeIndex":52},{"cfgs":[],"code":"import org.apache.commons.lang3.builder.ToStringBuilder","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_AliasedColumn.java","fieldParents":[],"isDel":false,"lineBeg":5,"lineEnd":5,"lineMapIndex":-1,"methodParents":[],"nodeIndex":53},{"cfgs":[55],"code":"public int hashCode() ","dfgs":[55],"fName":"src_main_java_org_verdictdb_core_logical_query_AliasedColumn.java","fieldParents":[],"isDel":false,"lineBeg":41,"lineEnd":41,"lineMapIndex":-1,"methodParents":[],"nodeIndex":54},{"cfgs":[],"code":"return HashCodeBuilder.reflectionHashCode(this)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_AliasedColumn.java","fieldParents":[],"isDel":false,"lineBeg":42,"lineEnd":42,"lineMapIndex":-1,"methodParents":[],"nodeIndex":55},{"cfgs":[57],"code":"public boolean equals(Object obj) ","dfgs":[57],"fName":"src_main_java_org_verdictdb_core_logical_query_AliasedColumn.java","fieldParents":[],"isDel":false,"lineBeg":46,"lineEnd":46,"lineMapIndex":-1,"methodParents":[],"nodeIndex":56},{"cfgs":[],"code":"return EqualsBuilder.reflectionEquals(this, obj)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_AliasedColumn.java","fieldParents":[],"isDel":false,"lineBeg":47,"lineEnd":47,"lineMapIndex":-1,"methodParents":[],"nodeIndex":57},{"cfgs":[59],"code":"public String toString() ","dfgs":[59],"fName":"src_main_java_org_verdictdb_core_logical_query_AliasedColumn.java","fieldParents":[],"isDel":false,"lineBeg":51,"lineEnd":51,"lineMapIndex":-1,"methodParents":[],"nodeIndex":58},{"cfgs":[],"code":"return ToStringBuilder.reflectionToString(this)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_AliasedColumn.java","fieldParents":[],"isDel":false,"lineBeg":52,"lineEnd":52,"lineMapIndex":-1,"methodParents":[],"nodeIndex":59},{"cfgs":[61],"code":"sel.addSelectItem(replaceTableReferenceInSelectItem(item, aliasUpdateMap))","dfgs":[61,64],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":117,"lineEnd":117,"lineMapIndex":3,"methodParents":[65],"nodeIndex":60},{"cfgs":[62],"code":"List<GroupingAttribute> groupbyList = sel.getGroupby()","dfgs":[62,63],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":121,"lineEnd":121,"lineMapIndex":-1,"methodParents":[],"nodeIndex":61},{"cfgs":[63],"code":"sel.clearGroupby()","dfgs":[64],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":122,"lineEnd":122,"lineMapIndex":-1,"methodParents":[34],"nodeIndex":62},{"cfgs":[64],"code":"for (GroupingAttribute group : groupbyList)","dfgs":[64],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":123,"lineEnd":123,"lineMapIndex":-1,"methodParents":[],"nodeIndex":63},{"cfgs":[],"code":"sel.addGroupby(replaceTableReferenceInGroupby(group, aliasUpdateMap))","dfgs":[],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":124,"lineEnd":124,"lineMapIndex":-1,"methodParents":[70],"nodeIndex":64},{"cfgs":[66,67],"code":"SelectItem replaceTableReferenceInSelectItem(SelectItem oldColumn, Map<String, String> aliasUpdateMap)throws UnexpectedTypeException","dfgs":[66,67],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":167,"lineEnd":169,"lineMapIndex":4,"methodParents":[],"nodeIndex":65},{"cfgs":[],"code":"return replaceTableReferenceInUnnamedColumn((UnnamedColumn) oldColumn, aliasUpdateMap)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":171,"lineEnd":171,"lineMapIndex":5,"methodParents":[68],"nodeIndex":66},{"cfgs":[],"code":"return new AliasedColumn(replaceTableReferenceInUnnamedColumn(col.getColumn(), aliasUpdateMap),col.getAliasName())","dfgs":[],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":175,"lineEnd":177,"lineMapIndex":6,"methodParents":[],"nodeIndex":67},{"cfgs":[69],"code":"UnnamedColumn replaceTableReferenceInUnnamedColumn(UnnamedColumn oldColumn, Map<String, String> aliasUpdateMap)throws UnexpectedTypeException","dfgs":[69],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":184,"lineEnd":186,"lineMapIndex":7,"methodParents":[],"nodeIndex":68},{"cfgs":[],"code":"newOperands.add(replaceTableReferenceInUnnamedColumn(c, aliasUpdateMap))","dfgs":[],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":197,"lineEnd":197,"lineMapIndex":8,"methodParents":[68],"nodeIndex":69},{"cfgs":[71],"code":"GroupingAttribute replaceTableReferenceInGroupby(GroupingAttribute oldGroup, Map<String, String> aliasUpdateMap) throws UnexpectedTypeException","dfgs":[71,72,73,74,76],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":206,"lineEnd":207,"lineMapIndex":-1,"methodParents":[],"nodeIndex":70},{"cfgs":[72,73],"code":"if (oldGroup instanceof AliasReference)","dfgs":[72,73],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":208,"lineEnd":208,"lineMapIndex":-1,"methodParents":[],"nodeIndex":71},{"cfgs":[],"code":"return oldGroup","dfgs":[],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":209,"lineEnd":209,"lineMapIndex":-1,"methodParents":[],"nodeIndex":72},{"cfgs":[74,75],"code":"if (oldGroup instanceof UnnamedColumn)","dfgs":[74,76],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":211,"lineEnd":211,"lineMapIndex":-1,"methodParents":[],"nodeIndex":73},{"cfgs":[],"code":"return replaceTableReferenceInUnnamedColumn((UnnamedColumn) oldGroup, aliasUpdateMap)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":212,"lineEnd":212,"lineMapIndex":-1,"methodParents":[68],"nodeIndex":74},{"cfgs":[76],"code":"else","dfgs":[],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":214,"lineEnd":214,"lineMapIndex":-1,"methodParents":[],"nodeIndex":75},{"cfgs":[],"code":"throw new UnexpectedTypeException(\"Unexpected argument type: \" + oldGroup.getClass().toString())","dfgs":[],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":215,"lineEnd":215,"lineMapIndex":-1,"methodParents":[40],"nodeIndex":76},{"cfgs":[80,79,78],"code":"SelectQueryOp scrambledSource = null","dfgs":[84],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":352,"lineEnd":352,"lineMapIndex":9,"methodParents":[],"nodeIndex":77},{"cfgs":[80,79],"code":"scrambledSource = (SelectQueryOp) rewrittenSource","dfgs":[84],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":360,"lineEnd":360,"lineMapIndex":10,"methodParents":[],"nodeIndex":78},{"cfgs":[80],"code":"sel.addSelectItem(replaceTableReferenceInSelectItem(item, aliasUpdateMap))","dfgs":[80,83,85,86,87,90,89,88],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":369,"lineEnd":369,"lineMapIndex":11,"methodParents":[65],"nodeIndex":79},{"cfgs":[81],"code":"List<GroupingAttribute> groupbyList = sel.getGroupby()","dfgs":[81,82],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":373,"lineEnd":373,"lineMapIndex":12,"methodParents":[],"nodeIndex":80},{"cfgs":[82],"code":"sel.clearGroupby()","dfgs":[83,88],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":374,"lineEnd":374,"lineMapIndex":-1,"methodParents":[34],"nodeIndex":81},{"cfgs":[84,83],"code":"for (GroupingAttribute group : groupbyList)","dfgs":[83],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":375,"lineEnd":375,"lineMapIndex":-1,"methodParents":[],"nodeIndex":82},{"cfgs":[],"code":"sel.addGroupby(replaceTableReferenceInGroupby(group, aliasUpdateMap))","dfgs":[88,85,86,87,90,89],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":376,"lineEnd":376,"lineMapIndex":-1,"methodParents":[70],"nodeIndex":83},{"cfgs":[85],"code":"String scrambledSourceAliasName = scrambledSource.getAliasName().get()","dfgs":[85],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":388,"lineEnd":388,"lineMapIndex":13,"methodParents":[],"nodeIndex":84},{"cfgs":[86],"code":"String inclusionProbabilityColumn =scrambleMeta.getInclusionProbabilityColumn(scrambledSourceAliasName)","dfgs":[86,88],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":389,"lineEnd":390,"lineMapIndex":16,"methodParents":[],"nodeIndex":85},{"cfgs":[87],"code":"String inclusionProbBlockDiffColumn =scrambleMeta.getInclusionProbabilityBlockDifferenceColumn(scrambledSourceAliasName)","dfgs":[87,89],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":391,"lineEnd":392,"lineMapIndex":17,"methodParents":[],"nodeIndex":86},{"cfgs":[88],"code":"String subsampleColumn =scrambleMeta.getSubsampleColumn(scrambledSourceAliasName)","dfgs":[90,89,88],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":393,"lineEnd":394,"lineMapIndex":18,"methodParents":[],"nodeIndex":87},{"cfgs":[89],"code":"sel.addSelectItem(new AliasedColumn(new BaseColumn(scrambledSourceAliasName, inclusionProbabilityColumn), incProbColAliasName))","dfgs":[89],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":401,"lineEnd":402,"lineMapIndex":19,"methodParents":[],"nodeIndex":88},{"cfgs":[90],"code":"sel.addSelectItem(new AliasedColumn(new BaseColumn(scrambledSourceAliasName, inclusionProbBlockDiffColumn), incProbBlockDiffAliasName))","dfgs":[90],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":403,"lineEnd":404,"lineMapIndex":20,"methodParents":[],"nodeIndex":89},{"cfgs":[],"code":"sel.addSelectItem(new AliasedColumn(new BaseColumn(scrambledSourceAliasName, subsampleColumn), subsampleAliasName))","dfgs":[],"fName":"src_main_java_org_verdictdb_core_rewriter_ScrambleRewriter.java","fieldParents":[],"isDel":false,"lineBeg":405,"lineEnd":406,"lineMapIndex":21,"methodParents":[],"nodeIndex":90},{"cfgs":[],"code":"import org.apache.commons.lang3.builder.EqualsBuilder","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_ConstantColumn.java","fieldParents":[],"isDel":false,"lineBeg":3,"lineEnd":3,"lineMapIndex":-1,"methodParents":[],"nodeIndex":91},{"cfgs":[],"code":"import org.apache.commons.lang3.builder.HashCodeBuilder","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_ConstantColumn.java","fieldParents":[],"isDel":false,"lineBeg":4,"lineEnd":4,"lineMapIndex":-1,"methodParents":[],"nodeIndex":92},{"cfgs":[],"code":"import org.apache.commons.lang3.builder.ToStringBuilder","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_ConstantColumn.java","fieldParents":[],"isDel":false,"lineBeg":5,"lineEnd":5,"lineMapIndex":-1,"methodParents":[],"nodeIndex":93},{"cfgs":[95],"code":"public int hashCode() ","dfgs":[95],"fName":"src_main_java_org_verdictdb_core_logical_query_ConstantColumn.java","fieldParents":[],"isDel":false,"lineBeg":32,"lineEnd":32,"lineMapIndex":-1,"methodParents":[],"nodeIndex":94},{"cfgs":[],"code":"return HashCodeBuilder.reflectionHashCode(this)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_ConstantColumn.java","fieldParents":[],"isDel":false,"lineBeg":33,"lineEnd":33,"lineMapIndex":-1,"methodParents":[],"nodeIndex":95},{"cfgs":[97],"code":"public boolean equals(Object obj) ","dfgs":[97],"fName":"src_main_java_org_verdictdb_core_logical_query_ConstantColumn.java","fieldParents":[],"isDel":false,"lineBeg":37,"lineEnd":37,"lineMapIndex":-1,"methodParents":[],"nodeIndex":96},{"cfgs":[],"code":"return EqualsBuilder.reflectionEquals(this, obj)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_ConstantColumn.java","fieldParents":[],"isDel":false,"lineBeg":38,"lineEnd":38,"lineMapIndex":-1,"methodParents":[],"nodeIndex":97},{"cfgs":[99],"code":"public String toString() ","dfgs":[99],"fName":"src_main_java_org_verdictdb_core_logical_query_ConstantColumn.java","fieldParents":[],"isDel":false,"lineBeg":42,"lineEnd":42,"lineMapIndex":-1,"methodParents":[],"nodeIndex":98},{"cfgs":[],"code":"return ToStringBuilder.reflectionToString(this)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_ConstantColumn.java","fieldParents":[],"isDel":false,"lineBeg":43,"lineEnd":43,"lineMapIndex":-1,"methodParents":[],"nodeIndex":99},{"cfgs":[],"code":"String expected = \"select `verdictalias5`.`verdictalias6` as mygroup, \"+ \"sum(`verdictalias5`.`verdictalias7`) as a, \"+ \"sum(`verdictalias5`.`verdictalias7` * \"+ \"sqrt(`verdictalias5`.`verdictalias8`)) as sum_scaled_a, \"+ \"sum(pow(`verdictalias5`.`verdictalias7` * \"+ \"sqrt(`verdictalias5`.`verdictalias8`), 2)) as sumsquared_scaled_a, \"+ \"count(*) as subsample_count \"+ \"from (\"+ \"select `verdictalias1`.`mygroup` as verdictalias6, \"+ \"sum(`verdictalias1`.`mycolumn1` / \"+ \"(`verdictalias1`.`verdictalias2` + (`verdictalias1`.`verdictalias3` * \" + k+ \"))) as verdictalias7, \"+ \"sum(case 1 when `verdictalias1`.`mycolumn1` is not null else 0 end) as verdictalias8 \"+ \"from (select *, `t`.`verdictincprob` as verdictalias2, \"+ \"`t`.`verdictincprobblockdiff` as verdictalias3, \"+ \"`t`.`verdictsid` as verdictalias4 \"+ \"from `myschema`.`mytable` as t \"+ \"where `t`.`verdictpartition` = \" + k + \") as verdictalias1 \"+ \"group by `verdictalias6`, `verdictalias1`.`verdictalias4`) as verdictalias5 \"+ \"group by `mygroup`\"","dfgs":[],"fName":"src_test_java_org_verdictdb_core_rewriter_ScrambleRewriterFlatQueryTest.java","fieldParents":[],"isDel":false,"lineBeg":158,"lineEnd":177,"lineMapIndex":22,"methodParents":[],"nodeIndex":100},{"cfgs":[],"code":"String expected = \"select `verdictalias5`.`verdictalias6` as myalias, \"+ \"sum(`verdictalias5`.`verdictalias7`) as a, \"+ \"sum(`verdictalias5`.`verdictalias7` * \"+ \"sqrt(`verdictalias5`.`verdictalias8`)) as sum_scaled_a, \"+ \"sum(pow(`verdictalias5`.`verdictalias7` * \"+ \"sqrt(`verdictalias5`.`verdictalias8`), 2)) as sumsquared_scaled_a, \"+ \"count(*) as subsample_count \"+ \"from (\"+ \"select `verdictalias1`.`mygroup` as verdictalias6, \"+ \"sum(`verdictalias1`.`mycolumn1` / \"+ \"(`verdictalias1`.`verdictalias2` + (`verdictalias1`.`verdictalias3` * \" + k+ \"))) as verdictalias7, \"+ \"sum(case 1 when `verdictalias1`.`mycolumn1` is not null else 0 end) as verdictalias8 \"+ \"from (select *, `t`.`verdictincprob` as verdictalias2, \"+ \"`t`.`verdictincprobblockdiff` as verdictalias3, \"+ \"`t`.`verdictsid` as verdictalias4 \"+ \"from `myschema`.`mytable` as t \"+ \"where `t`.`verdictpartition` = \" + k + \") as verdictalias1 \"+ \"group by `verdictalias6`, `verdictalias1`.`verdictalias4`) as verdictalias5 \"+ \"group by `myalias`\"","dfgs":[],"fName":"src_test_java_org_verdictdb_core_rewriter_ScrambleRewriterFlatQueryTest.java","fieldParents":[],"isDel":false,"lineBeg":198,"lineEnd":217,"lineMapIndex":23,"methodParents":[],"nodeIndex":101},{"cfgs":[],"code":"String expected = \"select `verdictalias5`.`verdictalias6` as mygroup, \"+ \"sum(`verdictalias5`.`verdictalias7`) as a, \"+ \"sum(`verdictalias5`.`verdictalias7` * \"+ \"sqrt(`verdictalias5`.`verdictalias8`)) as sum_scaled_a, \"+ \"sum(pow(`verdictalias5`.`verdictalias7` * \"+ \"sqrt(`verdictalias5`.`verdictalias8`), 2)) as sumsquared_scaled_a, \"+ \"count(*) as subsample_count \"+ \"from (\"+ \"select `verdictalias1`.`mygroup` as verdictalias6, \"+ \"sum(1 / (`verdictalias1`.`verdictalias2` + (`verdictalias1`.`verdictalias3` * \" + k+ \"))) as verdictalias7, \"+ \"count(*) as verdictalias8 \"+ \"from (select *, `t`.`verdictincprob` as verdictalias2, \"+ \"`t`.`verdictincprobblockdiff` as verdictalias3, \"+ \"`t`.`verdictsid` as verdictalias4 \"+ \"from `myschema`.`mytable` as t \"+ \"where `t`.`verdictpartition` = \" + k + \") as verdictalias1 \"+ \"group by `verdictalias6`, `verdictalias1`.`verdictalias4`) as verdictalias5 \"+ \"group by `mygroup`\"","dfgs":[],"fName":"src_test_java_org_verdictdb_core_rewriter_ScrambleRewriterFlatQueryTest.java","fieldParents":[],"isDel":false,"lineBeg":237,"lineEnd":255,"lineMapIndex":24,"methodParents":[],"nodeIndex":102},{"cfgs":[],"code":"String expected = \"select `verdictalias5`.`verdictalias6` as mygroup, \"+ \"sum(`verdictalias5`.`verdictalias7`) as a_sum, \"+ \"sum(`verdictalias5`.`verdictalias8`) as a_count, \"+ \"sum(`verdictalias5`.`verdictalias7` * \"+ \"sqrt(`verdictalias5`.`verdictalias9`)) as sum_scaled_a_sum, \"+ \"sum(pow(`verdictalias5`.`verdictalias7` * \"+ \"sqrt(`verdictalias5`.`verdictalias9`), 2)) as sumsquared_scaled_a_sum, \"+ \"sum(`verdictalias5`.`verdictalias8` * \"+ \"sqrt(`verdictalias5`.`verdictalias9`)) as sum_scaled_a_count, \"+ \"sum(pow(`verdictalias5`.`verdictalias8` * \"+ \"sqrt(`verdictalias5`.`verdictalias9`), 2)) as sumsquared_scaled_a_count, \"+ \"count(*) as subsample_count \"+ \"from (select `verdictalias1`.`mygroup` as verdictalias6, \"+ \"sum(`verdictalias1`.`mycolumn1` / \"+ \"(`verdictalias1`.`verdictalias2` + (`verdictalias1`.`verdictalias3` * \" + k+ \"))) as verdictalias7, \"+ \"sum(case 1 when `verdictalias1`.`mycolumn1` is not null else 0 end\"+ \" / (`verdictalias1`.`verdictalias2` + (`verdictalias1`.`verdictalias3` * \" + k+ \"))) as verdictalias8, \"+ \"sum(case 1 when `verdictalias1`.`mycolumn1` is not null else 0 end) as verdictalias9 \"+ \"from (select *, `t`.`verdictincprob` as verdictalias2, \"+ \"`t`.`verdictincprobblockdiff` as verdictalias3, \"+ \"`t`.`verdictsid` as verdictalias4 \"+ \"from `myschema`.`mytable` as t \"+ \"where `t`.`verdictpartition` = \" + k + \") as verdictalias1 \"+ \"group by `verdictalias6`, `verdictalias1`.`verdictalias4`) as verdictalias5 \"+ \"group by `mygroup`\"","dfgs":[],"fName":"src_test_java_org_verdictdb_core_rewriter_ScrambleRewriterFlatQueryTest.java","fieldParents":[],"isDel":false,"lineBeg":276,"lineEnd":302,"lineMapIndex":25,"methodParents":[],"nodeIndex":103},{"cfgs":[105],"code":"SelectQueryOp nestedSource = SelectQueryOp.getSelectQueryOp(Arrays.<SelectItem>asList(new AliasedColumn(ColumnOp.multiply(new BaseColumn(\"t\", \"price\"), new BaseColumn(\"t\", \"discount\")),\"discounted_price\")),base)","dfgs":[105,106],"fName":"src_test_java_org_verdictdb_core_rewriter_ScrambleRewriterFlatQueryTest.java","fieldParents":[],"isDel":false,"lineBeg":312,"lineEnd":317,"lineMapIndex":26,"methodParents":[],"nodeIndex":104},{"cfgs":[106],"code":"nestedSource.setAliasName(\"s\")","dfgs":[106],"fName":"src_test_java_org_verdictdb_core_rewriter_ScrambleRewriterFlatQueryTest.java","fieldParents":[],"isDel":false,"lineBeg":318,"lineEnd":318,"lineMapIndex":-1,"methodParents":[],"nodeIndex":105},{"cfgs":[107],"code":"SelectQueryOp relation = SelectQueryOp.getSelectQueryOp(Arrays.<SelectItem>asList(new AliasedColumn(new ColumnOp(\"sum\", new BaseColumn(\"s\", \"discounted_price\")), \"a\")),nestedSource)","dfgs":[107],"fName":"src_test_java_org_verdictdb_core_rewriter_ScrambleRewriterFlatQueryTest.java","fieldParents":[],"isDel":false,"lineBeg":319,"lineEnd":322,"lineMapIndex":27,"methodParents":[],"nodeIndex":106},{"cfgs":[],"code":"String expected = \"select sum(`verdictalias8`.`verdictalias9`) as a, \"+ \"sum(`verdictalias8`.`verdictalias9` * \"+ \"sqrt(`verdictalias8`.`verdictalias10`)) as sum_scaled_a, \"+ \"sum(pow(`verdictalias8`.`verdictalias9` * \"+ \"sqrt(`verdictalias8`.`verdictalias10`), 2)) as sumsquared_scaled_a, \"+ \"count(*) as subsample_count \"+ \"from (\"+ \"select sum(`s`.`discounted_price` / \"+ \"(`s`.`verdictalias5` + (`s`.`verdictalias6` * \" + k+ \"))) as verdictalias9, \"+ \"sum(case 1 when `s`.`discounted_price` is not null else 0 end) as verdictalias10 \"+ \"from (select `verdictalias1`.`price` * `verdictalias1`.`discount` as discounted_price, \"+ \"`verdictalias1`.`verdictalias2` as verdictalias5, \"+ \"`verdictalias1`.`verdictalias3` as verdictalias6, \"+ \"`verdictalias1`.`verdictalias4` as verdictalias7 \"+ \"from (select *, `t`.`verdictincprob` as verdictalias2, \"+ \"`t`.`verdictincprobblockdiff` as verdictalias3, \"+ \"`t`.`verdictsid` as verdictalias4 \"+ \"from `myschema`.`mytable` as t \"+ \"where `t`.`verdictpartition` = \" + k + \") as verdictalias1) as s \"+ \"group by `s`.`verdictalias7`) as verdictalias8\"","dfgs":[],"fName":"src_test_java_org_verdictdb_core_rewriter_ScrambleRewriterFlatQueryTest.java","fieldParents":[],"isDel":false,"lineBeg":328,"lineEnd":348,"lineMapIndex":28,"methodParents":[],"nodeIndex":107},{"cfgs":[],"code":"import org.apache.commons.lang3.builder.EqualsBuilder","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_AbstractRelation.java","fieldParents":[],"isDel":false,"lineBeg":5,"lineEnd":5,"lineMapIndex":-1,"methodParents":[],"nodeIndex":108},{"cfgs":[],"code":"import org.apache.commons.lang3.builder.HashCodeBuilder","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_AbstractRelation.java","fieldParents":[],"isDel":false,"lineBeg":6,"lineEnd":6,"lineMapIndex":-1,"methodParents":[],"nodeIndex":109},{"cfgs":[],"code":"import org.apache.commons.lang3.builder.ToStringBuilder","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_AbstractRelation.java","fieldParents":[],"isDel":false,"lineBeg":7,"lineEnd":7,"lineMapIndex":-1,"methodParents":[],"nodeIndex":110},{"cfgs":[112],"code":"public int hashCode() ","dfgs":[112],"fName":"src_main_java_org_verdictdb_core_logical_query_AbstractRelation.java","fieldParents":[],"isDel":false,"lineBeg":28,"lineEnd":28,"lineMapIndex":-1,"methodParents":[],"nodeIndex":111},{"cfgs":[],"code":"return HashCodeBuilder.reflectionHashCode(this)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_AbstractRelation.java","fieldParents":[],"isDel":false,"lineBeg":29,"lineEnd":29,"lineMapIndex":-1,"methodParents":[],"nodeIndex":112},{"cfgs":[114],"code":"public boolean equals(Object obj) ","dfgs":[114],"fName":"src_main_java_org_verdictdb_core_logical_query_AbstractRelation.java","fieldParents":[],"isDel":false,"lineBeg":33,"lineEnd":33,"lineMapIndex":-1,"methodParents":[],"nodeIndex":113},{"cfgs":[],"code":"return EqualsBuilder.reflectionEquals(this, obj)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_AbstractRelation.java","fieldParents":[],"isDel":false,"lineBeg":34,"lineEnd":34,"lineMapIndex":-1,"methodParents":[],"nodeIndex":114},{"cfgs":[116],"code":"public String toString() ","dfgs":[116],"fName":"src_main_java_org_verdictdb_core_logical_query_AbstractRelation.java","fieldParents":[],"isDel":false,"lineBeg":38,"lineEnd":38,"lineMapIndex":-1,"methodParents":[],"nodeIndex":115},{"cfgs":[],"code":"return ToStringBuilder.reflectionToString(this)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_logical_query_AbstractRelation.java","fieldParents":[],"isDel":false,"lineBeg":39,"lineEnd":39,"lineMapIndex":-1,"methodParents":[],"nodeIndex":116}]