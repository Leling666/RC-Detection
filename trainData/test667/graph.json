[{"cfgs":[],"code":"import static org.junit.Assert.*","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":true,"lineBeg":3,"lineEnd":3,"lineMapIndex":-1,"methodParents":[],"nodeIndex":0},{"cfgs":[],"code":"import java.util.concurrent.ExecutorService","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":true,"lineBeg":9,"lineEnd":9,"lineMapIndex":-1,"methodParents":[],"nodeIndex":1},{"cfgs":[],"code":"import java.util.concurrent.Executors","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":true,"lineBeg":10,"lineEnd":10,"lineMapIndex":-1,"methodParents":[],"nodeIndex":2},{"cfgs":[],"code":"throw new IllegalArgumentException(String.format(\"Sanity check failure: Evidence %s does not provide support for call at %s\", evidence.getBreakendSummary(), parent.getBreakendSummary()))","dfgs":[],"fName":"src_main_java_au_edu_wehi_idsv_StructuralVariationCallBuilder.java","fieldParents":[],"isDel":true,"lineBeg":93,"lineEnd":93,"lineMapIndex":20,"methodParents":[],"nodeIndex":3},{"cfgs":[],"code":"return referenceIndex + (dir == BreakendDirection.Forward ? 0 : 1)","dfgs":[],"fName":"src_main_java_au_edu_wehi_idsv_SequentialEvidenceAllocator.java","fieldParents":[],"isDel":true,"lineBeg":295,"lineEnd":295,"lineMapIndex":-1,"methodParents":[],"nodeIndex":4},{"cfgs":[],"code":"import static org.junit.Assert.assertEquals","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":false,"lineBeg":3,"lineEnd":3,"lineMapIndex":-1,"methodParents":[],"nodeIndex":5},{"cfgs":[],"code":"import static org.junit.Assert.assertTrue","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":false,"lineBeg":4,"lineEnd":4,"lineMapIndex":-1,"methodParents":[],"nodeIndex":6},{"cfgs":[],"code":"import org.junit.Assert","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":false,"lineBeg":11,"lineEnd":11,"lineMapIndex":-1,"methodParents":[],"nodeIndex":7},{"cfgs":[],"code":"public void RemoteOverlap_localLookup_should_split_on_referenceIndex_and_direction() ","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":false,"lineBeg":63,"lineEnd":63,"lineMapIndex":-1,"methodParents":[],"nodeIndex":8},{"cfgs":[],"code":"final ProcessingContext pc = getContext()","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":false,"lineBeg":64,"lineEnd":64,"lineMapIndex":-1,"methodParents":[],"nodeIndex":9},{"cfgs":[],"code":"pc.getVariantCallingParameters().writeFiltered = true","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":false,"lineBeg":65,"lineEnd":65,"lineMapIndex":-1,"methodParents":[],"nodeIndex":10},{"cfgs":[],"code":"pc.getVariantCallingParameters().minScore = 0","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":false,"lineBeg":66,"lineEnd":66,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[],"code":"pc.getVariantCallingParameters().breakendMargin = 0","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":false,"lineBeg":67,"lineEnd":67,"lineMapIndex":-1,"methodParents":[],"nodeIndex":12},{"cfgs":[],"code":"StubSAMEvidenceSource ses = new StubSAMEvidenceSource(pc, null, 0, 0, 100)","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":false,"lineBeg":68,"lineEnd":68,"lineMapIndex":-1,"methodParents":[],"nodeIndex":13},{"cfgs":[],"code":"ses.evidence.add(SCE(FWD, Read(0, 1, \"1S1M1S\")))","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":false,"lineBeg":69,"lineEnd":69,"lineMapIndex":-1,"methodParents":[],"nodeIndex":14},{"cfgs":[],"code":"ses.evidence.add(SCE(BWD, Read(0, 1, \"1S1M1S\")))","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":false,"lineBeg":70,"lineEnd":70,"lineMapIndex":-1,"methodParents":[],"nodeIndex":15},{"cfgs":[],"code":"SequentialEvidenceAllocator allocator = new SequentialEvidenceAllocator(pc,ImmutableList.of((VariantContextDirectedBreakpoint)TestHelper.minimalVariant().breakpoint(new BreakpointSummary(1, FWD, 1, 1, 1, 0, FWD, 1, 1, 1), \"\").phredScore(1).id(\"call\").make()).iterator(),ses.evidence.iterator(), Integer.MAX_VALUE, true)","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":false,"lineBeg":73,"lineEnd":79,"lineMapIndex":-1,"methodParents":[],"nodeIndex":16},{"cfgs":[],"code":"VariantEvidenceSupport ves = allocator.next()","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":false,"lineBeg":81,"lineEnd":81,"lineMapIndex":-1,"methodParents":[],"nodeIndex":17},{"cfgs":[],"code":"Assert.assertTrue(ves.support.stream().allMatch(e -> ves.variant.getBreakendSummary().overlaps(e.getBreakendSummary())))","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":false,"lineBeg":82,"lineEnd":82,"lineMapIndex":-1,"methodParents":[],"nodeIndex":18},{"cfgs":[],"code":"","dfgs":[],"fName":"src_test_java_au_edu_wehi_idsv_SequentialEvidenceAllocatorTest.java","fieldParents":[],"isDel":false,"lineBeg":82,"lineEnd":81,"lineMapIndex":-1,"methodParents":[],"nodeIndex":19},{"cfgs":[],"code":"throw new IllegalArgumentException(String.format(\"Sanity check failure: Evidence %s %s does not provide support for call at %s\",evidence.getEvidenceID(),evidence.getBreakendSummary(),parent.getBreakendSummary()))","dfgs":[],"fName":"src_main_java_au_edu_wehi_idsv_StructuralVariationCallBuilder.java","fieldParents":[],"isDel":false,"lineBeg":93,"lineEnd":96,"lineMapIndex":3,"methodParents":[],"nodeIndex":20},{"cfgs":[],"code":"return 2 * referenceIndex + (dir == BreakendDirection.Forward ? 0 : 1)","dfgs":[],"fName":"src_main_java_au_edu_wehi_idsv_SequentialEvidenceAllocator.java","fieldParents":[],"isDel":false,"lineBeg":295,"lineEnd":295,"lineMapIndex":-1,"methodParents":[],"nodeIndex":21}]