[{"cfgs":[],"code":"private static final DateTimeZone PARIS = DateTimeZone.forID(\"Europe/Paris\")","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":true,"lineBeg":35,"lineEnd":35,"lineMapIndex":-1,"methodParents":[],"nodeIndex":0},{"cfgs":[],"code":"setMillis(type.getField(getChronology()).add(getMillis(), amount))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":true,"lineBeg":640,"lineEnd":640,"lineMapIndex":111,"methodParents":[1],"nodeIndex":1},{"cfgs":[],"code":"setMillis(getChronology().years().add(getMillis(), years))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":true,"lineBeg":661,"lineEnd":661,"lineMapIndex":113,"methodParents":[1],"nodeIndex":2},{"cfgs":[],"code":"setMillis(getChronology().weekyears().add(getMillis(), weekyears))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":true,"lineBeg":682,"lineEnd":682,"lineMapIndex":115,"methodParents":[1],"nodeIndex":3},{"cfgs":[],"code":"setMillis(getChronology().months().add(getMillis(), months))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":true,"lineBeg":703,"lineEnd":703,"lineMapIndex":117,"methodParents":[1],"nodeIndex":4},{"cfgs":[],"code":"setMillis(getChronology().weeks().add(getMillis(), weeks))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":true,"lineBeg":724,"lineEnd":724,"lineMapIndex":119,"methodParents":[1],"nodeIndex":5},{"cfgs":[],"code":"setMillis(getChronology().days().add(getMillis(), days))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":true,"lineBeg":765,"lineEnd":765,"lineMapIndex":121,"methodParents":[1],"nodeIndex":6},{"cfgs":[],"code":"setMillis(getChronology().hours().add(getMillis(), hours))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":true,"lineBeg":786,"lineEnd":786,"lineMapIndex":123,"methodParents":[1],"nodeIndex":7},{"cfgs":[],"code":"setMillis(getChronology().minutes().add(getMillis(), minutes))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":true,"lineBeg":817,"lineEnd":817,"lineMapIndex":125,"methodParents":[1],"nodeIndex":8},{"cfgs":[],"code":"setMillis(getChronology().seconds().add(getMillis(), seconds))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":true,"lineBeg":848,"lineEnd":848,"lineMapIndex":127,"methodParents":[1],"nodeIndex":9},{"cfgs":[],"code":"setMillis(getChronology().millis().add(getMillis(), millis))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":true,"lineBeg":881,"lineEnd":881,"lineMapIndex":129,"methodParents":[1],"nodeIndex":10},{"cfgs":[],"code":"public void testAdd_DurationFieldType_int_dstOverlapSummer_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":175,"lineEnd":175,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":176,"lineEnd":176,"lineMapIndex":-1,"methodParents":[],"nodeIndex":12},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":177,"lineEnd":177,"lineMapIndex":-1,"methodParents":[],"nodeIndex":13},{"cfgs":[],"code":"test.add(DurationFieldType.years(), 0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":178,"lineEnd":178,"lineMapIndex":-1,"methodParents":[110],"nodeIndex":14},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":179,"lineEnd":179,"lineMapIndex":-1,"methodParents":[],"nodeIndex":15},{"cfgs":[],"code":"public void testAdd_DurationFieldType_int_dstOverlapWinter_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":182,"lineEnd":182,"lineMapIndex":-1,"methodParents":[],"nodeIndex":16},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":183,"lineEnd":183,"lineMapIndex":-1,"methodParents":[],"nodeIndex":17},{"cfgs":[],"code":"test.addHours(1)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":184,"lineEnd":184,"lineMapIndex":-1,"methodParents":[122],"nodeIndex":18},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":185,"lineEnd":185,"lineMapIndex":-1,"methodParents":[],"nodeIndex":19},{"cfgs":[],"code":"test.add(DurationFieldType.years(), 0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":186,"lineEnd":186,"lineMapIndex":-1,"methodParents":[110],"nodeIndex":20},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":187,"lineEnd":187,"lineMapIndex":-1,"methodParents":[],"nodeIndex":21},{"cfgs":[],"code":"public void testAddYears_int_dstOverlapSummer_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":215,"lineEnd":215,"lineMapIndex":-1,"methodParents":[],"nodeIndex":22},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":216,"lineEnd":216,"lineMapIndex":-1,"methodParents":[],"nodeIndex":23},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":217,"lineEnd":217,"lineMapIndex":-1,"methodParents":[],"nodeIndex":24},{"cfgs":[],"code":"test.addYears(0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":218,"lineEnd":218,"lineMapIndex":-1,"methodParents":[112],"nodeIndex":25},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":219,"lineEnd":219,"lineMapIndex":-1,"methodParents":[],"nodeIndex":26},{"cfgs":[],"code":"public void testAddYears_int_dstOverlapWinter_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":222,"lineEnd":222,"lineMapIndex":-1,"methodParents":[],"nodeIndex":27},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":223,"lineEnd":223,"lineMapIndex":-1,"methodParents":[],"nodeIndex":28},{"cfgs":[],"code":"test.addHours(1)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":224,"lineEnd":224,"lineMapIndex":-1,"methodParents":[122],"nodeIndex":29},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":225,"lineEnd":225,"lineMapIndex":-1,"methodParents":[],"nodeIndex":30},{"cfgs":[],"code":"test.addYears(0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":226,"lineEnd":226,"lineMapIndex":-1,"methodParents":[112],"nodeIndex":31},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":227,"lineEnd":227,"lineMapIndex":-1,"methodParents":[],"nodeIndex":32},{"cfgs":[],"code":"public void testAddMonths_int_dstOverlapSummer_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":237,"lineEnd":237,"lineMapIndex":-1,"methodParents":[],"nodeIndex":33},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":238,"lineEnd":238,"lineMapIndex":-1,"methodParents":[],"nodeIndex":34},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":239,"lineEnd":239,"lineMapIndex":-1,"methodParents":[],"nodeIndex":35},{"cfgs":[],"code":"test.addMonths(0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":240,"lineEnd":240,"lineMapIndex":-1,"methodParents":[116],"nodeIndex":36},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":241,"lineEnd":241,"lineMapIndex":-1,"methodParents":[],"nodeIndex":37},{"cfgs":[],"code":"public void testAddMonths_int_dstOverlapWinter_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":244,"lineEnd":244,"lineMapIndex":-1,"methodParents":[],"nodeIndex":38},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":245,"lineEnd":245,"lineMapIndex":-1,"methodParents":[],"nodeIndex":39},{"cfgs":[],"code":"test.addHours(1)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":246,"lineEnd":246,"lineMapIndex":-1,"methodParents":[122],"nodeIndex":40},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":247,"lineEnd":247,"lineMapIndex":-1,"methodParents":[],"nodeIndex":41},{"cfgs":[],"code":"test.addMonths(0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":248,"lineEnd":248,"lineMapIndex":-1,"methodParents":[116],"nodeIndex":42},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":249,"lineEnd":249,"lineMapIndex":-1,"methodParents":[],"nodeIndex":43},{"cfgs":[],"code":"public void testAddDays_int_dstOverlapSummer_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":259,"lineEnd":259,"lineMapIndex":-1,"methodParents":[],"nodeIndex":44},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":260,"lineEnd":260,"lineMapIndex":-1,"methodParents":[],"nodeIndex":45},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":261,"lineEnd":261,"lineMapIndex":-1,"methodParents":[],"nodeIndex":46},{"cfgs":[],"code":"test.addDays(0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":262,"lineEnd":262,"lineMapIndex":-1,"methodParents":[120],"nodeIndex":47},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":263,"lineEnd":263,"lineMapIndex":-1,"methodParents":[],"nodeIndex":48},{"cfgs":[],"code":"public void testAddDays_int_dstOverlapWinter_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":266,"lineEnd":266,"lineMapIndex":-1,"methodParents":[],"nodeIndex":49},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":267,"lineEnd":267,"lineMapIndex":-1,"methodParents":[],"nodeIndex":50},{"cfgs":[],"code":"test.addHours(1)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":268,"lineEnd":268,"lineMapIndex":-1,"methodParents":[122],"nodeIndex":51},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":269,"lineEnd":269,"lineMapIndex":-1,"methodParents":[],"nodeIndex":52},{"cfgs":[],"code":"test.addDays(0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":270,"lineEnd":270,"lineMapIndex":-1,"methodParents":[120],"nodeIndex":53},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":271,"lineEnd":271,"lineMapIndex":-1,"methodParents":[],"nodeIndex":54},{"cfgs":[],"code":"public void testAddWeeks_int_dstOverlapSummer_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":288,"lineEnd":288,"lineMapIndex":-1,"methodParents":[],"nodeIndex":55},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":289,"lineEnd":289,"lineMapIndex":-1,"methodParents":[],"nodeIndex":56},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":290,"lineEnd":290,"lineMapIndex":-1,"methodParents":[],"nodeIndex":57},{"cfgs":[],"code":"test.addWeeks(0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":291,"lineEnd":291,"lineMapIndex":-1,"methodParents":[118],"nodeIndex":58},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":292,"lineEnd":292,"lineMapIndex":-1,"methodParents":[],"nodeIndex":59},{"cfgs":[],"code":"public void testAddWeeks_int_dstOverlapWinter_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":295,"lineEnd":295,"lineMapIndex":-1,"methodParents":[],"nodeIndex":60},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":296,"lineEnd":296,"lineMapIndex":-1,"methodParents":[],"nodeIndex":61},{"cfgs":[],"code":"test.addHours(1)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":297,"lineEnd":297,"lineMapIndex":-1,"methodParents":[122],"nodeIndex":62},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":298,"lineEnd":298,"lineMapIndex":-1,"methodParents":[],"nodeIndex":63},{"cfgs":[],"code":"test.addWeeks(0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":299,"lineEnd":299,"lineMapIndex":-1,"methodParents":[118],"nodeIndex":64},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":300,"lineEnd":300,"lineMapIndex":-1,"methodParents":[],"nodeIndex":65},{"cfgs":[],"code":"public void testAddHours_int_dstOverlapSummer_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":310,"lineEnd":310,"lineMapIndex":-1,"methodParents":[],"nodeIndex":66},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":311,"lineEnd":311,"lineMapIndex":-1,"methodParents":[],"nodeIndex":67},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":312,"lineEnd":312,"lineMapIndex":-1,"methodParents":[],"nodeIndex":68},{"cfgs":[],"code":"test.addHours(0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":313,"lineEnd":313,"lineMapIndex":-1,"methodParents":[122],"nodeIndex":69},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":314,"lineEnd":314,"lineMapIndex":-1,"methodParents":[],"nodeIndex":70},{"cfgs":[],"code":"public void testAddHours_int_dstOverlapWinter_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":317,"lineEnd":317,"lineMapIndex":-1,"methodParents":[],"nodeIndex":71},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":318,"lineEnd":318,"lineMapIndex":-1,"methodParents":[],"nodeIndex":72},{"cfgs":[],"code":"test.addHours(1)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":319,"lineEnd":319,"lineMapIndex":-1,"methodParents":[122],"nodeIndex":73},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":320,"lineEnd":320,"lineMapIndex":-1,"methodParents":[],"nodeIndex":74},{"cfgs":[],"code":"test.addHours(0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":321,"lineEnd":321,"lineMapIndex":-1,"methodParents":[122],"nodeIndex":75},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":322,"lineEnd":322,"lineMapIndex":-1,"methodParents":[],"nodeIndex":76},{"cfgs":[],"code":"public void testAddMinutes_int_dstOverlapSummer_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":332,"lineEnd":332,"lineMapIndex":-1,"methodParents":[],"nodeIndex":77},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":333,"lineEnd":333,"lineMapIndex":-1,"methodParents":[],"nodeIndex":78},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":334,"lineEnd":334,"lineMapIndex":-1,"methodParents":[],"nodeIndex":79},{"cfgs":[],"code":"test.addMinutes(0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":335,"lineEnd":335,"lineMapIndex":-1,"methodParents":[124],"nodeIndex":80},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":336,"lineEnd":336,"lineMapIndex":-1,"methodParents":[],"nodeIndex":81},{"cfgs":[],"code":"public void testAddMinutes_int_dstOverlapWinter_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":339,"lineEnd":339,"lineMapIndex":-1,"methodParents":[],"nodeIndex":82},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":340,"lineEnd":340,"lineMapIndex":-1,"methodParents":[],"nodeIndex":83},{"cfgs":[],"code":"test.addHours(1)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":341,"lineEnd":341,"lineMapIndex":-1,"methodParents":[122],"nodeIndex":84},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":342,"lineEnd":342,"lineMapIndex":-1,"methodParents":[],"nodeIndex":85},{"cfgs":[],"code":"test.addMinutes(0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":343,"lineEnd":343,"lineMapIndex":-1,"methodParents":[124],"nodeIndex":86},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":344,"lineEnd":344,"lineMapIndex":-1,"methodParents":[],"nodeIndex":87},{"cfgs":[],"code":"public void testAddSeconds_int_dstOverlapSummer_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":354,"lineEnd":354,"lineMapIndex":-1,"methodParents":[],"nodeIndex":88},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":355,"lineEnd":355,"lineMapIndex":-1,"methodParents":[],"nodeIndex":89},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":356,"lineEnd":356,"lineMapIndex":-1,"methodParents":[],"nodeIndex":90},{"cfgs":[],"code":"test.addSeconds(0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":357,"lineEnd":357,"lineMapIndex":-1,"methodParents":[126],"nodeIndex":91},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":358,"lineEnd":358,"lineMapIndex":-1,"methodParents":[],"nodeIndex":92},{"cfgs":[],"code":"public void testAddSeconds_int_dstOverlapWinter_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":361,"lineEnd":361,"lineMapIndex":-1,"methodParents":[],"nodeIndex":93},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":362,"lineEnd":362,"lineMapIndex":-1,"methodParents":[],"nodeIndex":94},{"cfgs":[],"code":"test.addHours(1)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":363,"lineEnd":363,"lineMapIndex":-1,"methodParents":[122],"nodeIndex":95},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":364,"lineEnd":364,"lineMapIndex":-1,"methodParents":[],"nodeIndex":96},{"cfgs":[],"code":"test.addSeconds(0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":365,"lineEnd":365,"lineMapIndex":-1,"methodParents":[126],"nodeIndex":97},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":366,"lineEnd":366,"lineMapIndex":-1,"methodParents":[],"nodeIndex":98},{"cfgs":[],"code":"public void testAddMillis_int_dstOverlapSummer_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":376,"lineEnd":376,"lineMapIndex":-1,"methodParents":[],"nodeIndex":99},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":377,"lineEnd":377,"lineMapIndex":-1,"methodParents":[],"nodeIndex":100},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":378,"lineEnd":378,"lineMapIndex":-1,"methodParents":[],"nodeIndex":101},{"cfgs":[],"code":"test.addMillis(0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":379,"lineEnd":379,"lineMapIndex":-1,"methodParents":[128],"nodeIndex":102},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":380,"lineEnd":380,"lineMapIndex":-1,"methodParents":[],"nodeIndex":103},{"cfgs":[],"code":"public void testAddMillis_int_dstOverlapWinter_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":383,"lineEnd":383,"lineMapIndex":-1,"methodParents":[],"nodeIndex":104},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":384,"lineEnd":384,"lineMapIndex":-1,"methodParents":[],"nodeIndex":105},{"cfgs":[],"code":"test.addHours(1)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":385,"lineEnd":385,"lineMapIndex":-1,"methodParents":[122],"nodeIndex":106},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":386,"lineEnd":386,"lineMapIndex":-1,"methodParents":[],"nodeIndex":107},{"cfgs":[],"code":"test.addMillis(0)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":387,"lineEnd":387,"lineMapIndex":-1,"methodParents":[128],"nodeIndex":108},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Adds.java","fieldParents":[],"isDel":false,"lineBeg":388,"lineEnd":388,"lineMapIndex":-1,"methodParents":[],"nodeIndex":109},{"cfgs":[111],"code":"if (amount != 0)","dfgs":[111],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":639,"lineEnd":639,"lineMapIndex":-1,"methodParents":[],"nodeIndex":110},{"cfgs":[],"code":"setMillis(type.getField(getChronology()).add(getMillis(), amount))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":640,"lineEnd":640,"lineMapIndex":1,"methodParents":[110],"nodeIndex":111},{"cfgs":[113],"code":"if (years != 0)","dfgs":[113],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":662,"lineEnd":662,"lineMapIndex":-1,"methodParents":[],"nodeIndex":112},{"cfgs":[],"code":"setMillis(getChronology().years().add(getMillis(), years))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":663,"lineEnd":663,"lineMapIndex":2,"methodParents":[110],"nodeIndex":113},{"cfgs":[115],"code":"if (weekyears != 0)","dfgs":[115],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":685,"lineEnd":685,"lineMapIndex":-1,"methodParents":[],"nodeIndex":114},{"cfgs":[],"code":"setMillis(getChronology().weekyears().add(getMillis(), weekyears))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":686,"lineEnd":686,"lineMapIndex":3,"methodParents":[110],"nodeIndex":115},{"cfgs":[117],"code":"if (months != 0)","dfgs":[117],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":708,"lineEnd":708,"lineMapIndex":-1,"methodParents":[],"nodeIndex":116},{"cfgs":[],"code":"setMillis(getChronology().months().add(getMillis(), months))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":709,"lineEnd":709,"lineMapIndex":4,"methodParents":[110],"nodeIndex":117},{"cfgs":[119],"code":"if (weeks != 0)","dfgs":[119],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":731,"lineEnd":731,"lineMapIndex":-1,"methodParents":[],"nodeIndex":118},{"cfgs":[],"code":"setMillis(getChronology().weeks().add(getMillis(), weeks))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":732,"lineEnd":732,"lineMapIndex":5,"methodParents":[110],"nodeIndex":119},{"cfgs":[121],"code":"if (days != 0)","dfgs":[121],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":774,"lineEnd":774,"lineMapIndex":-1,"methodParents":[],"nodeIndex":120},{"cfgs":[],"code":"setMillis(getChronology().days().add(getMillis(), days))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":775,"lineEnd":775,"lineMapIndex":6,"methodParents":[110],"nodeIndex":121},{"cfgs":[123],"code":"if (hours != 0)","dfgs":[123],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":797,"lineEnd":797,"lineMapIndex":-1,"methodParents":[],"nodeIndex":122},{"cfgs":[],"code":"setMillis(getChronology().hours().add(getMillis(), hours))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":798,"lineEnd":798,"lineMapIndex":7,"methodParents":[110],"nodeIndex":123},{"cfgs":[125],"code":"if (minutes != 0)","dfgs":[125],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":830,"lineEnd":830,"lineMapIndex":-1,"methodParents":[],"nodeIndex":124},{"cfgs":[],"code":"setMillis(getChronology().minutes().add(getMillis(), minutes))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":831,"lineEnd":831,"lineMapIndex":8,"methodParents":[110],"nodeIndex":125},{"cfgs":[127],"code":"if (seconds != 0)","dfgs":[127],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":863,"lineEnd":863,"lineMapIndex":-1,"methodParents":[],"nodeIndex":126},{"cfgs":[],"code":"setMillis(getChronology().seconds().add(getMillis(), seconds))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":864,"lineEnd":864,"lineMapIndex":9,"methodParents":[110],"nodeIndex":127},{"cfgs":[129],"code":"if (millis != 0)","dfgs":[129],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":898,"lineEnd":898,"lineMapIndex":-1,"methodParents":[],"nodeIndex":128},{"cfgs":[],"code":"setMillis(getChronology().millis().add(getMillis(), millis))","dfgs":[],"fName":"src_main_java_org_joda_time_MutableDateTime.java","fieldParents":[],"isDel":false,"lineBeg":899,"lineEnd":899,"lineMapIndex":10,"methodParents":[110],"nodeIndex":129},{"cfgs":[],"code":"public void testSetMonthOfYear_int_dstOverlapSummer_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":430,"lineEnd":430,"lineMapIndex":-1,"methodParents":[],"nodeIndex":130},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":431,"lineEnd":431,"lineMapIndex":-1,"methodParents":[],"nodeIndex":131},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":432,"lineEnd":432,"lineMapIndex":-1,"methodParents":[],"nodeIndex":132},{"cfgs":[],"code":"test.setMonthOfYear(10)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":433,"lineEnd":433,"lineMapIndex":-1,"methodParents":[],"nodeIndex":133},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":434,"lineEnd":434,"lineMapIndex":-1,"methodParents":[],"nodeIndex":134},{"cfgs":[],"code":"public void testSetMonthOfYear_int_dstOverlapWinter_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":437,"lineEnd":437,"lineMapIndex":-1,"methodParents":[],"nodeIndex":135},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":438,"lineEnd":438,"lineMapIndex":-1,"methodParents":[],"nodeIndex":136},{"cfgs":[],"code":"test.addHours(1)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":439,"lineEnd":439,"lineMapIndex":-1,"methodParents":[122],"nodeIndex":137},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":440,"lineEnd":440,"lineMapIndex":-1,"methodParents":[],"nodeIndex":138},{"cfgs":[],"code":"test.setMonthOfYear(10)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":441,"lineEnd":441,"lineMapIndex":-1,"methodParents":[],"nodeIndex":139},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":442,"lineEnd":442,"lineMapIndex":-1,"methodParents":[],"nodeIndex":140},{"cfgs":[],"code":"public void testSetDayOfMonth_int_dstOverlapSummer_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":470,"lineEnd":470,"lineMapIndex":-1,"methodParents":[],"nodeIndex":141},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":471,"lineEnd":471,"lineMapIndex":-1,"methodParents":[],"nodeIndex":142},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":472,"lineEnd":472,"lineMapIndex":-1,"methodParents":[],"nodeIndex":143},{"cfgs":[],"code":"test.setDayOfMonth(30)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":473,"lineEnd":473,"lineMapIndex":-1,"methodParents":[],"nodeIndex":144},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":474,"lineEnd":474,"lineMapIndex":-1,"methodParents":[],"nodeIndex":145},{"cfgs":[],"code":"public void testSetDayOfMonth_int_dstOverlapWinter_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":477,"lineEnd":477,"lineMapIndex":-1,"methodParents":[],"nodeIndex":146},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":478,"lineEnd":478,"lineMapIndex":-1,"methodParents":[],"nodeIndex":147},{"cfgs":[],"code":"test.addHours(1)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":479,"lineEnd":479,"lineMapIndex":-1,"methodParents":[122],"nodeIndex":148},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":480,"lineEnd":480,"lineMapIndex":-1,"methodParents":[],"nodeIndex":149},{"cfgs":[],"code":"test.setDayOfMonth(30)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":481,"lineEnd":481,"lineMapIndex":-1,"methodParents":[],"nodeIndex":150},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":482,"lineEnd":482,"lineMapIndex":-1,"methodParents":[],"nodeIndex":151},{"cfgs":[],"code":"public void testSetDayOfYear_int_dstOverlapSummer_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":492,"lineEnd":492,"lineMapIndex":-1,"methodParents":[],"nodeIndex":152},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":493,"lineEnd":493,"lineMapIndex":-1,"methodParents":[],"nodeIndex":153},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":494,"lineEnd":494,"lineMapIndex":-1,"methodParents":[],"nodeIndex":154},{"cfgs":[],"code":"test.setDayOfYear(303)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":495,"lineEnd":495,"lineMapIndex":-1,"methodParents":[],"nodeIndex":155},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+02:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":496,"lineEnd":496,"lineMapIndex":-1,"methodParents":[],"nodeIndex":156},{"cfgs":[],"code":"public void testSetDayOfYear_int_dstOverlapWinter_addZero() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":499,"lineEnd":499,"lineMapIndex":-1,"methodParents":[],"nodeIndex":157},{"cfgs":[],"code":"MutableDateTime test = new MutableDateTime(2011, 10, 30, 2, 30, 0, 0, DateTimeZone.forID(\"Europe/Berlin\"))","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":500,"lineEnd":500,"lineMapIndex":-1,"methodParents":[],"nodeIndex":158},{"cfgs":[],"code":"test.addHours(1)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":501,"lineEnd":501,"lineMapIndex":-1,"methodParents":[122],"nodeIndex":159},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":502,"lineEnd":502,"lineMapIndex":-1,"methodParents":[],"nodeIndex":160},{"cfgs":[],"code":"test.setDayOfYear(303)","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":503,"lineEnd":503,"lineMapIndex":-1,"methodParents":[],"nodeIndex":161},{"cfgs":[],"code":"assertEquals(\"2011-10-30T02:30:00.000+01:00\", test.toString())","dfgs":[],"fName":"src_test_java_org_joda_time_TestMutableDateTime_Sets.java","fieldParents":[],"isDel":false,"lineBeg":504,"lineEnd":504,"lineMapIndex":-1,"methodParents":[],"nodeIndex":162}]