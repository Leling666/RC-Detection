[{"cfgs":[],"code":"if (Precision.compareTo(entry, 0d, maxUlps) > 0)","dfgs":[],"fName":"src_main_java_org_apache_commons_math3_optimization_linear_SimplexTableau.java","fieldParents":[],"isDel":true,"lineBeg":338,"lineEnd":338,"lineMapIndex":1,"methodParents":[],"nodeIndex":0},{"cfgs":[],"code":"if (Precision.compareTo(entry, 0d, epsilon) > 0)","dfgs":[],"fName":"src_main_java_org_apache_commons_math3_optimization_linear_SimplexTableau.java","fieldParents":[],"isDel":false,"lineBeg":338,"lineEnd":338,"lineMapIndex":0,"methodParents":[],"nodeIndex":1},{"cfgs":[],"code":"public void testMath781() ","dfgs":[],"fName":"src_test_java_org_apache_commons_math3_optimization_linear_SimplexSolverTest.java","fieldParents":[],"isDel":false,"lineBeg":33,"lineEnd":33,"lineMapIndex":-1,"methodParents":[],"nodeIndex":2},{"cfgs":[4],"code":"LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 6, 7 }, 0)","dfgs":[10],"fName":"src_test_java_org_apache_commons_math3_optimization_linear_SimplexSolverTest.java","fieldParents":[],"isDel":false,"lineBeg":34,"lineEnd":34,"lineMapIndex":-1,"methodParents":[],"nodeIndex":3},{"cfgs":[5],"code":"ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>()","dfgs":[5],"fName":"src_test_java_org_apache_commons_math3_optimization_linear_SimplexSolverTest.java","fieldParents":[],"isDel":false,"lineBeg":36,"lineEnd":36,"lineMapIndex":-1,"methodParents":[],"nodeIndex":4},{"cfgs":[6],"code":"constraints.add(new LinearConstraint(new double[] { 1, 2, 1 }, Relationship.LEQ, 2))","dfgs":[6],"fName":"src_test_java_org_apache_commons_math3_optimization_linear_SimplexSolverTest.java","fieldParents":[],"isDel":false,"lineBeg":37,"lineEnd":37,"lineMapIndex":-1,"methodParents":[],"nodeIndex":5},{"cfgs":[7],"code":"constraints.add(new LinearConstraint(new double[] { -1, 1, 1 }, Relationship.LEQ, -1))","dfgs":[7],"fName":"src_test_java_org_apache_commons_math3_optimization_linear_SimplexSolverTest.java","fieldParents":[],"isDel":false,"lineBeg":38,"lineEnd":38,"lineMapIndex":-1,"methodParents":[],"nodeIndex":6},{"cfgs":[8],"code":"constraints.add(new LinearConstraint(new double[] { 2, -3, 1 }, Relationship.LEQ, -1))","dfgs":[10],"fName":"src_test_java_org_apache_commons_math3_optimization_linear_SimplexSolverTest.java","fieldParents":[],"isDel":false,"lineBeg":39,"lineEnd":39,"lineMapIndex":-1,"methodParents":[],"nodeIndex":7},{"cfgs":[9],"code":"double epsilon = 1e-6","dfgs":[11],"fName":"src_test_java_org_apache_commons_math3_optimization_linear_SimplexSolverTest.java","fieldParents":[],"isDel":false,"lineBeg":41,"lineEnd":41,"lineMapIndex":-1,"methodParents":[],"nodeIndex":8},{"cfgs":[10],"code":"SimplexSolver solver = new SimplexSolver()","dfgs":[10],"fName":"src_test_java_org_apache_commons_math3_optimization_linear_SimplexSolverTest.java","fieldParents":[],"isDel":false,"lineBeg":42,"lineEnd":42,"lineMapIndex":-1,"methodParents":[],"nodeIndex":9},{"cfgs":[11],"code":"PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false)","dfgs":[11],"fName":"src_test_java_org_apache_commons_math3_optimization_linear_SimplexSolverTest.java","fieldParents":[],"isDel":false,"lineBeg":43,"lineEnd":43,"lineMapIndex":-1,"methodParents":[],"nodeIndex":10},{"cfgs":[12],"code":"Assert.assertTrue(Precision.compareTo(solution.getPoint()[0], 0.0d, epsilon) > 0)","dfgs":[12],"fName":"src_test_java_org_apache_commons_math3_optimization_linear_SimplexSolverTest.java","fieldParents":[],"isDel":false,"lineBeg":45,"lineEnd":45,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[13],"code":"Assert.assertTrue(Precision.compareTo(solution.getPoint()[1], 0.0d, epsilon) > 0)","dfgs":[13],"fName":"src_test_java_org_apache_commons_math3_optimization_linear_SimplexSolverTest.java","fieldParents":[],"isDel":false,"lineBeg":46,"lineEnd":46,"lineMapIndex":-1,"methodParents":[],"nodeIndex":12},{"cfgs":[14],"code":"Assert.assertTrue(Precision.compareTo(solution.getPoint()[2], 0.0d, epsilon) < 0)","dfgs":[14],"fName":"src_test_java_org_apache_commons_math3_optimization_linear_SimplexSolverTest.java","fieldParents":[],"isDel":false,"lineBeg":47,"lineEnd":47,"lineMapIndex":-1,"methodParents":[],"nodeIndex":13},{"cfgs":[],"code":"Assert.assertEquals(2.0d, solution.getValue(), epsilon)","dfgs":[],"fName":"src_test_java_org_apache_commons_math3_optimization_linear_SimplexSolverTest.java","fieldParents":[],"isDel":false,"lineBeg":48,"lineEnd":48,"lineMapIndex":-1,"methodParents":[],"nodeIndex":14}]