[{"cfgs":[],"code":"public static final CSVFormat EXCEL = DEFAULT.withIgnoreEmptyLines(false)","dfgs":[],"fName":"src_main_java_org_apache_commons_csv_CSVFormat.java","fieldParents":[],"isDel":true,"lineBeg":218,"lineEnd":218,"lineMapIndex":36,"methodParents":[],"nodeIndex":0},{"cfgs":[2],"code":"private static final String CSV_INPUT = \"a,b,c,d\\n\"+ \" a , b , 1 2 \\n\"+ \"\\\"foo baar\\\", b,\\n\"// + \"   \\\"foo\\n,,\\n\\\"\\\",,\\n\\\\\\\"\\\",d,e\\n\";+ \"   \\\"foo\\n,,\\n\\\"\\\",,\\n\\\"\\\"\\\",d,e\\n\"","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":65,"lineEnd":69,"lineMapIndex":37,"methodParents":[],"nodeIndex":1},{"cfgs":[],"code":"private static final String[][] RESULT = {{\"a\", \"b\", \"c\", \"d\"},{\"a\", \"b\", \"1 2\"},{\"foo baar\", \"b\", \"\"},{\"foo\\n,,\\n\\\",,\\n\\\"\", \"d\", \"e\"}}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":75,"lineEnd":80,"lineMapIndex":38,"methodParents":[],"nodeIndex":2},{"cfgs":[4],"code":"final String code =\"one,two,three\\n\" // 0+ \"'',''\\n\"       // 1) empty encapsulators+ \"/',/'\\n\"       // 2) single encapsulators+ \"'/'','/''\\n\"   // 3) single encapsulators encapsulated via escape+ \"'''',''''\\n\"   // 4) single encapsulators encapsulated via doubling+ \"/,,/,\\n\"       // 5) separator escaped+ \"//,//\\n\"       // 6) escape escaped+ \"'//','//'\\n\"   // 7) escape escaped in encapsulation+ \"   8   ,   \\\"quoted \\\"\\\" /\\\" // string\\\"   \\n\"     // don't eat spaces+ \"9,   /\\n   \\n\"  // escaped newline+ \"\"","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":89,"lineEnd":100,"lineMapIndex":39,"methodParents":[],"nodeIndex":3},{"cfgs":[5],"code":"final String[][] res = {{\"one\", \"two\", \"three\"}, // 0{\"\", \"\"},                // 1{\"'\", \"'\"},              // 2{\"'\", \"'\"},              // 3{\"'\", \"'\"},              // 4{\",\", \",\"},              // 5{\"/\", \"/\"},              // 6{\"/\", \"/\"},              // 7{\"   8   \", \"   \\\"quoted \\\"\\\" /\\\" / string\\\"   \"},{\"9\", \"   \\n   \"},}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":101,"lineEnd":112,"lineMapIndex":40,"methodParents":[],"nodeIndex":4},{"cfgs":[],"code":"final CSVFormat format = CSVFormat.newFormat(',').withQuote('\\'').withRecordSeparator(CRLF).withEscape('/').withIgnoreEmptyLines(true)","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":115,"lineEnd":116,"lineMapIndex":41,"methodParents":[],"nodeIndex":5},{"cfgs":[7],"code":"final String code = \"\"+ \" , , \\n\"           // 1)+ \" \\t ,  , \\n\"       // 2)+ \" // , /, , /,\\n\"   // 3)+ \"\"","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":133,"lineEnd":137,"lineMapIndex":42,"methodParents":[],"nodeIndex":6},{"cfgs":[8],"code":"final String[][] res = {{\" \", \" \", \" \"},         // 1{\" \\t \", \"  \", \" \"},     // 2{\" / \", \" , \", \" ,\"},    // 3}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":138,"lineEnd":142,"lineMapIndex":43,"methodParents":[],"nodeIndex":7},{"cfgs":[],"code":"final CSVFormat format = CSVFormat.newFormat(',').withRecordSeparator(CRLF).withEscape('/').withIgnoreEmptyLines(true)","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":145,"lineEnd":146,"lineMapIndex":44,"methodParents":[],"nodeIndex":8},{"cfgs":[10],"code":"final String code =\"one,two,three\\n\"+ \"on\\\\\\\"e,two\\n\"+ \"on\\\"e,two\\n\"+ \"one,\\\"tw\\\\\\\"o\\\"\\n\"+ \"one,\\\"t\\\\,wo\\\"\\n\"+ \"one,two,\\\"th,ree\\\"\\n\"+ \"\\\"a\\\\\\\\\\\"\\n\"+ \"a\\\\,b\\n\"+ \"\\\"a\\\\\\\\,b\\\"\"","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":159,"lineEnd":168,"lineMapIndex":45,"methodParents":[],"nodeIndex":9},{"cfgs":[],"code":"final String[][] res = {{\"one\", \"two\", \"three\"},{\"on\\\\\\\"e\", \"two\"},{\"on\\\"e\", \"two\"},{\"one\", \"tw\\\"o\"},{\"one\", \"t\\\\,wo\"},  // backslash in quotes only escapes a delimiter (\",\"){\"one\", \"two\", \"th,ree\"},{\"a\\\\\\\\\"},     // backslash in quotes only escapes a delimiter (\",\"){\"a\\\\\", \"b\"},  // a backslash must be returnd{\"a\\\\\\\\,b\"}    // backslash in quotes only escapes a delimiter (\",\")}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":169,"lineEnd":179,"lineMapIndex":46,"methodParents":[],"nodeIndex":10},{"cfgs":[12],"code":"final String code = \"\"+ \"a,b#\\n\"           // 1)+ \"\\\"\\n\\\",\\\" \\\",#\\n\"   // 2)+ \"#,\\\"\\\"\\n\"         // 3)+ \"# Final comment\\n\"// 4)","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":263,"lineEnd":268,"lineMapIndex":47,"methodParents":[],"nodeIndex":11},{"cfgs":[13],"code":"final String[][] res = {{\"a\", \"b#\"},{\"\\n\", \" \", \"#\"},{\"#\", \"\"},{\"# Final comment\"}}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":269,"lineEnd":274,"lineMapIndex":48,"methodParents":[],"nodeIndex":12},{"cfgs":[],"code":"final String[][] res_comments = {{\"a\", \"b#\"},{\"\\n\", \" \", \"#\"},}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":285,"lineEnd":288,"lineMapIndex":49,"methodParents":[],"nodeIndex":13},{"cfgs":[15],"code":"final String[] codes = {\"hello,\\r\\n\\r\\n\\r\\n\",\"hello,\\n\\n\\n\",\"hello,\\\"\\\"\\r\\n\\r\\n\\r\\n\",\"hello,\\\"\\\"\\n\\n\\n\"}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":308,"lineEnd":313,"lineMapIndex":50,"methodParents":[],"nodeIndex":14},{"cfgs":[],"code":"final String[][] res = {{\"hello\", \"\"}  // CSV format ignores empty lines}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":314,"lineEnd":316,"lineMapIndex":51,"methodParents":[],"nodeIndex":15},{"cfgs":[17],"code":"final String[] codes = {\"hello,\\r\\n\\r\\n\\r\\n\",\"hello,\\n\\n\\n\",\"hello,\\\"\\\"\\r\\n\\r\\n\\r\\n\",\"hello,\\\"\\\"\\n\\n\\n\"}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":331,"lineEnd":336,"lineMapIndex":52,"methodParents":[],"nodeIndex":16},{"cfgs":[],"code":"final String[][] res = {{\"hello\", \"\"},{\"\"},  // Excel format does not ignore empty lines{\"\"}}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":337,"lineEnd":341,"lineMapIndex":53,"methodParents":[],"nodeIndex":17},{"cfgs":[19],"code":"final String[] codes = {\"hello,\\r\\n\\r\\nworld,\\r\\n\",\"hello,\\r\\n\\r\\nworld,\",\"hello,\\r\\n\\r\\nworld,\\\"\\\"\\r\\n\",\"hello,\\r\\n\\r\\nworld,\\\"\\\"\",\"hello,\\r\\n\\r\\nworld,\\n\",\"hello,\\r\\n\\r\\nworld,\",\"hello,\\r\\n\\r\\nworld,\\\"\\\"\\n\",\"hello,\\r\\n\\r\\nworld,\\\"\\\"\"}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":356,"lineEnd":365,"lineMapIndex":54,"methodParents":[],"nodeIndex":18},{"cfgs":[],"code":"final String[][] res = {{\"hello\", \"\"},  // CSV format ignores empty lines{\"world\", \"\"}}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":366,"lineEnd":369,"lineMapIndex":55,"methodParents":[],"nodeIndex":19},{"cfgs":[21],"code":"final String[] codes = {\"hello,\\r\\n\\r\\nworld,\\r\\n\",\"hello,\\r\\n\\r\\nworld,\",\"hello,\\r\\n\\r\\nworld,\\\"\\\"\\r\\n\",\"hello,\\r\\n\\r\\nworld,\\\"\\\"\",\"hello,\\r\\n\\r\\nworld,\\n\",\"hello,\\r\\n\\r\\nworld,\",\"hello,\\r\\n\\r\\nworld,\\\"\\\"\\n\",\"hello,\\r\\n\\r\\nworld,\\\"\\\"\"}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":384,"lineEnd":393,"lineMapIndex":56,"methodParents":[],"nodeIndex":20},{"cfgs":[],"code":"final String[][] res = {{\"hello\", \"\"},{\"\"},  // Excel format does not ignore empty lines{\"world\", \"\"}}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":394,"lineEnd":398,"lineMapIndex":57,"methodParents":[],"nodeIndex":21},{"cfgs":[23],"code":"final String code =\"value1,value2,value3,value4\\r\\na,b,c,d\\r\\n  x,,,\"+ \"\\r\\n\\r\\n\\\"\\\"\\\"hello\\\"\\\"\\\",\\\"  \\\"\\\"world\\\"\\\"\\\",\\\"abc\\ndef\\\",\\r\\n\"","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":414,"lineEnd":416,"lineMapIndex":58,"methodParents":[],"nodeIndex":22},{"cfgs":[],"code":"final String[][] res = {{\"value1\", \"value2\", \"value3\", \"value4\"},{\"a\", \"b\", \"c\", \"d\"},{\"  x\", \"\", \"\", \"\"},{\"\"},{\"\\\"hello\\\"\", \"  \\\"world\\\"\", \"abc\\ndef\", \"\"}}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":417,"lineEnd":423,"lineMapIndex":59,"methodParents":[],"nodeIndex":23},{"cfgs":[],"code":"final String[][] res = {{\"foo\", \"baar\"},{\"\"},{\"hello\", \"\"},{\"\"},{\"world\", \"\"}}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":437,"lineEnd":443,"lineMapIndex":60,"methodParents":[],"nodeIndex":24},{"cfgs":[26],"code":"assertArrayEquals(new String[]{\"a\", \"b\", \"c\"}, records.get(0).values())","dfgs":[26],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":465,"lineEnd":465,"lineMapIndex":71,"methodParents":[],"nodeIndex":25},{"cfgs":[27],"code":"assertArrayEquals(new String[]{\"1\", \"2\", \"3\"}, records.get(1).values())","dfgs":[27],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":466,"lineEnd":466,"lineMapIndex":72,"methodParents":[],"nodeIndex":26},{"cfgs":[],"code":"assertArrayEquals(new String[]{\"x\", \"y\", \"z\"}, records.get(2).values())","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":467,"lineEnd":467,"lineMapIndex":73,"methodParents":[],"nodeIndex":27},{"cfgs":[],"code":"CSVParser.parse(\"a,b,a\\n1,2,3\\nx,y,z\", CSVFormat.DEFAULT.withHeader(new String[]{}))","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":496,"lineEnd":496,"lineMapIndex":74,"methodParents":[],"nodeIndex":28},{"cfgs":[],"code":"final CSVParser parser = CSVParser.parse(\"\\\"a\\r\\n1\\\",\\\"a\\r\\n2\\\"\" + CRLF + \"\\\"b\\r\\n1\\\",\\\"b\\r\\n2\\\"\" + CRLF + \"\\\"c\\r\\n1\\\",\\\"c\\r\\n2\\\"\",CSVFormat.DEFAULT.withRecordSeparator(CRLF))","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":587,"lineEnd":588,"lineMapIndex":75,"methodParents":[],"nodeIndex":29},{"cfgs":[31],"code":"assertArrayEquals(new String[]{\"a\", \"b\", \"c\"}, iterator.next().values())","dfgs":[31],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":708,"lineEnd":708,"lineMapIndex":76,"methodParents":[],"nodeIndex":30},{"cfgs":[32],"code":"assertArrayEquals(new String[]{\"1\", \"2\", \"3\"}, iterator.next().values())","dfgs":[32],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":709,"lineEnd":709,"lineMapIndex":77,"methodParents":[],"nodeIndex":31},{"cfgs":[],"code":"assertArrayEquals(new String[]{\"x\", \"y\", \"z\"}, iterator.next().values())","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":713,"lineEnd":713,"lineMapIndex":78,"methodParents":[],"nodeIndex":32},{"cfgs":[],"code":"// TODO this may lead to strange behavior, throw an exception if iterator() has already been called?public void testMultipleIterators() throws Exception","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":768,"lineEnd":769,"lineMapIndex":79,"methodParents":[],"nodeIndex":33},{"cfgs":[],"code":"final CSVParser parser = CSVParser.parse(\"a\" + lineSeparator + \"b\" + lineSeparator + \"c\", CSVFormat.DEFAULT.withRecordSeparator(lineSeparator))","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":917,"lineEnd":917,"lineMapIndex":80,"methodParents":[],"nodeIndex":34},{"cfgs":[],"code":"final CSVParser parser = CSVParser.parse(\"a\" + lineSeparator + \"b\" + lineSeparator + \"c\", CSVFormat.DEFAULT.withRecordSeparator(lineSeparator))","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":true,"lineBeg":933,"lineEnd":933,"lineMapIndex":81,"methodParents":[],"nodeIndex":35},{"cfgs":[],"code":"public static final CSVFormat EXCEL = DEFAULT.withIgnoreEmptyLines(false).withAllowMissingColumnNames(true)","dfgs":[],"fName":"src_main_java_org_apache_commons_csv_CSVFormat.java","fieldParents":[],"isDel":false,"lineBeg":219,"lineEnd":219,"lineMapIndex":0,"methodParents":[],"nodeIndex":36},{"cfgs":[38],"code":"private static final String CSV_INPUT = \"a,b,c,d\\n\" + \" a , b , 1 2 \\n\" + \"\\\"foo baar\\\", b,\\n\"// + \"   \\\"foo\\n,,\\n\\\"\\\",,\\n\\\\\\\"\\\",d,e\\n\";+ \"   \\\"foo\\n,,\\n\\\"\\\",,\\n\\\"\\\"\\\",d,e\\n\"","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":63,"lineEnd":65,"lineMapIndex":1,"methodParents":[],"nodeIndex":37},{"cfgs":[],"code":"private static final String[][] RESULT = { { \"a\", \"b\", \"c\", \"d\" }, { \"a\", \"b\", \"1 2\" }, { \"foo baar\", \"b\", \"\" },{ \"foo\\n,,\\n\\\",,\\n\\\"\", \"d\", \"e\" } }","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":71,"lineEnd":72,"lineMapIndex":2,"methodParents":[],"nodeIndex":38},{"cfgs":[40],"code":"final String code = \"one,two,three\\n\" // 0+ \"'',''\\n\" // 1) empty encapsulators+ \"/',/'\\n\" // 2) single encapsulators+ \"'/'','/''\\n\" // 3) single encapsulators encapsulated via escape+ \"'''',''''\\n\" // 4) single encapsulators encapsulated via doubling+ \"/,,/,\\n\" // 5) separator escaped+ \"//,//\\n\" // 6) escape escaped+ \"'//','//'\\n\" // 7) escape escaped in encapsulation+ \"   8   ,   \\\"quoted \\\"\\\" /\\\" // string\\\"   \\n\" // don't eat spaces+ \"9,   /\\n   \\n\" // escaped newline+ \"\"","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":81,"lineEnd":91,"lineMapIndex":3,"methodParents":[],"nodeIndex":39},{"cfgs":[41],"code":"final String[][] res = { { \"one\", \"two\", \"three\" }, // 0{ \"\", \"\" }, // 1{ \"'\", \"'\" }, // 2{ \"'\", \"'\" }, // 3{ \"'\", \"'\" }, // 4{ \",\", \",\" }, // 5{ \"/\", \"/\" }, // 6{ \"/\", \"/\" }, // 7{ \"   8   \", \"   \\\"quoted \\\"\\\" /\\\" / string\\\"   \" }, { \"9\", \"   \\n   \" }, }","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":92,"lineEnd":100,"lineMapIndex":4,"methodParents":[],"nodeIndex":40},{"cfgs":[],"code":"final CSVFormat format = CSVFormat.newFormat(',').withQuote('\\'').withRecordSeparator(CRLF).withEscape('/').withIgnoreEmptyLines(true)","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":102,"lineEnd":103,"lineMapIndex":5,"methodParents":[],"nodeIndex":41},{"cfgs":[43],"code":"final String code = \"\" + \" , , \\n\" // 1)+ \" \\t ,  , \\n\" // 2)+ \" // , /, , /,\\n\" // 3)+ \"\"","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":120,"lineEnd":123,"lineMapIndex":6,"methodParents":[],"nodeIndex":42},{"cfgs":[44],"code":"final String[][] res = { { \" \", \" \", \" \" }, // 1{ \" \\t \", \"  \", \" \" }, // 2{ \" / \", \" , \", \" ,\" }, // 3}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":124,"lineEnd":127,"lineMapIndex":7,"methodParents":[],"nodeIndex":43},{"cfgs":[],"code":"final CSVFormat format = CSVFormat.newFormat(',').withRecordSeparator(CRLF).withEscape('/').withIgnoreEmptyLines(true)","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":129,"lineEnd":130,"lineMapIndex":8,"methodParents":[],"nodeIndex":44},{"cfgs":[46],"code":"final String code = \"one,two,three\\n\" + \"on\\\\\\\"e,two\\n\" + \"on\\\"e,two\\n\" + \"one,\\\"tw\\\\\\\"o\\\"\\n\"+ \"one,\\\"t\\\\,wo\\\"\\n\" + \"one,two,\\\"th,ree\\\"\\n\" + \"\\\"a\\\\\\\\\\\"\\n\" + \"a\\\\,b\\n\" + \"\\\"a\\\\\\\\,b\\\"\"","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":143,"lineEnd":144,"lineMapIndex":9,"methodParents":[],"nodeIndex":45},{"cfgs":[],"code":"final String[][] res = { { \"one\", \"two\", \"three\" }, { \"on\\\\\\\"e\", \"two\" }, { \"on\\\"e\", \"two\" },{ \"one\", \"tw\\\"o\" }, { \"one\", \"t\\\\,wo\" }, // backslash in quotes only escapes a delimiter (\",\"){ \"one\", \"two\", \"th,ree\" }, { \"a\\\\\\\\\" }, // backslash in quotes only escapes a delimiter (\",\"){ \"a\\\\\", \"b\" }, // a backslash must be returnd{ \"a\\\\\\\\,b\" } // backslash in quotes only escapes a delimiter (\",\")}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":145,"lineEnd":150,"lineMapIndex":10,"methodParents":[],"nodeIndex":46},{"cfgs":[48],"code":"final String code = \"\" + \"a,b#\\n\" // 1)+ \"\\\"\\n\\\",\\\" \\\",#\\n\" // 2)+ \"#,\\\"\\\"\\n\" // 3)+ \"# Final comment\\n\"// 4)","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":234,"lineEnd":238,"lineMapIndex":11,"methodParents":[],"nodeIndex":47},{"cfgs":[49],"code":"final String[][] res = { { \"a\", \"b#\" }, { \"\\n\", \" \", \"#\" }, { \"#\", \"\" }, { \"# Final comment\" } }","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":239,"lineEnd":239,"lineMapIndex":12,"methodParents":[],"nodeIndex":48},{"cfgs":[],"code":"final String[][] res_comments = { { \"a\", \"b#\" }, { \"\\n\", \" \", \"#\" }, }","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":250,"lineEnd":250,"lineMapIndex":13,"methodParents":[],"nodeIndex":49},{"cfgs":[51],"code":"final String[] codes = { \"hello,\\r\\n\\r\\n\\r\\n\", \"hello,\\n\\n\\n\", \"hello,\\\"\\\"\\r\\n\\r\\n\\r\\n\", \"hello,\\\"\\\"\\n\\n\\n\" }","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":270,"lineEnd":270,"lineMapIndex":14,"methodParents":[],"nodeIndex":50},{"cfgs":[],"code":"final String[][] res = { { \"hello\", \"\" } // CSV format ignores empty lines}","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":271,"lineEnd":272,"lineMapIndex":15,"methodParents":[],"nodeIndex":51},{"cfgs":[53],"code":"final String[] codes = { \"hello,\\r\\n\\r\\n\\r\\n\", \"hello,\\n\\n\\n\", \"hello,\\\"\\\"\\r\\n\\r\\n\\r\\n\", \"hello,\\\"\\\"\\n\\n\\n\" }","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":287,"lineEnd":287,"lineMapIndex":16,"methodParents":[],"nodeIndex":52},{"cfgs":[],"code":"final String[][] res = { { \"hello\", \"\" }, { \"\" }, // Excel format does not ignore empty lines{ \"\" } }","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":288,"lineEnd":289,"lineMapIndex":17,"methodParents":[],"nodeIndex":53},{"cfgs":[55],"code":"final String[] codes = { \"hello,\\r\\n\\r\\nworld,\\r\\n\", \"hello,\\r\\n\\r\\nworld,\", \"hello,\\r\\n\\r\\nworld,\\\"\\\"\\r\\n\",\"hello,\\r\\n\\r\\nworld,\\\"\\\"\", \"hello,\\r\\n\\r\\nworld,\\n\", \"hello,\\r\\n\\r\\nworld,\",\"hello,\\r\\n\\r\\nworld,\\\"\\\"\\n\", \"hello,\\r\\n\\r\\nworld,\\\"\\\"\" }","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":304,"lineEnd":306,"lineMapIndex":18,"methodParents":[],"nodeIndex":54},{"cfgs":[],"code":"final String[][] res = { { \"hello\", \"\" }, // CSV format ignores empty lines{ \"world\", \"\" } }","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":307,"lineEnd":308,"lineMapIndex":19,"methodParents":[],"nodeIndex":55},{"cfgs":[57],"code":"final String[] codes = { \"hello,\\r\\n\\r\\nworld,\\r\\n\", \"hello,\\r\\n\\r\\nworld,\", \"hello,\\r\\n\\r\\nworld,\\\"\\\"\\r\\n\",\"hello,\\r\\n\\r\\nworld,\\\"\\\"\", \"hello,\\r\\n\\r\\nworld,\\n\", \"hello,\\r\\n\\r\\nworld,\",\"hello,\\r\\n\\r\\nworld,\\\"\\\"\\n\", \"hello,\\r\\n\\r\\nworld,\\\"\\\"\" }","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":323,"lineEnd":325,"lineMapIndex":20,"methodParents":[],"nodeIndex":56},{"cfgs":[],"code":"final String[][] res = { { \"hello\", \"\" }, { \"\" }, // Excel format does not ignore empty lines{ \"world\", \"\" } }","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":326,"lineEnd":327,"lineMapIndex":21,"methodParents":[],"nodeIndex":57},{"cfgs":[59],"code":"final String code = \"value1,value2,value3,value4\\r\\na,b,c,d\\r\\n  x,,,\"+ \"\\r\\n\\r\\n\\\"\\\"\\\"hello\\\"\\\"\\\",\\\"  \\\"\\\"world\\\"\\\"\\\",\\\"abc\\ndef\\\",\\r\\n\"","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":343,"lineEnd":344,"lineMapIndex":22,"methodParents":[],"nodeIndex":58},{"cfgs":[],"code":"final String[][] res = { { \"value1\", \"value2\", \"value3\", \"value4\" }, { \"a\", \"b\", \"c\", \"d\" },{ \"  x\", \"\", \"\", \"\" }, { \"\" }, { \"\\\"hello\\\"\", \"  \\\"world\\\"\", \"abc\\ndef\", \"\" } }","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":345,"lineEnd":346,"lineMapIndex":23,"methodParents":[],"nodeIndex":59},{"cfgs":[],"code":"final String[][] res = { { \"foo\", \"baar\" }, { \"\" }, { \"hello\", \"\" }, { \"\" }, { \"world\", \"\" } }","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":360,"lineEnd":360,"lineMapIndex":24,"methodParents":[],"nodeIndex":60},{"cfgs":[],"code":"public void testExcelHeaderCountLessThanData() throws Exception ","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":375,"lineEnd":375,"lineMapIndex":-1,"methodParents":[],"nodeIndex":61},{"cfgs":[63],"code":"final String code = \"A,B,C,,\\r\\na,b,c,d,e\\r\\n\"","dfgs":[63],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":376,"lineEnd":376,"lineMapIndex":-1,"methodParents":[],"nodeIndex":62},{"cfgs":[64],"code":"final CSVParser parser = CSVParser.parse(code, CSVFormat.EXCEL.withHeader())","dfgs":[65],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":377,"lineEnd":377,"lineMapIndex":-1,"methodParents":[],"nodeIndex":63},{"cfgs":[65],"code":"try ","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":378,"lineEnd":378,"lineMapIndex":-1,"methodParents":[],"nodeIndex":64},{"cfgs":[70,66],"code":"for (CSVRecord record : parser.getRecords())","dfgs":[70,66],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":379,"lineEnd":379,"lineMapIndex":-1,"methodParents":[],"nodeIndex":65},{"cfgs":[67],"code":"Assert.assertEquals(\"a\", record.get(\"A\"))","dfgs":[67],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":380,"lineEnd":380,"lineMapIndex":-1,"methodParents":[],"nodeIndex":66},{"cfgs":[68],"code":"Assert.assertEquals(\"b\", record.get(\"B\"))","dfgs":[68],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":381,"lineEnd":381,"lineMapIndex":-1,"methodParents":[],"nodeIndex":67},{"cfgs":[],"code":"Assert.assertEquals(\"c\", record.get(\"C\"))","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":382,"lineEnd":382,"lineMapIndex":-1,"methodParents":[],"nodeIndex":68},{"cfgs":[],"code":"","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":384,"lineEnd":384,"lineMapIndex":-1,"methodParents":[],"nodeIndex":69},{"cfgs":[],"code":"parser.close()","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":385,"lineEnd":385,"lineMapIndex":-1,"methodParents":[],"nodeIndex":70},{"cfgs":[72],"code":"assertArrayEquals(new String[] { \"a\", \"b\", \"c\" }, records.get(0).values())","dfgs":[72],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":400,"lineEnd":400,"lineMapIndex":25,"methodParents":[],"nodeIndex":71},{"cfgs":[73],"code":"assertArrayEquals(new String[] { \"1\", \"2\", \"3\" }, records.get(1).values())","dfgs":[73],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":401,"lineEnd":401,"lineMapIndex":26,"methodParents":[],"nodeIndex":72},{"cfgs":[],"code":"assertArrayEquals(new String[] { \"x\", \"y\", \"z\" }, records.get(2).values())","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":402,"lineEnd":402,"lineMapIndex":27,"methodParents":[],"nodeIndex":73},{"cfgs":[],"code":"CSVParser.parse(\"a,b,a\\n1,2,3\\nx,y,z\", CSVFormat.DEFAULT.withHeader(new String[] {}))","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":431,"lineEnd":431,"lineMapIndex":28,"methodParents":[],"nodeIndex":74},{"cfgs":[],"code":"final CSVParser parser = CSVParser.parse(\"\\\"a\\r\\n1\\\",\\\"a\\r\\n2\\\"\" + CRLF + \"\\\"b\\r\\n1\\\",\\\"b\\r\\n2\\\"\" + CRLF +\"\\\"c\\r\\n1\\\",\\\"c\\r\\n2\\\"\", CSVFormat.DEFAULT.withRecordSeparator(CRLF))","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":522,"lineEnd":523,"lineMapIndex":29,"methodParents":[],"nodeIndex":75},{"cfgs":[77],"code":"assertArrayEquals(new String[] { \"a\", \"b\", \"c\" }, iterator.next().values())","dfgs":[77],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":643,"lineEnd":643,"lineMapIndex":30,"methodParents":[],"nodeIndex":76},{"cfgs":[78],"code":"assertArrayEquals(new String[] { \"1\", \"2\", \"3\" }, iterator.next().values())","dfgs":[78],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":644,"lineEnd":644,"lineMapIndex":31,"methodParents":[],"nodeIndex":77},{"cfgs":[],"code":"assertArrayEquals(new String[] { \"x\", \"y\", \"z\" }, iterator.next().values())","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":648,"lineEnd":648,"lineMapIndex":32,"methodParents":[],"nodeIndex":78},{"cfgs":[],"code":"// TODO this may lead to strange behavior, throw an exception if iterator() has already been called?public void testMultipleIterators() throws Exception","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":704,"lineEnd":705,"lineMapIndex":33,"methodParents":[],"nodeIndex":79},{"cfgs":[],"code":"final CSVParser parser = CSVParser.parse(\"a\" + lineSeparator + \"b\" + lineSeparator + \"c\",CSVFormat.DEFAULT.withRecordSeparator(lineSeparator))","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":853,"lineEnd":854,"lineMapIndex":34,"methodParents":[],"nodeIndex":80},{"cfgs":[],"code":"final CSVParser parser = CSVParser.parse(\"a\" + lineSeparator + \"b\" + lineSeparator + \"c\",CSVFormat.DEFAULT.withRecordSeparator(lineSeparator))","dfgs":[],"fName":"src_test_java_org_apache_commons_csv_CSVParserTest.java","fieldParents":[],"isDel":false,"lineBeg":870,"lineEnd":871,"lineMapIndex":35,"methodParents":[],"nodeIndex":81}]