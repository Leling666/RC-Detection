[{"cfgs":[1],"code":"minpackTest(new FreudensteinRothFunction(new double[] { 5.0, -20.0 },12432.833948863, 6.9988751744895,new double[] {11.4130046614746,-0.896796038685958}), false)","dfgs":[1],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":true,"lineBeg":152,"lineEnd":157,"lineMapIndex":15,"methodParents":[3],"nodeIndex":0},{"cfgs":[],"code":"minpackTest(new FreudensteinRothFunction(new double[] { 50.0, -200.0 },11426454.595762, 6.99887517242903,new double[] {11.4127817857886,-0.89680510749204}), false)","dfgs":[],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":true,"lineBeg":158,"lineEnd":163,"lineMapIndex":16,"methodParents":[3],"nodeIndex":1},{"cfgs":[],"code":"minpackTest(new JennrichSampsonFunction(10, new double[] { 0.3, 0.4 },64.5856498144943, 11.1517793413499,new double[] {0.257819926636811, 0.257829976764542}), false)","dfgs":[],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":true,"lineBeg":325,"lineEnd":329,"lineMapIndex":-1,"methodParents":[3],"nodeIndex":2},{"cfgs":[4],"code":"assertTrue(function.checkTheoreticalMinCost(optimizer.getRMS()))","dfgs":[4],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":true,"lineBeg":502,"lineEnd":502,"lineMapIndex":18,"methodParents":[5],"nodeIndex":3},{"cfgs":[],"code":"assertTrue(function.checkTheoreticalMinParams(optimum))","dfgs":[],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":true,"lineBeg":503,"lineEnd":503,"lineMapIndex":19,"methodParents":[7],"nodeIndex":4},{"cfgs":[6],"code":"public boolean checkTheoreticalMinCost(double rms) ","dfgs":[6],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":true,"lineBeg":564,"lineEnd":564,"lineMapIndex":20,"methodParents":[],"nodeIndex":5},{"cfgs":[],"code":"return Math.abs(Math.sqrt(m) * rms - theoreticalMinCost) <= threshold","dfgs":[],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":true,"lineBeg":566,"lineEnd":566,"lineMapIndex":-1,"methodParents":[],"nodeIndex":6},{"cfgs":[8,10],"code":"public boolean checkTheoreticalMinParams(VectorialPointValuePair optimum) ","dfgs":[10,8,9],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":true,"lineBeg":569,"lineEnd":569,"lineMapIndex":22,"methodParents":[],"nodeIndex":7},{"cfgs":[9,10],"code":"if (Math.abs(mi - vi) > (paramsAccuracy * (1.0 + Math.abs(mi))))","dfgs":[],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":true,"lineBeg":575,"lineEnd":575,"lineMapIndex":-1,"methodParents":[],"nodeIndex":8},{"cfgs":[],"code":"return false","dfgs":[],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":true,"lineBeg":576,"lineEnd":576,"lineMapIndex":-1,"methodParents":[],"nodeIndex":9},{"cfgs":[],"code":"return true","dfgs":[],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":true,"lineBeg":580,"lineEnd":580,"lineMapIndex":-1,"methodParents":[],"nodeIndex":10},{"cfgs":[],"code":"return new VectorialPointValuePair(point, objective)","dfgs":[],"fName":"src_main_java_org_apache_commons_math_optimization_general_LevenbergMarquardtOptimizer.java","fieldParents":[],"isDel":true,"lineBeg":294,"lineEnd":294,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[13],"code":"if (((Math.abs(actRed) <= costRelativeTolerance) &&(preRed <= costRelativeTolerance) &&(ratio <= 2.0)) ||(delta <= parRelativeTolerance * xNorm))","dfgs":[13],"fName":"src_main_java_org_apache_commons_math_optimization_general_LevenbergMarquardtOptimizer.java","fieldParents":[],"isDel":true,"lineBeg":404,"lineEnd":407,"lineMapIndex":33,"methodParents":[],"nodeIndex":12},{"cfgs":[],"code":"return new VectorialPointValuePair(point, objective)","dfgs":[],"fName":"src_main_java_org_apache_commons_math_optimization_general_LevenbergMarquardtOptimizer.java","fieldParents":[],"isDel":true,"lineBeg":408,"lineEnd":408,"lineMapIndex":34,"methodParents":[],"nodeIndex":13},{"cfgs":[],"code":"optimizer.setConvergenceChecker(new SimpleVectorialValueChecker(1.0e-10, 1.0e-10))","dfgs":[],"fName":"src_test_java_org_apache_commons_math_optimization_general_LevenbergMarquardtOptimizerTest.java","fieldParents":[],"isDel":true,"lineBeg":488,"lineEnd":488,"lineMapIndex":35,"methodParents":[],"nodeIndex":14},{"cfgs":[16],"code":"minpackTest(new FreudensteinRothFunction(new double[] { 5.0, -20.0 },12432.833948863, 6.9988751744895,new double[] {11.4121122022341,-0.8968550851268697}), false)","dfgs":[16],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":false,"lineBeg":152,"lineEnd":157,"lineMapIndex":0,"methodParents":[18],"nodeIndex":15},{"cfgs":[],"code":"minpackTest(new FreudensteinRothFunction(new double[] { 50.0, -200.0 },11426454.595762, 6.99887517242903,new double[] {11.412069435091231,-0.8968582807605691}), false)","dfgs":[],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":false,"lineBeg":158,"lineEnd":163,"lineMapIndex":1,"methodParents":[18],"nodeIndex":16},{"cfgs":[],"code":"minpackTest(new JennrichSampsonFunction(10, new double[] { 0.3, 0.4 },64.5856498144943, 11.1517793413499,new double[] {0.2578330049, 0.257829976764542}), false)","dfgs":[],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":false,"lineBeg":325,"lineEnd":329,"lineMapIndex":-1,"methodParents":[18],"nodeIndex":17},{"cfgs":[19],"code":"function.checkTheoreticalMinCost(optimizer.getRMS())","dfgs":[19],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":false,"lineBeg":502,"lineEnd":502,"lineMapIndex":3,"methodParents":[20],"nodeIndex":18},{"cfgs":[],"code":"function.checkTheoreticalMinParams(optimum)","dfgs":[],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":false,"lineBeg":503,"lineEnd":503,"lineMapIndex":4,"methodParents":[22],"nodeIndex":19},{"cfgs":[21],"code":"public void checkTheoreticalMinCost(double rms) ","dfgs":[21],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":false,"lineBeg":564,"lineEnd":564,"lineMapIndex":5,"methodParents":[],"nodeIndex":20},{"cfgs":[],"code":"assertEquals(theoreticalMinCost, Math.sqrt(m) * rms, threshold)","dfgs":[],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":false,"lineBeg":566,"lineEnd":566,"lineMapIndex":-1,"methodParents":[],"nodeIndex":21},{"cfgs":[23],"code":"public void checkTheoreticalMinParams(VectorialPointValuePair optimum) ","dfgs":[23],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":false,"lineBeg":569,"lineEnd":569,"lineMapIndex":7,"methodParents":[],"nodeIndex":22},{"cfgs":[],"code":"assertEquals(mi, vi, paramsAccuracy * (1.0 + Math.abs(mi)))","dfgs":[],"fName":"src_test_java_org_apache_commons_math_optimization_general_MinpackTest.java","fieldParents":[],"isDel":false,"lineBeg":575,"lineEnd":575,"lineMapIndex":-1,"methodParents":[],"nodeIndex":23},{"cfgs":[],"code":"setConvergenceChecker(null)","dfgs":[],"fName":"src_main_java_org_apache_commons_math_optimization_general_LevenbergMarquardtOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":166,"lineEnd":166,"lineMapIndex":-1,"methodParents":[],"nodeIndex":24},{"cfgs":[26],"code":"VectorialPointValuePair current = new VectorialPointValuePair(point, objective)","dfgs":[26,27,28,33,30],"fName":"src_main_java_org_apache_commons_math_optimization_general_LevenbergMarquardtOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":248,"lineEnd":248,"lineMapIndex":-1,"methodParents":[],"nodeIndex":25},{"cfgs":[27,28],"code":"VectorialPointValuePair previous = current","dfgs":[30],"fName":"src_main_java_org_apache_commons_math_optimization_general_LevenbergMarquardtOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":254,"lineEnd":254,"lineMapIndex":-1,"methodParents":[],"nodeIndex":26},{"cfgs":[],"code":"return current","dfgs":[],"fName":"src_main_java_org_apache_commons_math_optimization_general_LevenbergMarquardtOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":306,"lineEnd":306,"lineMapIndex":-1,"methodParents":[],"nodeIndex":27},{"cfgs":[29],"code":"current = new VectorialPointValuePair(point, objective)","dfgs":[33,30,34],"fName":"src_main_java_org_apache_commons_math_optimization_general_LevenbergMarquardtOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":348,"lineEnd":348,"lineMapIndex":-1,"methodParents":[],"nodeIndex":28},{"cfgs":[30,32],"code":"if (checker != null)","dfgs":[30],"fName":"src_main_java_org_apache_commons_math_optimization_general_LevenbergMarquardtOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":417,"lineEnd":417,"lineMapIndex":-1,"methodParents":[],"nodeIndex":29},{"cfgs":[31],"code":"if (checker.converged(getIterations(), previous, current))","dfgs":[33,31],"fName":"src_main_java_org_apache_commons_math_optimization_general_LevenbergMarquardtOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":419,"lineEnd":419,"lineMapIndex":-1,"methodParents":[],"nodeIndex":30},{"cfgs":[],"code":"return current","dfgs":[],"fName":"src_main_java_org_apache_commons_math_optimization_general_LevenbergMarquardtOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":420,"lineEnd":420,"lineMapIndex":-1,"methodParents":[],"nodeIndex":31},{"cfgs":[33],"code":"else","dfgs":[],"fName":"src_main_java_org_apache_commons_math_optimization_general_LevenbergMarquardtOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":422,"lineEnd":422,"lineMapIndex":-1,"methodParents":[],"nodeIndex":32},{"cfgs":[34],"code":"if (((Math.abs(actRed) <= costRelativeTolerance) &&(preRed <= costRelativeTolerance) &&(ratio <= 2.0)) ||(delta <= parRelativeTolerance * xNorm))","dfgs":[],"fName":"src_main_java_org_apache_commons_math_optimization_general_LevenbergMarquardtOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":424,"lineEnd":427,"lineMapIndex":12,"methodParents":[],"nodeIndex":33},{"cfgs":[],"code":"return current","dfgs":[],"fName":"src_main_java_org_apache_commons_math_optimization_general_LevenbergMarquardtOptimizer.java","fieldParents":[],"isDel":false,"lineBeg":428,"lineEnd":428,"lineMapIndex":13,"methodParents":[],"nodeIndex":34},{"cfgs":[],"code":"optimizer.setConvergenceChecker(new SimpleVectorialValueChecker(1.0e-8, 1.0e-8))","dfgs":[],"fName":"src_test_java_org_apache_commons_math_optimization_general_LevenbergMarquardtOptimizerTest.java","fieldParents":[],"isDel":false,"lineBeg":488,"lineEnd":488,"lineMapIndex":14,"methodParents":[],"nodeIndex":35}]