[{"cfgs":[],"code":"throw new SQLTransientConnectionException(poolName + \" - Connection is not available, request timed out after \" + clockSource.elapsedMillis(startTime) + \"ms.\", sqlState, originalException)","dfgs":[],"fName":"src_main_java_com_zaxxer_hikari_pool_HikariPool.java","fieldParents":[],"isDel":true,"lineBeg":215,"lineEnd":215,"lineMapIndex":-1,"methodParents":[],"nodeIndex":0},{"cfgs":[],"code":"import java.sql.Statement","dfgs":[],"fName":"src_test_java_com_zaxxer_hikari_TestConnections.java","fieldParents":[],"isDel":false,"lineBeg":23,"lineEnd":23,"lineMapIndex":-1,"methodParents":[],"nodeIndex":1},{"cfgs":[],"code":"public void testInvalidConnectionTestQuery()","dfgs":[],"fName":"src_test_java_com_zaxxer_hikari_TestConnections.java","fieldParents":[],"isDel":false,"lineBeg":464,"lineEnd":465,"lineMapIndex":-1,"methodParents":[],"nodeIndex":2},{"cfgs":[],"code":"class BadConnection extends StubConnection ","dfgs":[],"fName":"src_test_java_com_zaxxer_hikari_TestConnections.java","fieldParents":[],"isDel":false,"lineBeg":466,"lineEnd":466,"lineMapIndex":-1,"methodParents":[],"nodeIndex":3},{"cfgs":[6],"code":"class BadConnection extends StubConnection {/** {@inheritDoc} */@Overridepublic Statement createStatement() throws SQLException{throw new SQLException(\"Bad query or something.\")","dfgs":[],"fName":"src_test_java_com_zaxxer_hikari_TestConnections.java","fieldParents":[],"isDel":false,"lineBeg":466,"lineEnd":471,"lineMapIndex":-1,"methodParents":[],"nodeIndex":4},{"cfgs":[],"code":"throw new SQLException(\"Bad query or something.\")","dfgs":[],"fName":"src_test_java_com_zaxxer_hikari_TestConnections.java","fieldParents":[],"isDel":false,"lineBeg":471,"lineEnd":471,"lineMapIndex":-1,"methodParents":[],"nodeIndex":5},{"cfgs":[7],"code":"StubDataSource stubDataSource = new StubDataSource() {/** {@inheritDoc} */@Overridepublic Connection getConnection() throws SQLException{return new BadConnection();}}","dfgs":[13],"fName":"src_test_java_com_zaxxer_hikari_TestConnections.java","fieldParents":[],"isDel":false,"lineBeg":475,"lineEnd":482,"lineMapIndex":-1,"methodParents":[],"nodeIndex":6},{"cfgs":[8],"code":"HikariConfig config = new HikariConfig()","dfgs":[8],"fName":"src_test_java_com_zaxxer_hikari_TestConnections.java","fieldParents":[],"isDel":false,"lineBeg":484,"lineEnd":484,"lineMapIndex":-1,"methodParents":[],"nodeIndex":7},{"cfgs":[9],"code":"config.setMinimumIdle(1)","dfgs":[9],"fName":"src_test_java_com_zaxxer_hikari_TestConnections.java","fieldParents":[],"isDel":false,"lineBeg":485,"lineEnd":485,"lineMapIndex":-1,"methodParents":[],"nodeIndex":8},{"cfgs":[10],"code":"config.setMaximumPoolSize(2)","dfgs":[10],"fName":"src_test_java_com_zaxxer_hikari_TestConnections.java","fieldParents":[],"isDel":false,"lineBeg":486,"lineEnd":486,"lineMapIndex":-1,"methodParents":[],"nodeIndex":9},{"cfgs":[11],"code":"config.setConnectionTimeout(TimeUnit.SECONDS.toMillis(3))","dfgs":[11],"fName":"src_test_java_com_zaxxer_hikari_TestConnections.java","fieldParents":[],"isDel":false,"lineBeg":487,"lineEnd":487,"lineMapIndex":-1,"methodParents":[],"nodeIndex":10},{"cfgs":[12],"code":"config.setConnectionTestQuery(\"VALUES 1\")","dfgs":[12],"fName":"src_test_java_com_zaxxer_hikari_TestConnections.java","fieldParents":[],"isDel":false,"lineBeg":488,"lineEnd":488,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[13],"code":"config.setInitializationFailFast(false)","dfgs":[13],"fName":"src_test_java_com_zaxxer_hikari_TestConnections.java","fieldParents":[],"isDel":false,"lineBeg":489,"lineEnd":489,"lineMapIndex":-1,"methodParents":[],"nodeIndex":12},{"cfgs":[14],"code":"config.setDataSource(stubDataSource)","dfgs":[14],"fName":"src_test_java_com_zaxxer_hikari_TestConnections.java","fieldParents":[],"isDel":false,"lineBeg":490,"lineEnd":490,"lineMapIndex":-1,"methodParents":[],"nodeIndex":13},{"cfgs":[15],"code":"try (HikariDataSource ds = new HikariDataSource(config); Connection c = ds.getConnection()) ","dfgs":[],"fName":"src_test_java_com_zaxxer_hikari_TestConnections.java","fieldParents":[],"isDel":false,"lineBeg":492,"lineEnd":492,"lineMapIndex":-1,"methodParents":[],"nodeIndex":14},{"cfgs":[16],"code":"Assert.fail(\"getConnection() should have failed\")","dfgs":[17],"fName":"src_test_java_com_zaxxer_hikari_TestConnections.java","fieldParents":[],"isDel":false,"lineBeg":493,"lineEnd":493,"lineMapIndex":-1,"methodParents":[],"nodeIndex":15},{"cfgs":[17],"code":"catch (SQLException e)","dfgs":[],"fName":"src_test_java_com_zaxxer_hikari_TestConnections.java","fieldParents":[],"isDel":false,"lineBeg":495,"lineEnd":495,"lineMapIndex":-1,"methodParents":[],"nodeIndex":16},{"cfgs":[],"code":"Assert.assertSame(\"Bad query or something.\", e.getNextException().getMessage())","dfgs":[],"fName":"src_test_java_com_zaxxer_hikari_TestConnections.java","fieldParents":[],"isDel":false,"lineBeg":496,"lineEnd":496,"lineMapIndex":-1,"methodParents":[],"nodeIndex":17},{"cfgs":[19],"code":"final SQLException connectionException = new SQLTransientConnectionException(poolName + \" - Connection is not available, request timed out after \" + clockSource.elapsedMillis(startTime) + \"ms.\", sqlState, originalException)","dfgs":[21,19,20],"fName":"src_main_java_com_zaxxer_hikari_pool_HikariPool.java","fieldParents":[],"isDel":false,"lineBeg":216,"lineEnd":216,"lineMapIndex":-1,"methodParents":[],"nodeIndex":18},{"cfgs":[20,21],"code":"if (originalException instanceof SQLException)","dfgs":[20],"fName":"src_main_java_com_zaxxer_hikari_pool_HikariPool.java","fieldParents":[],"isDel":false,"lineBeg":217,"lineEnd":217,"lineMapIndex":-1,"methodParents":[],"nodeIndex":19},{"cfgs":[21],"code":"connectionException.setNextException((SQLException) originalException)","dfgs":[21],"fName":"src_main_java_com_zaxxer_hikari_pool_HikariPool.java","fieldParents":[],"isDel":false,"lineBeg":218,"lineEnd":218,"lineMapIndex":-1,"methodParents":[],"nodeIndex":20},{"cfgs":[],"code":"throw connectionException","dfgs":[],"fName":"src_main_java_com_zaxxer_hikari_pool_HikariPool.java","fieldParents":[],"isDel":false,"lineBeg":220,"lineEnd":220,"lineMapIndex":-1,"methodParents":[],"nodeIndex":21},{"cfgs":[],"code":"private volatile boolean isValidationQueryValid","dfgs":[],"fName":"src_main_java_com_zaxxer_hikari_pool_Mediator.java","fieldParents":[],"isDel":false,"lineBeg":59,"lineEnd":59,"lineMapIndex":-1,"methodParents":[],"nodeIndex":22},{"cfgs":[],"code":"lastConnectionFailure.set(e)","dfgs":[],"fName":"src_main_java_com_zaxxer_hikari_pool_Mediator.java","fieldParents":[],"isDel":false,"lineBeg":391,"lineEnd":391,"lineMapIndex":-1,"methodParents":[],"nodeIndex":23},{"cfgs":[25],"code":"if (!isUseJdbc4Validation && !isValidationQueryValid)","dfgs":[25],"fName":"src_main_java_com_zaxxer_hikari_pool_Mediator.java","fieldParents":[22],"isDel":false,"lineBeg":429,"lineEnd":429,"lineMapIndex":-1,"methodParents":[],"nodeIndex":24},{"cfgs":[26],"code":"executeSql(connection, config.getConnectionTestQuery(), isAutoCommit)","dfgs":[],"fName":"src_main_java_com_zaxxer_hikari_pool_Mediator.java","fieldParents":[],"isDel":false,"lineBeg":430,"lineEnd":430,"lineMapIndex":-1,"methodParents":[],"nodeIndex":25},{"cfgs":[],"code":"isValidationQueryValid = true","dfgs":[],"fName":"src_main_java_com_zaxxer_hikari_pool_Mediator.java","fieldParents":[22],"isDel":false,"lineBeg":431,"lineEnd":431,"lineMapIndex":-1,"methodParents":[],"nodeIndex":26}]