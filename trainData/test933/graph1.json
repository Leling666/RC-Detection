[{"cfgs": [], "code": "private static final String REGEX = \"^(\" + JdkRegEx.TIMESTAMP + \": )?\" + JdkRegEx.TIMESTAMP+ \": \\\\[GC concurrent-(((root-region-scan|mark|cleanup)-(start|end|abort))\"+ \"|string-deduplication)(\\\\])?(,)?( \" + JdkRegEx.DURATION + \")?(\\\\])?( \" + JdkRegEx.SIZE_G1 + \"->\"+ JdkRegEx.SIZE_G1 + \"\\\\(\" + JdkRegEx.SIZE_G1 + \"\\\\))?(, avg \" + JdkRegEx.PERCENT + \", \" + JdkRegEx.DURATION+ \"\\\\])?\" + JdkRegEx.TIMES_BLOCK + \"?[ ]*$\"", "dfgs": [], "fName": "src_main_java_org_eclipselabs_garbagecat_domain_jdk_G1ConcurrentEvent.java", "fieldParents": [], "isDel": true, "lineBeg": 112, "lineEnd": 116, "lineMapIndex": 6, "methodParents": [], "nodeIndex": 0, "rootcause": false, "commits": ["9e9b4acf366cdd5fe151b5a29936513b07d6f6a6", "2b5d0ec18751e828d6a71fde45ac31862a7401c4", "e909eb589ba2266edbc29093c0f5a152765abb76"]}, {"cfgs": [2], "code": "public void testLogLineConcurrentMarkResetForOverflow() ", "dfgs": [2, 4, 3, 5], "fName": "src_test_java_org_eclipselabs_garbagecat_domain_jdk_TestG1ConcurrentEvent.java", "fieldParents": [], "isDel": false, "lineBeg": 143, "lineEnd": 143, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 1, "rootcause": false, "commits": []}, {"cfgs": [3], "code": "String logLine = \"1048.227: [GC concurrent-mark-reset-for-overflow]\"", "dfgs": [3], "fName": "src_test_java_org_eclipselabs_garbagecat_domain_jdk_TestG1ConcurrentEvent.java", "fieldParents": [], "isDel": false, "lineBeg": 144, "lineEnd": 144, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 2, "rootcause": false, "commits": []}, {"cfgs": [4], "code": "Assert.assertTrue(\"Log line not recognized as \" + JdkUtil.LogEventType.G1_CONCURRENT.toString() + \".\",G1ConcurrentEvent.match(logLine))", "dfgs": [4, 5], "fName": "src_test_java_org_eclipselabs_garbagecat_domain_jdk_TestG1ConcurrentEvent.java", "fieldParents": [], "isDel": false, "lineBeg": 145, "lineEnd": 146, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 3, "rootcause": false, "commits": []}, {"cfgs": [5], "code": "G1ConcurrentEvent event = new G1ConcurrentEvent(logLine)", "dfgs": [5], "fName": "src_test_java_org_eclipselabs_garbagecat_domain_jdk_TestG1ConcurrentEvent.java", "fieldParents": [], "isDel": false, "lineBeg": 147, "lineEnd": 147, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 4, "rootcause": false, "commits": []}, {"cfgs": [], "code": "Assert.assertEquals(\"Time stamp not parsed correctly.\", 1048227, event.getTimestamp())", "dfgs": [], "fName": "src_test_java_org_eclipselabs_garbagecat_domain_jdk_TestG1ConcurrentEvent.java", "fieldParents": [], "isDel": false, "lineBeg": 148, "lineEnd": 148, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 5, "rootcause": false, "commits": []}, {"cfgs": [], "code": "private static final String REGEX = \"^(\" + JdkRegEx.TIMESTAMP + \": )?\" + JdkRegEx.TIMESTAMP+ \": \\\\[GC concurrent-(((root-region-scan|mark|cleanup)-(start|end|abort|reset-for-overflow))\"+ \"|string-deduplication)(\\\\])?(,)?( \" + JdkRegEx.DURATION + \")?(\\\\])?( \" + JdkRegEx.SIZE_G1 + \"->\"+ JdkRegEx.SIZE_G1 + \"\\\\(\" + JdkRegEx.SIZE_G1 + \"\\\\))?(, avg \" + JdkRegEx.PERCENT + \", \" + JdkRegEx.DURATION+ \"\\\\])?\" + JdkRegEx.TIMES_BLOCK + \"?[ ]*$\"", "dfgs": [], "fName": "src_main_java_org_eclipselabs_garbagecat_domain_jdk_G1ConcurrentEvent.java", "fieldParents": [], "isDel": false, "lineBeg": 112, "lineEnd": 116, "lineMapIndex": 0, "methodParents": [], "nodeIndex": 6, "rootcause": false, "commits": []}]