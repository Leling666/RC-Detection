[{"cfgs":[],"code":"return decimalBetween(min,max).setScale(0, BigDecimal.ROUND_HALF_DOWN).intValue()","dfgs":[],"fName":"src_main_java_com_github_javafaker_Number.java","fieldParents":[],"isDel":true,"lineBeg":30,"lineEnd":30,"lineMapIndex":-1,"methodParents":[],"nodeIndex":0},{"cfgs":[],"code":"return decimalBetween(min,max).setScale(0, BigDecimal.ROUND_HALF_DOWN).longValue()","dfgs":[],"fName":"src_main_java_com_github_javafaker_Number.java","fieldParents":[],"isDel":true,"lineBeg":42,"lineEnd":42,"lineMapIndex":-1,"methodParents":[],"nodeIndex":1},{"cfgs":[],"code":"import com.github.javafaker.repeating.Repeat","dfgs":[],"fName":"src_test_java_com_github_javafaker_NumberTest.java","fieldParents":[],"isDel":false,"lineBeg":3,"lineEnd":3,"lineMapIndex":-1,"methodParents":[],"nodeIndex":2},{"cfgs":[],"code":"public void testLongNumberBetweenRepeated() ","dfgs":[],"fName":"src_test_java_com_github_javafaker_NumberTest.java","fieldParents":[],"isDel":false,"lineBeg":126,"lineEnd":126,"lineMapIndex":-1,"methodParents":[],"nodeIndex":3},{"cfgs":[5],"code":"long low = 1","dfgs":[6],"fName":"src_test_java_com_github_javafaker_NumberTest.java","fieldParents":[],"isDel":false,"lineBeg":127,"lineEnd":127,"lineMapIndex":-1,"methodParents":[],"nodeIndex":4},{"cfgs":[6],"code":"long high = 10","dfgs":[6],"fName":"src_test_java_com_github_javafaker_NumberTest.java","fieldParents":[],"isDel":false,"lineBeg":128,"lineEnd":128,"lineMapIndex":-1,"methodParents":[],"nodeIndex":5},{"cfgs":[7],"code":"long v = faker.number().numberBetween(low, high)","dfgs":[7,8],"fName":"src_test_java_com_github_javafaker_NumberTest.java","fieldParents":[],"isDel":false,"lineBeg":129,"lineEnd":129,"lineMapIndex":-1,"methodParents":[18],"nodeIndex":6},{"cfgs":[8],"code":"assertThat(v, is(lessThan(high)))","dfgs":[8],"fName":"src_test_java_com_github_javafaker_NumberTest.java","fieldParents":[],"isDel":false,"lineBeg":130,"lineEnd":130,"lineMapIndex":-1,"methodParents":[],"nodeIndex":7},{"cfgs":[],"code":"assertThat(v, is(greaterThanOrEqualTo(low)))","dfgs":[],"fName":"src_test_java_com_github_javafaker_NumberTest.java","fieldParents":[],"isDel":false,"lineBeg":131,"lineEnd":131,"lineMapIndex":-1,"methodParents":[],"nodeIndex":8},{"cfgs":[],"code":"public void testIntNumberBetweenRepeated() ","dfgs":[],"fName":"src_test_java_com_github_javafaker_NumberTest.java","fieldParents":[],"isDel":false,"lineBeg":136,"lineEnd":136,"lineMapIndex":-1,"methodParents":[],"nodeIndex":9},{"cfgs":[11],"code":"int low = 1","dfgs":[12],"fName":"src_test_java_com_github_javafaker_NumberTest.java","fieldParents":[],"isDel":false,"lineBeg":137,"lineEnd":137,"lineMapIndex":-1,"methodParents":[],"nodeIndex":10},{"cfgs":[12],"code":"int high = 10","dfgs":[12],"fName":"src_test_java_com_github_javafaker_NumberTest.java","fieldParents":[],"isDel":false,"lineBeg":138,"lineEnd":138,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[13],"code":"int v = faker.number().numberBetween(low, high)","dfgs":[13,14],"fName":"src_test_java_com_github_javafaker_NumberTest.java","fieldParents":[],"isDel":false,"lineBeg":139,"lineEnd":139,"lineMapIndex":-1,"methodParents":[18],"nodeIndex":12},{"cfgs":[14],"code":"assertThat(v, is(lessThan(high)))","dfgs":[14],"fName":"src_test_java_com_github_javafaker_NumberTest.java","fieldParents":[],"isDel":false,"lineBeg":140,"lineEnd":140,"lineMapIndex":-1,"methodParents":[],"nodeIndex":13},{"cfgs":[],"code":"assertThat(v, is(greaterThanOrEqualTo(low)))","dfgs":[],"fName":"src_test_java_com_github_javafaker_NumberTest.java","fieldParents":[],"isDel":false,"lineBeg":141,"lineEnd":141,"lineMapIndex":-1,"methodParents":[],"nodeIndex":14},{"cfgs":[],"code":"import com.github.javafaker.repeating.Repeat","dfgs":[],"fName":"src_test_java_com_github_javafaker_FakerTest.java","fieldParents":[],"isDel":false,"lineBeg":3,"lineEnd":3,"lineMapIndex":-1,"methodParents":[],"nodeIndex":15},{"cfgs":[],"code":"public void numberBetweenRepeated() ","dfgs":[],"fName":"src_test_java_com_github_javafaker_FakerTest.java","fieldParents":[],"isDel":false,"lineBeg":139,"lineEnd":139,"lineMapIndex":-1,"methodParents":[],"nodeIndex":16},{"cfgs":[],"code":"assertThat(faker.expression(\"#{number.number_between '1','10'}\"), matchesRegularExpression(\"[1-9]\"))","dfgs":[],"fName":"src_test_java_com_github_javafaker_FakerTest.java","fieldParents":[],"isDel":false,"lineBeg":140,"lineEnd":140,"lineMapIndex":-1,"methodParents":[],"nodeIndex":17},{"cfgs":[19],"code":"if (min == max)","dfgs":[],"fName":"src_main_java_com_github_javafaker_Number.java","fieldParents":[],"isDel":false,"lineBeg":30,"lineEnd":30,"lineMapIndex":-1,"methodParents":[],"nodeIndex":18},{"cfgs":[20],"code":"int value = decimalBetween(min,max).setScale(0, BigDecimal.ROUND_HALF_DOWN).intValue()","dfgs":[20],"fName":"src_main_java_com_github_javafaker_Number.java","fieldParents":[],"isDel":false,"lineBeg":32,"lineEnd":32,"lineMapIndex":-1,"methodParents":[],"nodeIndex":19},{"cfgs":[],"code":"return value == max ? value - 1 : value","dfgs":[],"fName":"src_main_java_com_github_javafaker_Number.java","fieldParents":[],"isDel":false,"lineBeg":33,"lineEnd":33,"lineMapIndex":-1,"methodParents":[],"nodeIndex":20},{"cfgs":[22],"code":"if (min == max)","dfgs":[],"fName":"src_main_java_com_github_javafaker_Number.java","fieldParents":[],"isDel":false,"lineBeg":45,"lineEnd":45,"lineMapIndex":-1,"methodParents":[],"nodeIndex":21},{"cfgs":[23],"code":"long value = decimalBetween(min, max).setScale(0, BigDecimal.ROUND_HALF_DOWN).longValue()","dfgs":[23],"fName":"src_main_java_com_github_javafaker_Number.java","fieldParents":[],"isDel":false,"lineBeg":47,"lineEnd":47,"lineMapIndex":-1,"methodParents":[],"nodeIndex":22},{"cfgs":[],"code":"return value == max ? value - 1 : value","dfgs":[],"fName":"src_main_java_com_github_javafaker_Number.java","fieldParents":[],"isDel":false,"lineBeg":48,"lineEnd":48,"lineMapIndex":-1,"methodParents":[],"nodeIndex":23}]