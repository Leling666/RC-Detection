[
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"SELECT *\\n\" +\r\"FROM (\\n\" +\"\\tWITH\\n\" +\"\\t\\tvw_kreis_statics_t\\n\" +\"\\t\\tAS\\n\" +\"\\t\\t(\\n\" +\"\\t\\t\\tSELECT substr(xzqh, 1, 6) AS xzqh, swrslx, SUM(swrs_count) AS acd_totle\\n\" +\"\\t\\t\\tFROM (\\n\" +\"\\t\\t\\t\\tSELECT xzqh, sglx, CASE WHEN swrs7 < 3 THEN '1' WHEN swrs7 < 5 THEN '2' WHEN swrs7 <= 9 THEN '3' ELSE '4' END AS swrslx, 1 AS swrs_count\\n\" +\"\\t\\t\\t\\tFROM acduser.vw_acd_info\\n\" +\"\\t\\t\\t\\tWHERE sglx = '1'\\n\" +\"\\t\\t\\t\\t\\tAND sgfssj >= ?\\n\" +\"\\t\\t\\t)\\n\" +\"\\t\\t\\tGROUP BY substr(xzqh, 1, 6), swrslx\\n\" +\"\\t\\t)\\n\" +\"\\tSELECT e.\\\"XZQH\\\", e.\\\"LESS3\\\", e.\\\"F3TO5\\\", e.\\\"F5TO9\\\", e.\\\"MORE9\\\"\\n\" +\"\\t\\t, kreis_code, kreis_name, px1, py1, px2\\n\" +\"\\t\\t, py2\\n\" +\"\\tFROM (\\n\" +\"\\t\\tSELECT xzqh, nvl(MAX(decode(swrslx, '1', acd_totle)), 0) AS less3, nvl(MAX(decode(swrslx, '2', acd_totle)), 0) AS f3to5, nvl(MAX(decode(swrslx, '3', acd_totle)), 0) AS f5to9, nvl(MAX(decode(swrslx, '4', acd_totle)), 0) AS more9\\n\" +\"\\t\\tFROM (\\n\" +\"\\t\\t\\tSELECT *\\n\" +\"\\t\\t\\tFROM acduser.vw_kreis_statics_t\\n\" +\"\\t\\t)\\n\" +\"\\t\\tGROUP BY xzqh\\n\" +\"\\t) e\\n\" +\"\\t\\tLEFT JOIN acduser.vw_sc_kreis_code_lv2 f ON e.xzqh = f.short_kreis_code \\n\" +\")\\n\" +\"WHERE kreis_code IN (\\n\" +\"\\tSELECT *\\n\" +\"\\tFROM (\\n\" +\"\\t\\tSELECT tbek_code\\n\" +\"\\t\\tFROM acduser.vw_kreis_code\\n\" +\"\\t\\tSTART WITH tbek_code = ?\\n\" +\"\\t\\tCONNECT BY PRIOR tbek_pk = tbek_parent\\n\" +\"\\t)\\n\" +\"\\tWHERE tbek_code != ?\\n\" +\")\", result)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_select_OracleSelectTest38.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 57,
        "lineEnd": 94,
        "lineMapIndex": 118,
        "methodParents": [],
        "nodeIndex": 0,
        "rootcause": false,
        "commits": [
            "21ae9b572243c93f85cc13736b7e395c80a98be6"
        ]
    },
    {
        "cfgs": [],
        "code": "assertEquals(\"select *\\n\" +\r\"from (\\n\" +\"\\twith\\n\" +\"\\t\\tvw_kreis_statics_t\\n\" +\"\\t\\tas\\n\" +\"\\t\\t(\\n\" +\"\\t\\t\\tselect substr(xzqh, 1, 6) as xzqh, swrslx, sum(swrs_count) as acd_totle\\n\" +\"\\t\\t\\tfrom (\\n\" +\"\\t\\t\\t\\tselect xzqh, sglx, case when swrs7 < 3 then '1' when swrs7 < 5 then '2' when swrs7 <= 9 then '3' else '4' end as swrslx, 1 as swrs_count\\n\" +\"\\t\\t\\t\\tfrom acduser.vw_acd_info\\n\" +\"\\t\\t\\t\\twhere sglx = '1'\\n\" +\"\\t\\t\\t\\t\\tand sgfssj >= ?\\n\" +\"\\t\\t\\t)\\n\" +\"\\t\\t\\tgroup by substr(xzqh, 1, 6), swrslx\\n\" +\"\\t\\t)\\n\" +\"\\tselect e.\\\"XZQH\\\", e.\\\"LESS3\\\", e.\\\"F3TO5\\\", e.\\\"F5TO9\\\", e.\\\"MORE9\\\"\\n\" +\"\\t\\t, kreis_code, kreis_name, px1, py1, px2\\n\" +\"\\t\\t, py2\\n\" +\"\\tfrom (\\n\" +\"\\t\\tselect xzqh, nvl(max(decode(swrslx, '1', acd_totle)), 0) as less3, nvl(max(decode(swrslx, '2', acd_totle)), 0) as f3to5, nvl(max(decode(swrslx, '3', acd_totle)), 0) as f5to9, nvl(max(decode(swrslx, '4', acd_totle)), 0) as more9\\n\" +\"\\t\\tfrom (\\n\" +\"\\t\\t\\tselect *\\n\" +\"\\t\\t\\tfrom acduser.vw_kreis_statics_t\\n\" +\"\\t\\t)\\n\" +\"\\t\\tgroup by xzqh\\n\" +\"\\t) e\\n\" +\"\\t\\tleft join acduser.vw_sc_kreis_code_lv2 f on e.xzqh = f.short_kreis_code \\n\" +\")\\n\" +\"where kreis_code in (\\n\" +\"\\tselect *\\n\" +\"\\tfrom (\\n\" +\"\\t\\tselect tbek_code\\n\" +\"\\t\\tfrom acduser.vw_kreis_code\\n\" +\"\\t\\tstart with tbek_code = ?\\n\" +\"\\t\\tconnect by prior tbek_pk = tbek_parent\\n\" +\"\\t)\\n\" +\"\\twhere tbek_code != ?\\n\" +\")\", result)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_select_OracleSelectTest38.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 98,
        "lineEnd": 135,
        "lineMapIndex": 119,
        "methodParents": [],
        "nodeIndex": 1,
        "rootcause": false,
        "commits": [
            "21ae9b572243c93f85cc13736b7e395c80a98be6"
        ]
    },
    {
        "cfgs": [],
        "code": "String expected = \"SELECT channel_desc, calendar_month_desc, co.country_id, \" //\r+ \"TO_CHAR(SUM(amount_sold), '9,999,999,999') AS SALES$\\n\" //+ \"FROM sales, customers, times, channels, countries co\\n\" //+ \"WHERE sales.time_id = times.time_id\" //+ \"\\n\\tAND sales.cust_id = customers.cust_id\" //+ \"\\n\\tAND sales.channel_id = channels.channel_id\" //+ \"\\n\\tAND customers.country_id = co.country_id\" //+ \"\\n\\tAND channels.channel_desc IN ('Direct Sales', 'Internet')\" //+ \"\\n\\tAND times.calendar_month_desc IN ('2000-09', '2000-10')\"+ \"\\n\\tAND co.country_id IN ('UK', 'US')\\n\"+ \"GROUP BY GROUPING SETS ((channel_desc, calendar_month_desc, co.country_id), (channel_desc, co.country_id), \"+ \"(calendar_month_desc, co.country_id));\"",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_OracleGroupingSetTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 38,
        "lineEnd": 49,
        "lineMapIndex": 120,
        "methodParents": [],
        "nodeIndex": 2,
        "rootcause": false,
        "commits": [
            "f0eba13df8159ef20ee5daf5962cd16281d029d8",
            "bd004dc78a5a9e2bb6249efeeca1645ac1debe2f",
            "78488b0b1ab0fb312cd0c0ec4c591ed68362f91d"
        ]
    },
    {
        "cfgs": [],
        "code": "assertEquals(\"WITH\\n\" +\"\\tmenu_view\\n\" +\"\\tAS\\n\" +\"\\t(\\n\" +\"\\t\\tSELECT t.*, 1 AS level\\n\" +\"\\t\\tFROM sec_portal_menu t\\n\" +\"\\t\\tWHERE t.parent_id = ?\\n\" +\"\\t\\tUNION ALL\\n\" +\"\\t\\tSELECT t.*, level + 1\\n\" +\"\\t\\tFROM sec_portal_menu t, menu_view x\\n\" +\"\\t\\tWHERE t.parent_id = x.menu_id\\n\" +\"\\t)\\n\" +\"SELECT t.menu_id AS \\\"id\\\", t.menu_name AS \\\"name\\\", t.parent_id AS \\\"pId\\\", CASE t.level WHEN 1 THEN 'true' ELSE 'false' END AS \\\"open\\\", t.link_type AS \\\"linkType\\\"\\n\" +\"FROM menu_view t\\n\" +\"WHERE 1 = 1\\n\" +\"\\tAND t.deleted = 0\\n\" +\"\\tAND t.link_type IN ('simple', 'link')\\n\" +\"\\tAND (EXISTS (\\n\" +\"\\t\\t\\tSELECT p.entity_code\\n\" +\"\\t\\t\\tFROM sec_role_auth p\\n\" +\"\\t\\t\\tWHERE p.entity_code = t.menu_id\\n\" +\"\\t\\t\\t\\tAND p.entity_type = 'menu'\\n\" +\"\\t\\t\\t\\tAND p.role_id IN (\\n\" +\"\\t\\t\\t\\t\\tSELECT r.role_code\\n\" +\"\\t\\t\\t\\t\\tFROM sec_role_member rm, sec_role r\\n\" +\"\\t\\t\\t\\t\\tWHERE rm.entity_type = 'user'\\n\" +\"\\t\\t\\t\\t\\t\\tAND entity_code = ?\\n\" +\"\\t\\t\\t\\t\\t\\tAND r.role_id = rm.role_id\\n\" +\"\\t\\t\\t\\t\\t\\tAND r.enabled = 1\\n\" +\"\\t\\t\\t\\t\\t\\tAND r.deleted = 0\\n\" +\"\\t\\t\\t\\t)\\n\" +\"\\t\\t)\\n\" +\"\\t\\tOR '1' = ?\\n\" +\"\\t\\tOR t.need_control = 0)\\n\" +\"\\tAND (t.enabled = 1\\n\" +\"\\t\\tOR '1' = ?\\n\" +\"\\t\\tOR t.need_control = 0)\\n\" +\"ORDER BY t.sort_order\", text)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_sqlserver_SQLServerSelectTest7.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 71,
        "lineEnd": 108,
        "lineMapIndex": 121,
        "methodParents": [],
        "nodeIndex": 3,
        "rootcause": false,
        "commits": [
            "21ae9b572243c93f85cc13736b7e395c80a98be6"
        ]
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"SELECT b + 0, BIN(b + 0), OCT(b + 0), HEX(b + 0)\\nFROM t;\", text)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_mysql_BitFunctionsTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 137,
        "lineEnd": 137,
        "lineMapIndex": 127,
        "methodParents": [],
        "nodeIndex": 4,
        "rootcause": false,
        "commits": [
            "f0eba13df8159ef20ee5daf5962cd16281d029d8"
        ]
    },
    {
        "cfgs": [],
        "code": "if (lineItemCount == selectListNumberOfLine|| selectItemExpr instanceof SQLQueryExpr)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 259,
        "lineEnd": 260,
        "lineMapIndex": 135,
        "methodParents": [],
        "nodeIndex": 5,
        "rootcause": false,
        "commits": [
            "21ae9b572243c93f85cc13736b7e395c80a98be6"
        ]
    },
    {
        "cfgs": [
            7
        ],
        "code": "print0(\" \")",
        "dfgs": [
            7
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 504,
        "lineEnd": 504,
        "lineMapIndex": 138,
        "methodParents": [],
        "nodeIndex": 6,
        "rootcause": false,
        "commits": [
            "a84c53d4fb30e772551178339d76ca3165b23541"
        ]
    },
    {
        "cfgs": [
            8
        ],
        "code": "printAndAccept(x.getItems(), \" \")",
        "dfgs": [
            11,
            8,
            9
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 507,
        "lineEnd": 507,
        "lineMapIndex": 139,
        "methodParents": [],
        "nodeIndex": 7,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            9,
            11
        ],
        "code": "if (x.getElseExpr() != null)",
        "dfgs": [
            10
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 509,
        "lineEnd": 509,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 8,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            10
        ],
        "code": "print0(ucase ? \" ELSE \" : \" else \")",
        "dfgs": [
            10
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 510,
        "lineEnd": 510,
        "lineMapIndex": 143,
        "methodParents": [],
        "nodeIndex": 9,
        "rootcause": false,
        "commits": [
            "a84c53d4fb30e772551178339d76ca3165b23541"
        ]
    },
    {
        "cfgs": [
            11
        ],
        "code": "x.getElseExpr().accept(this)",
        "dfgs": [
            11
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 511,
        "lineEnd": 511,
        "lineMapIndex": 140,
        "methodParents": [],
        "nodeIndex": 10,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [],
        "code": "print0(ucase ? \" END\" : \" end\")",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 514,
        "lineEnd": 514,
        "lineMapIndex": 153,
        "methodParents": [],
        "nodeIndex": 11,
        "rootcause": false,
        "commits": [
            "a84c53d4fb30e772551178339d76ca3165b23541"
        ]
    },
    {
        "cfgs": [
            13
        ],
        "code": "x.getConditionExpr().accept(this)",
        "dfgs": [
            13
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 520,
        "lineEnd": 520,
        "lineMapIndex": 154,
        "methodParents": [],
        "nodeIndex": 12,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [],
        "code": "x.getValueExpr().accept(this)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 522,
        "lineEnd": 522,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 13,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            15,
            17
        ],
        "code": "if (x.getOwner() != null)",
        "dfgs": [
            17,
            15
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 864,
        "lineEnd": 864,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 14,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            16
        ],
        "code": "x.getOwner().accept(this)",
        "dfgs": [
            17,
            16
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 865,
        "lineEnd": 865,
        "lineMapIndex": 164,
        "methodParents": [],
        "nodeIndex": 15,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            17
        ],
        "code": "print('.')",
        "dfgs": [
            17
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 866,
        "lineEnd": 866,
        "lineMapIndex": 175,
        "methodParents": [],
        "nodeIndex": 16,
        "rootcause": false,
        "commits": [
            "a84c53d4fb30e772551178339d76ca3165b23541"
        ]
    },
    {
        "cfgs": [],
        "code": "printAndAccept(x.getParameters(), \", \")",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 870,
        "lineEnd": 870,
        "lineMapIndex": 171,
        "methodParents": [],
        "nodeIndex": 17,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            22,
            20,
            19
        ],
        "code": "boolean mysqlUnion = (JdbcConstants.MYSQL.equals(dbType) //&& (operator == SQLUnionOperator.UNION || operator == SQLUnionOperator.UNION_ALL))",
        "dfgs": [
            23,
            24,
            21,
            22
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 1862,
        "lineEnd": 1863,
        "lineMapIndex": 176,
        "methodParents": [],
        "nodeIndex": 18,
        "rootcause": true,
        "commits": [
            "6fe79f5ec17840c4fee380d8807a7853c448f6eb"
        ]
    },
    {
        "cfgs": [
            22,
            20
        ],
        "code": "if (mysqlUnion)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 1865,
        "lineEnd": 1865,
        "lineMapIndex": 177,
        "methodParents": [],
        "nodeIndex": 19,
        "rootcause": true,
        "commits": [
            "6fe79f5ec17840c4fee380d8807a7853c448f6eb"
        ]
    },
    {
        "cfgs": [
            21
        ],
        "code": "if (mysqlUnion)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 1869,
        "lineEnd": 1869,
        "lineMapIndex": 182,
        "methodParents": [],
        "nodeIndex": 20,
        "rootcause": true,
        "commits": [
            "6fe79f5ec17840c4fee380d8807a7853c448f6eb"
        ]
    },
    {
        "cfgs": [
            22
        ],
        "code": "print(')')",
        "dfgs": [
            23,
            24
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 1870,
        "lineEnd": 1870,
        "lineMapIndex": 183,
        "methodParents": [],
        "nodeIndex": 21,
        "rootcause": true,
        "commits": [
            "6fe79f5ec17840c4fee380d8807a7853c448f6eb"
        ]
    },
    {
        "cfgs": [
            23,
            24
        ],
        "code": "boolean needParen = x.getOrderBy() != null || mysqlUnion",
        "dfgs": [
            23,
            24
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 1876,
        "lineEnd": 1876,
        "lineMapIndex": 179,
        "methodParents": [],
        "nodeIndex": 22,
        "rootcause": true,
        "commits": [
            "6fe79f5ec17840c4fee380d8807a7853c448f6eb"
        ]
    },
    {
        "cfgs": [],
        "code": "x.getRight().accept(this)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 1880,
        "lineEnd": 1880,
        "lineMapIndex": 180,
        "methodParents": [],
        "nodeIndex": 23,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [],
        "code": "x.getRight().accept(this)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 1883,
        "lineEnd": 1883,
        "lineMapIndex": 178,
        "methodParents": [],
        "nodeIndex": 24,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"SELECT CASE 1 WHEN 1 THEN 'one' WHEN 2 THEN 'two' ELSE 'more' END;\", text)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_mysql_ControlFlowFunctionsTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 38,
        "lineEnd": 38,
        "lineMapIndex": 184,
        "methodParents": [],
        "nodeIndex": 25,
        "rootcause": false,
        "commits": [
            "f0eba13df8159ef20ee5daf5962cd16281d029d8"
        ]
    },
    {
        "cfgs": [
            27
        ],
        "code": "if (x.getOwner() != null)",
        "dfgs": [
            27
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 720,
        "lineEnd": 720,
        "lineMapIndex": 191,
        "methodParents": [],
        "nodeIndex": 26,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            28
        ],
        "code": "x.getOwner().accept(this)",
        "dfgs": [
            28
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 721,
        "lineEnd": 721,
        "lineMapIndex": 192,
        "methodParents": [],
        "nodeIndex": 27,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [],
        "code": "print('.')",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 722,
        "lineEnd": 722,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 28,
        "rootcause": false,
        "commits": [
            "de0715bd9c698b418455b52d689eb728da7eb743"
        ]
    },
    {
        "cfgs": [
            30
        ],
        "code": "if (x.getOwner() != null)",
        "dfgs": [
            30
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 744,
        "lineEnd": 744,
        "lineMapIndex": 193,
        "methodParents": [],
        "nodeIndex": 29,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            31
        ],
        "code": "x.getOwner().accept(this)",
        "dfgs": [
            31
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 745,
        "lineEnd": 745,
        "lineMapIndex": 194,
        "methodParents": [],
        "nodeIndex": 30,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [],
        "code": "print('.')",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 746,
        "lineEnd": 746,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 31,
        "rootcause": false,
        "commits": [
            "de0715bd9c698b418455b52d689eb728da7eb743"
        ]
    },
    {
        "cfgs": [
            33
        ],
        "code": "if (x.getOwner() != null)",
        "dfgs": [
            33
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 771,
        "lineEnd": 771,
        "lineMapIndex": 195,
        "methodParents": [],
        "nodeIndex": 32,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            34
        ],
        "code": "x.getOwner().accept(this)",
        "dfgs": [
            34
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 772,
        "lineEnd": 772,
        "lineMapIndex": 190,
        "methodParents": [],
        "nodeIndex": 33,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [],
        "code": "print('.')",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 773,
        "lineEnd": 773,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 34,
        "rootcause": false,
        "commits": [
            "de0715bd9c698b418455b52d689eb728da7eb743"
        ]
    },
    {
        "cfgs": [
            36
        ],
        "code": "public boolean visit(SQLUnionQuery x) ",
        "dfgs": [
            56,
            36,
            37,
            38,
            39,
            40,
            41,
            44,
            42,
            50,
            53,
            43,
            45,
            46,
            47,
            51,
            52,
            54,
            55,
            49
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2572,
        "lineEnd": 2572,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 35,
        "rootcause": false,
        "commits": [
            "ad452e507d0aa02a3f685edba182ecaf02e3a0b5"
        ]
    },
    {
        "cfgs": [
            37
        ],
        "code": "print('(')",
        "dfgs": [
            37
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2573,
        "lineEnd": 2573,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 36,
        "rootcause": true,
        "commits": [
            "6fe79f5ec17840c4fee380d8807a7853c448f6eb"
        ]
    },
    {
        "cfgs": [
            38
        ],
        "code": "x.getLeft().accept(this)",
        "dfgs": [
            38,
            40
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2574,
        "lineEnd": 2574,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 37,
        "rootcause": true,
        "commits": [
            "6fe79f5ec17840c4fee380d8807a7853c448f6eb"
        ]
    },
    {
        "cfgs": [
            39
        ],
        "code": "print(')')",
        "dfgs": [
            39
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2575,
        "lineEnd": 2575,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 38,
        "rootcause": true,
        "commits": [
            "6fe79f5ec17840c4fee380d8807a7853c448f6eb"
        ]
    },
    {
        "cfgs": [
            40
        ],
        "code": "println()",
        "dfgs": [
            40
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2576,
        "lineEnd": 2576,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 39,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            41
        ],
        "code": "print0(ucase ? x.getOperator().name : x.getOperator().name_lcase)",
        "dfgs": [
            41,
            42
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2577,
        "lineEnd": 2577,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 40,
        "rootcause": false,
        "commits": [
            "de0715bd9c698b418455b52d689eb728da7eb743"
        ]
    },
    {
        "cfgs": [
            42
        ],
        "code": "println()",
        "dfgs": [
            45,
            49
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2578,
        "lineEnd": 2578,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 41,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            43
        ],
        "code": "SQLSelectQuery right = x.getRight()",
        "dfgs": [
            43,
            50
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2580,
        "lineEnd": 2580,
        "lineMapIndex": 185,
        "methodParents": [],
        "nodeIndex": 42,
        "rootcause": true,
        "commits": [
            "6fe79f5ec17840c4fee380d8807a7853c448f6eb"
        ]
    },
    {
        "cfgs": [
            44,
            48
        ],
        "code": "boolean needParen = ! (right instanceof SQLUnionQuery)",
        "dfgs": [
            46,
            49
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2581,
        "lineEnd": 2581,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 43,
        "rootcause": true,
        "commits": [
            "6fe79f5ec17840c4fee380d8807a7853c448f6eb"
        ]
    },
    {
        "cfgs": [
            45
        ],
        "code": "if (needParen)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2583,
        "lineEnd": 2583,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 44,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            46
        ],
        "code": "print('(')",
        "dfgs": [
            46
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2584,
        "lineEnd": 2584,
        "lineMapIndex": 187,
        "methodParents": [],
        "nodeIndex": 45,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            47
        ],
        "code": "right.accept(this)",
        "dfgs": [
            47
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2585,
        "lineEnd": 2585,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 46,
        "rootcause": true,
        "commits": [
            "6fe79f5ec17840c4fee380d8807a7853c448f6eb"
        ]
    },
    {
        "cfgs": [
            50
        ],
        "code": "print(')')",
        "dfgs": [
            51,
            54
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2586,
        "lineEnd": 2586,
        "lineMapIndex": 189,
        "methodParents": [],
        "nodeIndex": 47,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            49
        ],
        "code": "else",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2587,
        "lineEnd": 2587,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 48,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            50
        ],
        "code": "right.accept(this)",
        "dfgs": [
            51,
            54
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2588,
        "lineEnd": 2588,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 49,
        "rootcause": true,
        "commits": [
            "6fe79f5ec17840c4fee380d8807a7853c448f6eb"
        ]
    },
    {
        "cfgs": [
            51,
            53
        ],
        "code": "if (x.getOrderBy() != null)",
        "dfgs": [
            53,
            52
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2591,
        "lineEnd": 2591,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 50,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            52
        ],
        "code": "println()",
        "dfgs": [
            52
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2592,
        "lineEnd": 2592,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 51,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            53
        ],
        "code": "x.getOrderBy().accept(this)",
        "dfgs": [
            53,
            54
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2593,
        "lineEnd": 2593,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 52,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            54,
            56
        ],
        "code": "if (x.getLimit() != null)",
        "dfgs": [
            55
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2596,
        "lineEnd": 2596,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 53,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            55
        ],
        "code": "println()",
        "dfgs": [
            55
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2597,
        "lineEnd": 2597,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 54,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [
            56
        ],
        "code": "x.getLimit().accept(this)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2598,
        "lineEnd": 2598,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 55,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [],
        "code": "return false",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 2601,
        "lineEnd": 2601,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 56,
        "rootcause": false,
        "commits": [
            "0609ce5d26f2b6d341aa6f226bab9ae47160ce94"
        ]
    },
    {
        "cfgs": [],
        "code": "assertEquals(\"SELECT channel_desc, calendar_month_desc, co.country_id, TO_CHAR(SUM(amount_sold), '9,999,999,999') AS SALES$\\n\" +\"FROM sales, customers, times, channels, countries co\\n\" +\"WHERE sales.time_id = times.time_id\\n\" +\"\\tAND sales.cust_id = customers.cust_id\\n\" +\"\\tAND sales.channel_id = channels.channel_id\\n\" +\"\\tAND customers.country_id = co.country_id\\n\" +\"\\tAND channels.channel_desc IN ('Direct Sales', 'Internet')\\n\" +\"\\tAND times.calendar_month_desc IN ('2000-09', '2000-10')\\n\" +\"\\tAND co.country_iso_code IN ('UK', 'US')\\n\" +\"GROUP BY GROUPING SETS ((channel_desc, calendar_month_desc, co.country_id), (channel_desc, co.country_id), (calendar_month_desc, co.country_id));\", text)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_select_OracleSelectTest62.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 69,
        "lineEnd": 78,
        "lineMapIndex": 197,
        "methodParents": [],
        "nodeIndex": 57,
        "rootcause": false,
        "commits": [
            "969e878ca9b41de28c1eb75b7117e78a8a715d45"
        ]
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"select channel_desc, calendar_month_desc, co.country_id, TO_CHAR(sum(amount_sold), '9,999,999,999') as SALES$\\n\" +\"from sales, customers, times, channels, countries co\\n\" +\"where sales.time_id = times.time_id\\n\" +\"\\tand sales.cust_id = customers.cust_id\\n\" +\"\\tand sales.channel_id = channels.channel_id\\n\" +\"\\tand customers.country_id = co.country_id\\n\" +\"\\tand channels.channel_desc in ('Direct Sales', 'Internet')\\n\" +\"\\tand times.calendar_month_desc in ('2000-09', '2000-10')\\n\" +\"\\tand co.country_iso_code in ('UK', 'US')\\n\" +\"group by grouping sets ((channel_desc, calendar_month_desc, co.country_id), (channel_desc, co.country_id), (calendar_month_desc, co.country_id));\", text)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_select_OracleSelectTest62.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 84,
        "lineEnd": 93,
        "lineMapIndex": 198,
        "methodParents": [],
        "nodeIndex": 58,
        "rootcause": false,
        "commits": [
            "969e878ca9b41de28c1eb75b7117e78a8a715d45"
        ]
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"DELETE FROM t1\\n\" +\"WHERE s11 > ANY (\\n\" +\"\\t\\tSELECT COUNT(*)\\n\" +\"\\t\\tFROM t2\\n\" +\"\\t\\tWHERE NOT EXISTS (\\n\" +\"\\t\\t\\tSELECT *\\n\" +\"\\t\\t\\tFROM t3\\n\" +\"\\t\\t\\tWHERE ROW(5 * t2.s1, 77) = (\\n\" +\"\\t\\t\\t\\t(SELECT 50, 11 * s1\\n\" +\"\\t\\t\\t\\tFROM t4)\\n\" +\"\\t\\t\\t\\tUNION\\n\" +\"\\t\\t\\t\\t(SELECT 50, 77\\n\" +\"\\t\\t\\t\\tFROM (\\n\" +\"\\t\\t\\t\\t\\tSELECT *\\n\" +\"\\t\\t\\t\\t\\tFROM t5\\n\" +\"\\t\\t\\t\\t) t5)\\n\" +\"\\t\\t\\t)\\n\" +\"\\t\\t)\\n\" +\"\\t)\", SQLUtils.toMySqlString(stmt))",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_mysql_MySqlDeleteTest_3.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 45,
        "lineEnd": 63,
        "lineMapIndex": 199,
        "methodParents": [],
        "nodeIndex": 59,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "assertEquals(\"delete from t1\\n\" +\"where s11 > any (\\n\" +\"\\t\\tselect count(*)\\n\" +\"\\t\\tfrom t2\\n\" +\"\\t\\twhere not exists (\\n\" +\"\\t\\t\\tselect *\\n\" +\"\\t\\t\\tfrom t3\\n\" +\"\\t\\t\\twhere ROW(5 * t2.s1, 77) = (\\n\" +\"\\t\\t\\t\\t(select 50, 11 * s1\\n\" +\"\\t\\t\\t\\tfrom t4)\\n\" +\"\\t\\t\\t\\tunion\\n\" +\"\\t\\t\\t\\t(select 50, 77\\n\" +\"\\t\\t\\t\\tfrom (\\n\" +\"\\t\\t\\t\\t\\tselect *\\n\" +\"\\t\\t\\t\\t\\tfrom t5\\n\" +\"\\t\\t\\t\\t) t5)\\n\" +\"\\t\\t\\t)\\n\" +\"\\t\\t)\\n\" +\"\\t)\", SQLUtils.toMySqlString(stmt, SQLUtils.DEFAULT_LCASE_FORMAT_OPTION))",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_mysql_MySqlDeleteTest_3.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 64,
        "lineEnd": 82,
        "lineMapIndex": 200,
        "methodParents": [],
        "nodeIndex": 60,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"(SELECT id\\n\" + //\r\"FROM t1)\\n\" + //\"UNION ALL\\n\" + //\"(SELECT id\\n\" + //\"FROM t2)\\n\" + //\"UNION ALL\\n\" + //\"(SELECT id\\n\" + //\"FROM t3)\\n\" + //\"ORDER BY d DESC\\n\" + //\"LIMIT ?, 1\", output)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_cobar_DMLSelectParserTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 34,
        "lineEnd": 43,
        "lineMapIndex": 203,
        "methodParents": [],
        "nodeIndex": 61,
        "rootcause": false,
        "commits": [
            "6fe79f5ec17840c4fee380d8807a7853c448f6eb",
            "be46a48eb36139be567158d5d84b4bd6dd4185b4"
        ]
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"(SELECT id\\n\" + //\r\"FROM t1)\\n\" + //\"UNION\\n\" + //\"(SELECT id\\n\" + //\"FROM t2\\n\" + //\"ORDER BY id)\\n\" + //\"UNION ALL\\n\" + //\"(SELECT id\\n\" + //\"FROM t3)\\n\" + //\"ORDER BY d ASC\", output)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_cobar_DMLSelectParserTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 52,
        "lineEnd": 61,
        "lineMapIndex": 204,
        "methodParents": [],
        "nodeIndex": 62,
        "rootcause": false,
        "commits": [
            "6fe79f5ec17840c4fee380d8807a7853c448f6eb",
            "be46a48eb36139be567158d5d84b4bd6dd4185b4"
        ]
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"(SELECT id\\nFROM t1)\\nUNION DISTINCT\\n(SELECT id\\nFROM t2)\\nUNION\\n(SELECT id\\nFROM t3)\", output)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_cobar_DMLSelectParserTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 70,
        "lineEnd": 70,
        "lineMapIndex": 205,
        "methodParents": [],
        "nodeIndex": 63,
        "rootcause": false,
        "commits": [
            "6fe79f5ec17840c4fee380d8807a7853c448f6eb"
        ]
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"CREATE OR REPLACE VIEW \\\"SC_001\\\".\\\"TB_001\\\"\\n\" +\"(\\n\" +\"\\t\\\"OBJECT_NAME\\\", \\n\" +\"\\t\\\"SESSION_ID\\\", \\n\" +\"\\t\\\"ORACLE_USERNAME\\\", \\n\" +\"\\t\\\"OS_USER_NAME\\\", \\n\" +\"\\t\\\"SQL_ACTIONS\\\", \\n\" +\"\\t\\\"LOCK_MODE\\\"\\n\" +\")\\n\" +\"AS\\n\" +\"SELECT /*+ no_merge(lo) */ DO.object_name, lo.SESSION_ID, lo.oracle_username, lo.OS_USER_NAME, DECODE(locked_mode, 1, 'SELECT', 2, 'SELECT FOR UPDATE / LOCK ROW SHARE', 3, 'INSERT/UPDATE/DELETE/LOCK ROW EXCLUSIVE', 4, 'CREATE INDEX/LOCK SHARE', 5, 'LOCK SHARE ROW EXCLUSIVE', 6, 'ALTER TABLE/DROP TABLE/DROP INDEX/TRUNCATE TABLE/LOCK EXCLUSIVE') AS sql_actions\\n\" +\"\\t, DECODE(locked_mode, 1, 'NULL', 2, 'SS - SUB SHARE', 3, 'SX - SUB EXCLUSIVE', 4, 'S - SHARE', 5, 'SSX - SHARE/SUB EXCLUSIVE', 6, 'X - EXCLUSIVE') AS Lock_mode\\n\" +\"FROM sys.V_$LOCKED_OBJECT lo, TB_002 DO\\n\" +\"WHERE DO.object_id = lo.object_id\",//SQLUtils.toSQLString(stmt, JdbcConstants.ORACLE))",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_create_OracleCreateViewTest5.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 55,
        "lineEnd": 69,
        "lineMapIndex": 208,
        "methodParents": [],
        "nodeIndex": 64,
        "rootcause": false,
        "commits": [
            "c3f84859da102ac51e8c02f76a2dc69548089faa"
        ]
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"SELECT COUNT(*)\\n\" +\"FROM (\\n\" +\"\\t(SELECT id, name\\n\" +\"\\tFROM t1)\\n\" +\"\\tUNION\\n\" +\"\\t(SELECT id, name\\n\" +\"\\tFROM t2)\\n\" +\") ALIAS_COUNT\", result)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_PagerUtilsTest_Count_MySql_0.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 61,
        "lineEnd": 68,
        "lineMapIndex": 209,
        "methodParents": [],
        "nodeIndex": 65,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "import com.alibaba.druid.sql.ast.SQLDataType",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 22,
        "lineEnd": 22,
        "lineMapIndex": 242,
        "methodParents": [],
        "nodeIndex": 66,
        "rootcause": false,
        "commits": [
            "3de275fa8cc6781196b91f07bf83a201a0dd7433"
        ]
    },
    {
        "cfgs": [],
        "code": "import com.alibaba.druid.sql.ast.SQLHint",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 23,
        "lineEnd": 23,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 67,
        "rootcause": false,
        "commits": [
            "d5a198a39f7c60851b6980bdf5658d0a56a03626"
        ]
    },
    {
        "cfgs": [],
        "code": "import com.alibaba.druid.sql.ast.SQLOrderBy",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 24,
        "lineEnd": 24,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 68,
        "rootcause": false,
        "commits": [
            "0583a060cda6517bc9ff9f9025e4e4840a9a141a"
        ]
    },
    {
        "cfgs": [],
        "code": "import com.alibaba.druid.sql.ast.SQLSetQuantifier",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 25,
        "lineEnd": 25,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 69,
        "rootcause": false,
        "commits": [
            "0583a060cda6517bc9ff9f9025e4e4840a9a141a"
        ]
    },
    {
        "cfgs": [],
        "code": "import com.alibaba.druid.sql.ast.SQLStatement",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 26,
        "lineEnd": 26,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 70,
        "rootcause": false,
        "commits": [
            "6f5bb55384c157615b81afb369d023475e530845"
        ]
    },
    {
        "cfgs": [
            72
        ],
        "code": "public boolean visit(SQLCaseExpr x) ",
        "dfgs": [
            87,
            72,
            73,
            77,
            84,
            85,
            86,
            74,
            80,
            75,
            76,
            81,
            82,
            83
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 245,
        "lineEnd": 245,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 71,
        "rootcause": false,
        "commits": [
            "6f5bb55384c157615b81afb369d023475e530845"
        ]
    },
    {
        "cfgs": [
            73
        ],
        "code": "incrementIndent()",
        "dfgs": [
            73
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 246,
        "lineEnd": 246,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 72,
        "rootcause": false,
        "commits": [
            "6f5bb55384c157615b81afb369d023475e530845"
        ]
    },
    {
        "cfgs": [
            74
        ],
        "code": "print0(ucase ? \"CASE \" : \"case \")",
        "dfgs": [
            84,
            75,
            81
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 247,
        "lineEnd": 247,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 73,
        "rootcause": false,
        "commits": [
            "a84c53d4fb30e772551178339d76ca3165b23541"
        ]
    },
    {
        "cfgs": [
            75,
            77
        ],
        "code": "if (x.getValueExpr() != null)",
        "dfgs": [
            75,
            77
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 248,
        "lineEnd": 248,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 74,
        "rootcause": false,
        "commits": [
            "6f5bb55384c157615b81afb369d023475e530845"
        ]
    },
    {
        "cfgs": [
            76
        ],
        "code": "x.getValueExpr().accept(this)",
        "dfgs": [
            76,
            77
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 249,
        "lineEnd": 249,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 75,
        "rootcause": false,
        "commits": [
            "6f5bb55384c157615b81afb369d023475e530845"
        ]
    },
    {
        "cfgs": [
            77
        ],
        "code": "println()",
        "dfgs": [
            84,
            81
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 250,
        "lineEnd": 250,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 76,
        "rootcause": false,
        "commits": [
            "6f5bb55384c157615b81afb369d023475e530845"
        ]
    },
    {
        "cfgs": [
            80
        ],
        "code": "for (int i = 0, size = x.getItems().size(); i < size; ++i)",
        "dfgs": [
            80
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 253,
        "lineEnd": 253,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 77,
        "rootcause": false,
        "commits": [
            "8f5136824570558f32915b4afbac9d264a835619"
        ]
    },
    {
        "cfgs": [],
        "code": "println()",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 254,
        "lineEnd": 254,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 78,
        "rootcause": false,
        "commits": [
            "8f5136824570558f32915b4afbac9d264a835619"
        ]
    },
    {
        "cfgs": [],
        "code": "x.getItems().get(i).accept(this)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 255,
        "lineEnd": 255,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 79,
        "rootcause": false,
        "commits": [
            "8f5136824570558f32915b4afbac9d264a835619"
        ]
    },
    {
        "cfgs": [
            81,
            84
        ],
        "code": "if (x.getElseExpr() != null)",
        "dfgs": [
            83
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 258,
        "lineEnd": 258,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 80,
        "rootcause": false,
        "commits": [
            "6f5bb55384c157615b81afb369d023475e530845"
        ]
    },
    {
        "cfgs": [
            82
        ],
        "code": "println()",
        "dfgs": [
            82
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 259,
        "lineEnd": 259,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 81,
        "rootcause": false,
        "commits": [
            "6f5bb55384c157615b81afb369d023475e530845"
        ]
    },
    {
        "cfgs": [
            83
        ],
        "code": "print0(ucase ? \"ELSE \" : \"else \")",
        "dfgs": [
            83
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 260,
        "lineEnd": 260,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 82,
        "rootcause": false,
        "commits": [
            "a84c53d4fb30e772551178339d76ca3165b23541"
        ]
    },
    {
        "cfgs": [
            84
        ],
        "code": "x.getElseExpr().accept(this)",
        "dfgs": [
            84
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 261,
        "lineEnd": 261,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 83,
        "rootcause": false,
        "commits": [
            "6f5bb55384c157615b81afb369d023475e530845"
        ]
    },
    {
        "cfgs": [
            85
        ],
        "code": "decrementIndent()",
        "dfgs": [
            85
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 264,
        "lineEnd": 264,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 84,
        "rootcause": false,
        "commits": [
            "8f5136824570558f32915b4afbac9d264a835619"
        ]
    },
    {
        "cfgs": [
            86
        ],
        "code": "println()",
        "dfgs": [
            86
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 265,
        "lineEnd": 265,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 85,
        "rootcause": false,
        "commits": [
            "6f5bb55384c157615b81afb369d023475e530845"
        ]
    },
    {
        "cfgs": [
            87
        ],
        "code": "print0(ucase ? \"END\" : \"end\")",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 266,
        "lineEnd": 266,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 86,
        "rootcause": false,
        "commits": [
            "a84c53d4fb30e772551178339d76ca3165b23541"
        ]
    },
    {
        "cfgs": [],
        "code": "return false",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 268,
        "lineEnd": 268,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 87,
        "rootcause": false,
        "commits": [
            "6f5bb55384c157615b81afb369d023475e530845"
        ]
    },
    {
        "cfgs": [
            89
        ],
        "code": "public boolean visit(SQLMethodInvokeExpr x) ",
        "dfgs": [
            96,
            92,
            93,
            94,
            95,
            89,
            90,
            91
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 688,
        "lineEnd": 688,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 88,
        "rootcause": false,
        "commits": [
            "41af4e97a89926aa19eec4923ba42019d28e2758"
        ]
    },
    {
        "cfgs": [
            90,
            92
        ],
        "code": "if (x.getOwner() != null)",
        "dfgs": [
            92,
            90
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 689,
        "lineEnd": 689,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 89,
        "rootcause": false,
        "commits": [
            "41af4e97a89926aa19eec4923ba42019d28e2758"
        ]
    },
    {
        "cfgs": [
            91
        ],
        "code": "x.getOwner().accept(this)",
        "dfgs": [
            92,
            91
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 690,
        "lineEnd": 690,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 90,
        "rootcause": false,
        "commits": [
            "41af4e97a89926aa19eec4923ba42019d28e2758"
        ]
    },
    {
        "cfgs": [
            92
        ],
        "code": "print(':')",
        "dfgs": [
            92
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 691,
        "lineEnd": 691,
        "lineMapIndex": 245,
        "methodParents": [],
        "nodeIndex": 91,
        "rootcause": false,
        "commits": [
            "a84c53d4fb30e772551178339d76ca3165b23541"
        ]
    },
    {
        "cfgs": [
            93
        ],
        "code": "printFunctionName(x.getMethodName())",
        "dfgs": [
            93,
            94
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 693,
        "lineEnd": 693,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 92,
        "rootcause": false,
        "commits": [
            "9d45ec9d128a903ac47d2f5cb5ddba06d41dba8f"
        ]
    },
    {
        "cfgs": [
            94
        ],
        "code": "print('(')",
        "dfgs": [
            94
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 694,
        "lineEnd": 694,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 93,
        "rootcause": false,
        "commits": [
            "a84c53d4fb30e772551178339d76ca3165b23541"
        ]
    },
    {
        "cfgs": [
            95
        ],
        "code": "printAndAccept(x.getParameters(), \", \")",
        "dfgs": [
            95
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 695,
        "lineEnd": 695,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 94,
        "rootcause": false,
        "commits": [
            "41af4e97a89926aa19eec4923ba42019d28e2758"
        ]
    },
    {
        "cfgs": [
            96
        ],
        "code": "print(')')",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 696,
        "lineEnd": 696,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 95,
        "rootcause": false,
        "commits": [
            "a84c53d4fb30e772551178339d76ca3165b23541"
        ]
    },
    {
        "cfgs": [],
        "code": "return false",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 697,
        "lineEnd": 697,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 96,
        "rootcause": false,
        "commits": [
            "41af4e97a89926aa19eec4923ba42019d28e2758"
        ]
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"CREATE OR REPLACE VIEW \\\"RMAN\\\".\\\"V_001\\\"\\n\" +\"(\\n\" +\"\\t\\\"DB_KEY\\\", \\n\" +\"\\t\\\"DB_ID\\\", \\n\" +\"\\t\\\"BS_KEY\\\", \\n\" +\"\\t\\\"RECID\\\", \\n\" +\"\\t\\\"STAMP\\\", \\n\" +\"\\t\\\"SET_STAMP\\\", \\n\" +\"\\t\\\"SET_COUNT\\\", \\n\" +\"\\t\\\"BACKUP_TYPE\\\", \\n\" +\"\\t\\\"INCREMENTAL_LEVEL\\\", \\n\" +\"\\t\\\"PIECES\\\", \\n\" +\"\\t\\\"START_TIME\\\", \\n\" +\"\\t\\\"COMPLETION_TIME\\\", \\n\" +\"\\t\\\"ELAPSED_SECONDS\\\", \\n\" +\"\\t\\\"STATUS\\\", \\n\" +\"\\t\\\"CONTROLFILE_INCLUDED\\\", \\n\" +\"\\t\\\"INPUT_FILE_SCAN_ONLY\\\", \\n\" +\"\\t\\\"KEEP\\\", \\n\" +\"\\t\\\"KEEP_UNTIL\\\", \\n\" +\"\\t\\\"KEEP_OPTIONS\\\"\\n\" +\")\\n\" +\"AS\\n\" +\"SELECT db.db_key, db.db_id, bs.bs_key, bs.bs_recid AS recid, bs.bs_stamp AS stamp\\n\" +\"\\t, bs.set_stamp, bs.set_count, bs.bck_type AS backup_type, bs.incr_level AS incremental_level, bs.pieces\\n\" +\"\\t, bs.start_time, bs.completion_time, abs((bs.completion_time - bs.start_time) * 86400) AS elapsed_seconds, bs.status, bs.controlfile_included\\n\" +\"\\t, bs.input_file_scan_only, decode(keep_options, 0, 'NO', 'YES') AS keep, keep_until, decode(keep_options, 256, 'LOGS', 512, 'NOLOGS', 1024, 'CONSISTENT', NULL) AS keep_options\\n\" +\"FROM db, bs\\n\" +\"WHERE db.db_key = bs.db_key\",//SQLUtils.toSQLString(stmt, JdbcConstants.ORACLE))",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_create_OracleCreateViewTest2.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 67,
        "lineEnd": 96,
        "lineMapIndex": 246,
        "methodParents": [],
        "nodeIndex": 97,
        "rootcause": false,
        "commits": [
            "b5b5d6601592eb858ad6c0b2e84763b629bfac53"
        ]
    },
    {
        "cfgs": [],
        "code": "String expected = \"(SELECT lottery_notice_issue, lottery_notice_date, lottery_notice_result\"+ \"\\nFROM tb_lottery_notice\"+ \"\\nWHERE lottery_type_id = 8\"+ \"\\n\\tAND lottery_notice_issue <= 2014066)\"+ \"\\nUNION ALL\"+ \"\\n(SELECT NULL, NULL, NULL, NULL, NULL\" //+ \"\\n\\t, NULL)# and lottery_notice_issue>=2014062 order by lottery_notice_issue desc\"",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_mysql_SQLUtilsTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 43,
        "lineEnd": 49,
        "lineMapIndex": 247,
        "methodParents": [],
        "nodeIndex": 98,
        "rootcause": false,
        "commits": [
            "6fe79f5ec17840c4fee380d8807a7853c448f6eb"
        ]
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"CREATE ALGORITHM = UNDEFINED\\n\" +\r\"\\tDEFINER = root\\n\" +\"\\tSQL SECURITY = DEFINER\\n\" +\"\\tVIEW view_audit_enroll\\n\" +\"AS\\n\" +\"SELECT a.enroll_id AS 'enrollId', CASE WHEN (\\n\" +\"\\t\\tSELECT audit\\n\" +\"\\t\\tFROM actvty_audit\\n\" +\"\\t\\tWHERE enroll_id = a.enroll_id\\n\" +\"\\t\\t\\tAND rankjurisdiction = 1\\n\" +\"\\t) > 0 THEN '\u53bf\u7ad9\u5df2\u5ba1\u6838' ELSE NULL END AS 'countyAudit', CASE WHEN (\\n\" +\"\\t\\tSELECT audit\\n\" +\"\\t\\tFROM actvty_audit\\n\" +\"\\t\\tWHERE enroll_id = a.enroll_id\\n\" +\"\\t\\t\\tAND rankjurisdiction = 2\\n\" +\"\\t) > 0 THEN '\u5e02\u9986\u5df2\u5ba1\u6838' ELSE NULL END AS 'cityAudit', CASE WHEN (\\n\" +\"\\t\\tSELECT audit\\n\" +\"\\t\\tFROM actvty_audit\\n\" +\"\\t\\tWHERE enroll_id = a.enroll_id\\n\" +\"\\t\\t\\tAND rankjurisdiction = 3\\n\" +\"\\t) > 0 THEN '\u7701\u9986\u5df2\u5ba1\u6838' ELSE NULL END AS 'provinceAudit'\\n\" +\"FROM actvty_audit a\\n\" +\"GROUP BY a.enroll_id\", //SQLUtils.toMySqlString(stmt))",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_mysql_create_MySqlCreateViewTest1.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 46,
        "lineEnd": 69,
        "lineMapIndex": 248,
        "methodParents": [],
        "nodeIndex": 99,
        "rootcause": false,
        "commits": [
            "21ae9b572243c93f85cc13736b7e395c80a98be6",
            "1f3c5467eb134b5eb66841409a722d082c1953be"
        ]
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"create algorithm = UNDEFINED\\n\" +\r\"\\tdefiner = root\\n\" +\"\\tsql security = DEFINER\\n\" +\"\\tview view_audit_enroll\\n\" +\"as\\n\" +\"select a.enroll_id as 'enrollId', case when (\\n\" +\"\\t\\tselect audit\\n\" +\"\\t\\tfrom actvty_audit\\n\" +\"\\t\\twhere enroll_id = a.enroll_id\\n\" +\"\\t\\t\\tand rankjurisdiction = 1\\n\" +\"\\t) > 0 then '\u53bf\u7ad9\u5df2\u5ba1\u6838' else null end as 'countyAudit', case when (\\n\" +\"\\t\\tselect audit\\n\" +\"\\t\\tfrom actvty_audit\\n\" +\"\\t\\twhere enroll_id = a.enroll_id\\n\" +\"\\t\\t\\tand rankjurisdiction = 2\\n\" +\"\\t) > 0 then '\u5e02\u9986\u5df2\u5ba1\u6838' else null end as 'cityAudit', case when (\\n\" +\"\\t\\tselect audit\\n\" +\"\\t\\tfrom actvty_audit\\n\" +\"\\t\\twhere enroll_id = a.enroll_id\\n\" +\"\\t\\t\\tand rankjurisdiction = 3\\n\" +\"\\t) > 0 then '\u7701\u9986\u5df2\u5ba1\u6838' else null end as 'provinceAudit'\\n\" +\"from actvty_audit a\\n\" +\"group by a.enroll_id\", //SQLUtils.toMySqlString(stmt, SQLUtils.DEFAULT_LCASE_FORMAT_OPTION))",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_mysql_create_MySqlCreateViewTest1.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 71,
        "lineEnd": 94,
        "lineMapIndex": 249,
        "methodParents": [],
        "nodeIndex": 100,
        "rootcause": false,
        "commits": [
            "21ae9b572243c93f85cc13736b7e395c80a98be6",
            "1f3c5467eb134b5eb66841409a722d082c1953be"
        ]
    },
    {
        "cfgs": [],
        "code": "String expect = \"UPDATE reg_student_charge_item\\n\" +\"SET FAmountReceived = b.amount\\n\" +\"FROM reg_student_charge_item a, (\\n\" +\"\\t\\tSELECT a.FId, CASE WHEN SUM(b.FChargeAmount) IS NULL THEN 0 ELSE SUM(b.FChargeAmount) END AS amount\\n\" +\"\\t\\tFROM reg_student_charge_item a\\n\" +\"\\t\\t\\tLEFT JOIN reg_student_charge_daybook b ON a.FId = b.FChargeItemId\\n\" +\"\\t\\tWHERE a.FId = ?\\n\" +\"\\t\\tGROUP BY a.FId\\n\" +\"\\t) b\\n\" +\"WHERE a.FId = b.FId\\n\" +\"\\tAND a.FId = ?\"",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_sqlserver_SQLServerUpdateTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 43,
        "lineEnd": 53,
        "lineMapIndex": 253,
        "methodParents": [],
        "nodeIndex": 101,
        "rootcause": false,
        "commits": [
            "4ea81bca6984f073c420280ff09dcf535dbc460f"
        ]
    },
    {
        "cfgs": [],
        "code": "SQLServerStatementParser parser = new SQLServerStatementParser(sql)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_sqlserver_SQLServerUpdateTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 55,
        "lineEnd": 55,
        "lineMapIndex": 250,
        "methodParents": [],
        "nodeIndex": 102,
        "rootcause": false,
        "commits": [
            "b503104bec49a81a70a468fcdde1244d93ebf771"
        ]
    },
    {
        "cfgs": [],
        "code": "SQLStatement stmt = parser.parseStatementList().get(0)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_sqlserver_SQLServerUpdateTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 56,
        "lineEnd": 56,
        "lineMapIndex": 251,
        "methodParents": [],
        "nodeIndex": 103,
        "rootcause": false,
        "commits": [
            "b503104bec49a81a70a468fcdde1244d93ebf771"
        ]
    },
    {
        "cfgs": [],
        "code": "String text = TestUtils.outputSqlServer(stmt)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_sqlserver_SQLServerUpdateTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 58,
        "lineEnd": 58,
        "lineMapIndex": 252,
        "methodParents": [],
        "nodeIndex": 104,
        "rootcause": false,
        "commits": [
            "b503104bec49a81a70a468fcdde1244d93ebf771"
        ]
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(expect, text)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_sqlserver_SQLServerUpdateTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 60,
        "lineEnd": 60,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 105,
        "rootcause": false,
        "commits": [
            "b503104bec49a81a70a468fcdde1244d93ebf771"
        ]
    },
    {
        "cfgs": [],
        "code": "String expect = \"SELECT DECODE(GROUPING(department_name), 1, 'All Departments', department_name) AS department, \"\r+ \"DECODE(GROUPING(job_id), 1, 'All Jobs', job_id) AS job, COUNT(*) AS \\\"Total Empl\\\", AVG(salary) * 12 AS \\\"Average Sal\\\"\\n\"+ \"FROM employees e, departments d\\n\"+ \"WHERE d.department_id = e.department_id\\n\"+ \"GROUP BY ROLLUP(department_name, job_id);\"",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_OracleFlashbackQueryTest3.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 33,
        "lineEnd": 37,
        "lineMapIndex": 254,
        "methodParents": [],
        "nodeIndex": 106,
        "rootcause": false,
        "commits": [
            "f0eba13df8159ef20ee5daf5962cd16281d029d8",
            "78488b0b1ab0fb312cd0c0ec4c591ed68362f91d"
        ]
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"CREATE OR REPLACE VIEW \\\"SC_001\\\".\\\"TV_001\\\"\\n\" +\"(\\n\" +\"\\t\\\"ID\\\", \\n\" +\"\\t\\\"GMT_CREATE\\\", \\n\" +\"\\t\\\"CREATOR\\\", \\n\" +\"\\t\\\"GMT_MODIFIED\\\", \\n\" +\"\\t\\\"MODIFIER\\\", \\n\" +\"\\t\\\"IS_DELETED\\\", \\n\" +\"\\t\\\"CONTRACT_PARTY\\\", \\n\" +\"\\t\\\"COMPANY_NAME\\\", \\n\" +\"\\t\\\"PRODUCT_TYPE\\\", \\n\" +\"\\t\\\"PERIOD\\\", \\n\" +\"\\t\\\"JOIN\\\", \\n\" +\"\\t\\\"OVER\\\", \\n\" +\"\\t\\\"CONTRACT_TERM\\\", \\n\" +\"\\t\\\"CONTRACT_CASH\\\", \\n\" +\"\\t\\\"EXEC_CASH\\\", \\n\" +\"\\t\\\"CANCELED_CASH\\\", \\n\" +\"\\t\\\"RECEIVERD_CASH\\\", \\n\" +\"\\t\\\"O_S_CASH\\\", \\n\" +\"\\t\\\"REMARK\\\", \\n\" +\"\\t\\\"FENTAN_CHECK\\\", \\n\" +\"\\t\\\"TOTAL_CASH\\\", \\n\" +\"\\t\\\"NOT_CONFIRMED\\\", \\n\" +\"\\t\\\"PRE_RECEIVED\\\", \\n\" +\"\\t\\\"NOT_RECEIVED\\\", \\n\" +\"\\t\\\"CONTRACT_DATE\\\", \\n\" +\"\\t\\\"OWNER_1\\\", \\n\" +\"\\t\\\"AREA_ID_1\\\", \\n\" +\"\\t\\\"FIRST_OWNER\\\", \\n\" +\"\\t\\\"FIRST_AREA_ID\\\", \\n\" +\"\\t\\\"CONTRACT_ID\\\", \\n\" +\"\\t\\\"IS_RENEW_UPGRADE\\\", \\n\" +\"\\t\\\"CATEGORY_ID_1\\\", \\n\" +\"\\t\\\"CATEGORY_ID_2\\\", \\n\" +\"\\t\\\"FIRST_RECEIPT_DATE\\\", \\n\" +\"\\t\\\"RECEIPT_REMARK\\\", \\n\" +\"\\t\\\"CONTRACT_SERIAL\\\", \\n\" +\"\\t\\\"IS_MERGED\\\"\\n\" +\")\\n\" +\"AS\\n\" +\"SELECT ID, GMT_CREATE, utl_raw.cast_to_raw(CREATOR) AS CREATOR, GMT_MODIFIED, utl_raw.cast_to_raw(MODIFIER) AS MODIFIER\\n\" +\"\\t, IS_DELETED, utl_raw.cast_to_raw(CONTRACT_PARTY) AS CONTRACT_PARTY, utl_raw.cast_to_raw(COMPANY_NAME) AS COMPANY_NAME, utl_raw.cast_to_raw(PRODUCT_TYPE) AS PRODUCT_TYPE, utl_raw.cast_to_raw(PERIOD) AS PERIOD\\n\" +\"\\t, JOIN, OVER, CONTRACT_TERM, CONTRACT_CASH, EXEC_CASH\\n\" +\"\\t, CANCELED_CASH, RECEIVERD_CASH, O_S_CASH, utl_raw.cast_to_raw(REMARK) AS REMARK, FENTAN_CHECK\\n\" +\"\\t, TOTAL_CASH, NOT_CONFIRMED, PRE_RECEIVED, NOT_RECEIVED, CONTRACT_DATE\\n\" +\"\\t, utl_raw.cast_to_raw(OWNER_1) AS OWNER_1, AREA_ID_1, utl_raw.cast_to_raw(FIRST_OWNER) AS FIRST_OWNER, FIRST_AREA_ID, utl_raw.cast_to_raw(CONTRACT_ID) AS CONTRACT_ID\\n\" +\"\\t, utl_raw.cast_to_raw(IS_RENEW_UPGRADE) AS IS_RENEW_UPGRADE, CATEGORY_ID_1, CATEGORY_ID_2, FIRST_RECEIPT_DATE, utl_raw.cast_to_raw(RECEIPT_REMARK) AS RECEIPT_REMARK\\n\" +\"\\t, utl_raw.cast_to_raw(CONTRACT_SERIAL) AS CONTRACT_SERIAL, IS_MERGED\\n\" +\"FROM TB_002\",//SQLUtils.toSQLString(stmt, JdbcConstants.ORACLE))",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_create_OracleCreateViewTest6.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 81,
        "lineEnd": 131,
        "lineMapIndex": 255,
        "methodParents": [],
        "nodeIndex": 107,
        "rootcause": false,
        "commits": [
            "c3f84859da102ac51e8c02f76a2dc69548089faa"
        ]
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"CREATE OR REPLACE VIEW \\\"SC_001\\\".\\\"V_001\\\"\\n\" +\"(\\n\" +\"\\t\\\"OBJ_OWNER\\\", \\n\" +\"\\t\\\"OBJ_NAME\\\", \\n\" +\"\\t\\\"OBJ_TYPE\\\", \\n\" +\"\\t\\\"OBJ_ROWID\\\", \\n\" +\"\\t\\\"DB_USER\\\", \\n\" +\"\\t\\\"SID\\\", \\n\" +\"\\t\\\"LOCK_TYPE\\\", \\n\" +\"\\t\\\"ROW_WAIT_FILE#\\\", \\n\" +\"\\t\\\"ROW_WAIT_BLOCK#\\\", \\n\" +\"\\t\\\"ROW_WAIT_ROW#\\\"\\n\" +\")\\n\" +\"AS\\n\" +\"SELECT owner AS obj_owner, object_name AS obj_name, object_type AS obj_type, dbms_rowid.rowid_create(1, row_wait_obj#, ROW_WAIT_FILE#, ROW_WAIT_BLOCK#, ROW_WAIT_ROW#) AS obj_rowid, a.username AS db_user\\n\" +\"\\t, a.SID AS SID, a.TYPE AS lock_type, a.row_wait_file#, a.row_wait_block#, a.row_wait_row#\\n\" +\"FROM TB_001, (\\n\" +\"\\tSELECT /*+ no_merge(a) no_merge(b) */ a.username, a.SID, a.row_wait_obj#, a.ROW_WAIT_FILE#, a.ROW_WAIT_BLOCK#\\n\" +\"\\t\\t, a.ROW_WAIT_ROW#, b.TYPE\\n\" +\"\\tFROM sys.V_$SESSION a, sys.V_$LOCK b\\n\" +\"\\tWHERE a.username IS NOT NULL\\n\" +\"\\t\\tAND a.row_wait_obj# <> -1\\n\" +\"\\t\\tAND a.SID = b.SID\\n\" +\"\\t\\tAND b.TYPE IN ('TX', 'TM')\\n\" +\") a\\n\" +\"WHERE object_id = a.row_wait_obj#\",//SQLUtils.toSQLString(stmt, JdbcConstants.ORACLE))",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_create_OracleCreateViewTest4.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 60,
        "lineEnd": 86,
        "lineMapIndex": 256,
        "methodParents": [],
        "nodeIndex": 108,
        "rootcause": false,
        "commits": [
            "c3f84859da102ac51e8c02f76a2dc69548089faa"
        ]
    },
    {
        "cfgs": [],
        "code": "private boolean          bracket  = false",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_postgresql_ast_stmt_PGValuesQuery.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 27,
        "lineEnd": 27,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 109,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            111
        ],
        "code": "public boolean isBracket() ",
        "dfgs": [
            111
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_postgresql_ast_stmt_PGValuesQuery.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 44,
        "lineEnd": 44,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 110,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "return bracket",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_postgresql_ast_stmt_PGValuesQuery.java",
        "fieldParents": [
            109
        ],
        "isDel": false,
        "lineBeg": 45,
        "lineEnd": 45,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 111,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "public void setBracket(boolean bracket) ",
        "dfgs": [
            113
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_postgresql_ast_stmt_PGValuesQuery.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 49,
        "lineEnd": 49,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 112,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "this.bracket = bracket",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_postgresql_ast_stmt_PGValuesQuery.java",
        "fieldParents": [
            109
        ],
        "isDel": false,
        "lineBeg": 50,
        "lineEnd": 50,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 113,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            115
        ],
        "code": "public static SQLBinaryOpExpr isNotNull(SQLExpr expr) ",
        "dfgs": [
            115
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_ast_expr_SQLBinaryOpExpr.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 293,
        "lineEnd": 293,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 114,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "return new SQLBinaryOpExpr(expr, SQLBinaryOperator.IsNot, new SQLNullExpr())",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_ast_expr_SQLBinaryOpExpr.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 294,
        "lineEnd": 294,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 115,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            117
        ],
        "code": "public static SQLBinaryOpExpr isNull(SQLExpr expr) ",
        "dfgs": [
            117
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_ast_expr_SQLBinaryOpExpr.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 297,
        "lineEnd": 297,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 116,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "return new SQLBinaryOpExpr(expr, SQLBinaryOperator.Is, new SQLNullExpr())",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_ast_expr_SQLBinaryOpExpr.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 298,
        "lineEnd": 298,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 117,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"SELECT *\\n\" +\r\"FROM (\\n\" +\"\\tWITH\\n\" +\"\\t\\tvw_kreis_statics_t\\n\" +\"\\t\\tAS\\n\" +\"\\t\\t(\\n\" +\"\\t\\t\\tSELECT substr(xzqh, 1, 6) AS xzqh, swrslx, SUM(swrs_count) AS acd_totle\\n\" +\"\\t\\t\\tFROM (\\n\" +\"\\t\\t\\t\\tSELECT xzqh, sglx\\n\" +\"\\t\\t\\t\\t\\t, CASE \\n\" +\"\\t\\t\\t\\t\\t\\tWHEN swrs7 < 3 THEN '1'\\n\" +\"\\t\\t\\t\\t\\t\\tWHEN swrs7 < 5 THEN '2'\\n\" +\"\\t\\t\\t\\t\\t\\tWHEN swrs7 <= 9 THEN '3'\\n\" +\"\\t\\t\\t\\t\\t\\tELSE '4'\\n\" +\"\\t\\t\\t\\t\\tEND AS swrslx, 1 AS swrs_count\\n\" +\"\\t\\t\\t\\tFROM acduser.vw_acd_info\\n\" +\"\\t\\t\\t\\tWHERE sglx = '1'\\n\" +\"\\t\\t\\t\\t\\tAND sgfssj >= ?\\n\" +\"\\t\\t\\t)\\n\" +\"\\t\\t\\tGROUP BY substr(xzqh, 1, 6), swrslx\\n\" +\"\\t\\t)\\n\" +\"\\tSELECT e.\\\"XZQH\\\", e.\\\"LESS3\\\", e.\\\"F3TO5\\\", e.\\\"F5TO9\\\", e.\\\"MORE9\\\"\\n\" +\"\\t\\t, kreis_code, kreis_name, px1, py1, px2\\n\" +\"\\t\\t, py2\\n\" +\"\\tFROM (\\n\" +\"\\t\\tSELECT xzqh, nvl(MAX(decode(swrslx, '1', acd_totle)), 0) AS less3\\n\" +\"\\t\\t\\t, nvl(MAX(decode(swrslx, '2', acd_totle)), 0) AS f3to5\\n\" +\"\\t\\t\\t, nvl(MAX(decode(swrslx, '3', acd_totle)), 0) AS f5to9\\n\" +\"\\t\\t\\t, nvl(MAX(decode(swrslx, '4', acd_totle)), 0) AS more9\\n\" +\"\\t\\tFROM (\\n\" +\"\\t\\t\\tSELECT *\\n\" +\"\\t\\t\\tFROM acduser.vw_kreis_statics_t\\n\" +\"\\t\\t)\\n\" +\"\\t\\tGROUP BY xzqh\\n\" +\"\\t) e\\n\" +\"\\t\\tLEFT JOIN acduser.vw_sc_kreis_code_lv2 f ON e.xzqh = f.short_kreis_code \\n\" +\")\\n\" +\"WHERE kreis_code IN (\\n\" +\"\\tSELECT *\\n\" +\"\\tFROM (\\n\" +\"\\t\\tSELECT tbek_code\\n\" +\"\\t\\tFROM acduser.vw_kreis_code\\n\" +\"\\t\\tSTART WITH tbek_code = ?\\n\" +\"\\t\\tCONNECT BY PRIOR tbek_pk = tbek_parent\\n\" +\"\\t)\\n\" +\"\\tWHERE tbek_code != ?\\n\" +\")\", result)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_select_OracleSelectTest38.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 57,
        "lineEnd": 103,
        "lineMapIndex": 0,
        "methodParents": [],
        "nodeIndex": 118,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "assertEquals(\"select *\\n\" +\r\"from (\\n\" +\"\\twith\\n\" +\"\\t\\tvw_kreis_statics_t\\n\" +\"\\t\\tas\\n\" +\"\\t\\t(\\n\" +\"\\t\\t\\tselect substr(xzqh, 1, 6) as xzqh, swrslx, sum(swrs_count) as acd_totle\\n\" +\"\\t\\t\\tfrom (\\n\" +\"\\t\\t\\t\\tselect xzqh, sglx\\n\" +\"\\t\\t\\t\\t\\t, case \\n\" +\"\\t\\t\\t\\t\\t\\twhen swrs7 < 3 then '1'\\n\" +\"\\t\\t\\t\\t\\t\\twhen swrs7 < 5 then '2'\\n\" +\"\\t\\t\\t\\t\\t\\twhen swrs7 <= 9 then '3'\\n\" +\"\\t\\t\\t\\t\\t\\telse '4'\\n\" +\"\\t\\t\\t\\t\\tend as swrslx, 1 as swrs_count\\n\" +\"\\t\\t\\t\\tfrom acduser.vw_acd_info\\n\" +\"\\t\\t\\t\\twhere sglx = '1'\\n\" +\"\\t\\t\\t\\t\\tand sgfssj >= ?\\n\" +\"\\t\\t\\t)\\n\" +\"\\t\\t\\tgroup by substr(xzqh, 1, 6), swrslx\\n\" +\"\\t\\t)\\n\" +\"\\tselect e.\\\"XZQH\\\", e.\\\"LESS3\\\", e.\\\"F3TO5\\\", e.\\\"F5TO9\\\", e.\\\"MORE9\\\"\\n\" +\"\\t\\t, kreis_code, kreis_name, px1, py1, px2\\n\" +\"\\t\\t, py2\\n\" +\"\\tfrom (\\n\" +\"\\t\\tselect xzqh, nvl(max(decode(swrslx, '1', acd_totle)), 0) as less3\\n\" +\"\\t\\t\\t, nvl(max(decode(swrslx, '2', acd_totle)), 0) as f3to5\\n\" +\"\\t\\t\\t, nvl(max(decode(swrslx, '3', acd_totle)), 0) as f5to9\\n\" +\"\\t\\t\\t, nvl(max(decode(swrslx, '4', acd_totle)), 0) as more9\\n\" +\"\\t\\tfrom (\\n\" +\"\\t\\t\\tselect *\\n\" +\"\\t\\t\\tfrom acduser.vw_kreis_statics_t\\n\" +\"\\t\\t)\\n\" +\"\\t\\tgroup by xzqh\\n\" +\"\\t) e\\n\" +\"\\t\\tleft join acduser.vw_sc_kreis_code_lv2 f on e.xzqh = f.short_kreis_code \\n\" +\")\\n\" +\"where kreis_code in (\\n\" +\"\\tselect *\\n\" +\"\\tfrom (\\n\" +\"\\t\\tselect tbek_code\\n\" +\"\\t\\tfrom acduser.vw_kreis_code\\n\" +\"\\t\\tstart with tbek_code = ?\\n\" +\"\\t\\tconnect by prior tbek_pk = tbek_parent\\n\" +\"\\t)\\n\" +\"\\twhere tbek_code != ?\\n\" +\")\", result)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_select_OracleSelectTest38.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 107,
        "lineEnd": 153,
        "lineMapIndex": 1,
        "methodParents": [],
        "nodeIndex": 119,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "String expected = \"SELECT channel_desc, calendar_month_desc, co.country_id\\n\" +\r\"\\t, TO_CHAR(SUM(amount_sold), '9,999,999,999') AS SALES$\\n\" +\"FROM sales, customers, times, channels, countries co\\n\" +\"WHERE sales.time_id = times.time_id\\n\" +\"\\tAND sales.cust_id = customers.cust_id\\n\" +\"\\tAND sales.channel_id = channels.channel_id\\n\" +\"\\tAND customers.country_id = co.country_id\\n\" +\"\\tAND channels.channel_desc IN ('Direct Sales', 'Internet')\\n\" +\"\\tAND times.calendar_month_desc IN ('2000-09', '2000-10')\\n\" +\"\\tAND co.country_id IN ('UK', 'US')\\n\" +\"GROUP BY GROUPING SETS ((channel_desc, calendar_month_desc, co.country_id), (channel_desc, co.country_id), (calendar_month_desc, co.country_id));\"",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_OracleGroupingSetTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 38,
        "lineEnd": 48,
        "lineMapIndex": 2,
        "methodParents": [],
        "nodeIndex": 120,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "assertEquals(\"WITH\\n\" +\"\\tmenu_view\\n\" +\"\\tAS\\n\" +\"\\t(\\n\" +\"\\t\\tSELECT t.*, 1 AS level\\n\" +\"\\t\\tFROM sec_portal_menu t\\n\" +\"\\t\\tWHERE t.parent_id = ?\\n\" +\"\\t\\tUNION ALL\\n\" +\"\\t\\tSELECT t.*, level + 1\\n\" +\"\\t\\tFROM sec_portal_menu t, menu_view x\\n\" +\"\\t\\tWHERE t.parent_id = x.menu_id\\n\" +\"\\t)\\n\" +\"SELECT t.menu_id AS \\\"id\\\", t.menu_name AS \\\"name\\\", t.parent_id AS \\\"pId\\\"\\n\" +\"\\t, CASE t.level\\n\" +\"\\t\\tWHEN 1 THEN 'true'\\n\" +\"\\t\\tELSE 'false'\\n\" +\"\\tEND AS \\\"open\\\", t.link_type AS \\\"linkType\\\"\\n\" +\"FROM menu_view t\\n\" +\"WHERE 1 = 1\\n\" +\"\\tAND t.deleted = 0\\n\" +\"\\tAND t.link_type IN ('simple', 'link')\\n\" +\"\\tAND (EXISTS (\\n\" +\"\\t\\t\\tSELECT p.entity_code\\n\" +\"\\t\\t\\tFROM sec_role_auth p\\n\" +\"\\t\\t\\tWHERE p.entity_code = t.menu_id\\n\" +\"\\t\\t\\t\\tAND p.entity_type = 'menu'\\n\" +\"\\t\\t\\t\\tAND p.role_id IN (\\n\" +\"\\t\\t\\t\\t\\tSELECT r.role_code\\n\" +\"\\t\\t\\t\\t\\tFROM sec_role_member rm, sec_role r\\n\" +\"\\t\\t\\t\\t\\tWHERE rm.entity_type = 'user'\\n\" +\"\\t\\t\\t\\t\\t\\tAND entity_code = ?\\n\" +\"\\t\\t\\t\\t\\t\\tAND r.role_id = rm.role_id\\n\" +\"\\t\\t\\t\\t\\t\\tAND r.enabled = 1\\n\" +\"\\t\\t\\t\\t\\t\\tAND r.deleted = 0\\n\" +\"\\t\\t\\t\\t)\\n\" +\"\\t\\t)\\n\" +\"\\t\\tOR '1' = ?\\n\" +\"\\t\\tOR t.need_control = 0)\\n\" +\"\\tAND (t.enabled = 1\\n\" +\"\\t\\tOR '1' = ?\\n\" +\"\\t\\tOR t.need_control = 0)\\n\" +\"ORDER BY t.sort_order\", text)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_sqlserver_SQLServerSelectTest7.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 71,
        "lineEnd": 112,
        "lineMapIndex": 3,
        "methodParents": [],
        "nodeIndex": 121,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "private boolean          bracket  = false",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_ast_statement_SQLUnionQuery.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 25,
        "lineEnd": 25,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 122,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            124
        ],
        "code": "public boolean isBracket() ",
        "dfgs": [
            124
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_ast_statement_SQLUnionQuery.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 102,
        "lineEnd": 102,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 123,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "return bracket",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_ast_statement_SQLUnionQuery.java",
        "fieldParents": [
            122
        ],
        "isDel": false,
        "lineBeg": 103,
        "lineEnd": 103,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 124,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            126
        ],
        "code": "public void setBracket(boolean bracket) ",
        "dfgs": [
            126
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_ast_statement_SQLUnionQuery.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 106,
        "lineEnd": 106,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 125,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "this.bracket = bracket",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_ast_statement_SQLUnionQuery.java",
        "fieldParents": [
            122
        ],
        "isDel": false,
        "lineBeg": 107,
        "lineEnd": 107,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 126,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"SELECT b + 0, BIN(b + 0), OCT(b + 0)\\n\" +\r\"\\t, HEX(b + 0)\\n\" +\"FROM t;\", text)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_mysql_BitFunctionsTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 137,
        "lineEnd": 139,
        "lineMapIndex": 4,
        "methodParents": [],
        "nodeIndex": 127,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "if (selectItemExpr instanceof SQLMethodInvokeExpr)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 259,
        "lineEnd": 259,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 128,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "SQLMethodInvokeExpr methodInvokeExpr = (SQLMethodInvokeExpr) selectItemExpr",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 260,
        "lineEnd": 260,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 129,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "int paramCount =  methodInvokeExpr.getParameters().size()",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 261,
        "lineEnd": 261,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 130,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "lineItemCount += paramCount",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 262,
        "lineEnd": 262,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 131,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "if (lineItemCount >= selectListNumberOfLine)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 263,
        "lineEnd": 263,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 132,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "lineItemCount = paramCount",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 264,
        "lineEnd": 264,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 133,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "println()",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 265,
        "lineEnd": 265,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 134,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "if (lineItemCount >= selectListNumberOfLine|| selectItemExpr instanceof SQLQueryExpr|| selectItemExpr instanceof SQLCaseExpr)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 267,
        "lineEnd": 269,
        "lineMapIndex": 5,
        "methodParents": [],
        "nodeIndex": 135,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            137
        ],
        "code": "incrementIndent()",
        "dfgs": [
            151,
            142,
            137
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 510,
        "lineEnd": 510,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 136,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            140
        ],
        "code": "for (int i = 0, size = x.getItems().size(); i < size; ++i)",
        "dfgs": [
            140
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 516,
        "lineEnd": 516,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 137,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "println()",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 517,
        "lineEnd": 517,
        "lineMapIndex": 6,
        "methodParents": [],
        "nodeIndex": 138,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "x.getItems().get(i).accept(this)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 518,
        "lineEnd": 518,
        "lineMapIndex": 7,
        "methodParents": [],
        "nodeIndex": 139,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            141
        ],
        "code": "SQLExpr elExpr = x.getElseExpr()",
        "dfgs": [
            141
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 521,
        "lineEnd": 521,
        "lineMapIndex": 10,
        "methodParents": [],
        "nodeIndex": 140,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            142,
            151
        ],
        "code": "if (elExpr != null)",
        "dfgs": [
            144
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 522,
        "lineEnd": 522,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 141,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            143
        ],
        "code": "println()",
        "dfgs": [
            143
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 523,
        "lineEnd": 523,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 142,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            144
        ],
        "code": "print0(ucase ? \"ELSE \" : \"else \")",
        "dfgs": [
            145,
            150
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 524,
        "lineEnd": 524,
        "lineMapIndex": 9,
        "methodParents": [],
        "nodeIndex": 143,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            145,
            149
        ],
        "code": "if (elExpr instanceof SQLCaseExpr)",
        "dfgs": [
            147,
            150
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 525,
        "lineEnd": 525,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 144,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            146
        ],
        "code": "incrementIndent()",
        "dfgs": [
            146
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 526,
        "lineEnd": 526,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 145,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            147
        ],
        "code": "println()",
        "dfgs": [
            147
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 527,
        "lineEnd": 527,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 146,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            148
        ],
        "code": "elExpr.accept(this)",
        "dfgs": [
            148
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 528,
        "lineEnd": 528,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 147,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            151
        ],
        "code": "decrementIndent()",
        "dfgs": [
            151
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 529,
        "lineEnd": 529,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 148,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            150
        ],
        "code": "else",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 530,
        "lineEnd": 530,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 149,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            151
        ],
        "code": "elExpr.accept(this)",
        "dfgs": [
            151
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 531,
        "lineEnd": 531,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 150,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            152
        ],
        "code": "decrementIndent()",
        "dfgs": [
            152
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 535,
        "lineEnd": 535,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 151,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            153
        ],
        "code": "println()",
        "dfgs": [
            153
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 536,
        "lineEnd": 536,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 152,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "print0(ucase ? \"END\" : \"end\")",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 537,
        "lineEnd": 537,
        "lineMapIndex": 11,
        "methodParents": [],
        "nodeIndex": 153,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            155
        ],
        "code": "SQLExpr expr = x.getConditionExpr()",
        "dfgs": [
            155,
            156
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 544,
        "lineEnd": 544,
        "lineMapIndex": 12,
        "methodParents": [],
        "nodeIndex": 154,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            156
        ],
        "code": "expr.accept(this)",
        "dfgs": [
            158,
            163
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 545,
        "lineEnd": 545,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 155,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            157
        ],
        "code": "SQLExpr valueExpr = x.getValueExpr()",
        "dfgs": [
            157
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 547,
        "lineEnd": 547,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 156,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            158,
            162
        ],
        "code": "if (valueExpr instanceof SQLCaseExpr)",
        "dfgs": [
            160,
            163
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 548,
        "lineEnd": 548,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 157,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            159
        ],
        "code": "incrementIndent()",
        "dfgs": [
            159
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 549,
        "lineEnd": 549,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 158,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            160
        ],
        "code": "println()",
        "dfgs": [
            160
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 550,
        "lineEnd": 550,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 159,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            161
        ],
        "code": "valueExpr.accept(this)",
        "dfgs": [
            161
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 551,
        "lineEnd": 551,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 160,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "decrementIndent()",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 552,
        "lineEnd": 552,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 161,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            163
        ],
        "code": "else",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 553,
        "lineEnd": 553,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 162,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "valueExpr.accept(this)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 554,
        "lineEnd": 554,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 163,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            165
        ],
        "code": "SQLExpr owner = x.getOwner()",
        "dfgs": [
            165,
            167
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 898,
        "lineEnd": 898,
        "lineMapIndex": 15,
        "methodParents": [],
        "nodeIndex": 164,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            166,
            167
        ],
        "code": "if (owner != null)",
        "dfgs": [
            166
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 899,
        "lineEnd": 899,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 165,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            167
        ],
        "code": "printMethodOwner(owner)",
        "dfgs": [
            167
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 900,
        "lineEnd": 900,
        "lineMapIndex": -1,
        "methodParents": [
            173
        ],
        "nodeIndex": 166,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            168
        ],
        "code": "List<SQLExpr> parameters = x.getParameters()",
        "dfgs": [
            168
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 906,
        "lineEnd": 906,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 167,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "for (int i = 0, size = parameters.size(); i < size; ++i)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 907,
        "lineEnd": 907,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 168,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "if (i != 0)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 908,
        "lineEnd": 908,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 169,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "print0(\", \")",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 909,
        "lineEnd": 909,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 170,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "SQLExpr param = x.getParameters().get(i)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 911,
        "lineEnd": 911,
        "lineMapIndex": 17,
        "methodParents": [],
        "nodeIndex": 171,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "param.accept(this)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 912,
        "lineEnd": 912,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 172,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            174
        ],
        "code": "protected void printMethodOwner(SQLExpr owner) ",
        "dfgs": [
            174,
            175
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 925,
        "lineEnd": 925,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 173,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            175
        ],
        "code": "owner.accept(this)",
        "dfgs": [
            175
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 926,
        "lineEnd": 926,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 174,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "print('.')",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 927,
        "lineEnd": 927,
        "lineMapIndex": 16,
        "methodParents": [],
        "nodeIndex": 175,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            178,
            177
        ],
        "code": "boolean bracket = x.isBracket()",
        "dfgs": [
            180,
            181,
            178
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 1910,
        "lineEnd": 1910,
        "lineMapIndex": 18,
        "methodParents": [
            110
        ],
        "nodeIndex": 176,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            178
        ],
        "code": "if (bracket)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 1912,
        "lineEnd": 1912,
        "lineMapIndex": 19,
        "methodParents": [],
        "nodeIndex": 177,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            179
        ],
        "code": "SQLSelectQuery right = x.getRight()",
        "dfgs": [
            180,
            179,
            181
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 1921,
        "lineEnd": 1921,
        "lineMapIndex": 24,
        "methodParents": [],
        "nodeIndex": 178,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            180,
            181
        ],
        "code": "boolean needParen = x.getOrderBy() != null && !right.isBracket()",
        "dfgs": [
            180,
            183,
            181
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 1922,
        "lineEnd": 1922,
        "lineMapIndex": 22,
        "methodParents": [
            110
        ],
        "nodeIndex": 179,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            182
        ],
        "code": "right.accept(this)",
        "dfgs": [
            183
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 1926,
        "lineEnd": 1926,
        "lineMapIndex": 23,
        "methodParents": [],
        "nodeIndex": 180,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            182
        ],
        "code": "right.accept(this)",
        "dfgs": [
            183
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 1929,
        "lineEnd": 1929,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 181,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            183
        ],
        "code": "if (bracket)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 1937,
        "lineEnd": 1937,
        "lineMapIndex": 20,
        "methodParents": [],
        "nodeIndex": 182,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "print(')')",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_visitor_SQLASTOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 1938,
        "lineEnd": 1938,
        "lineMapIndex": 21,
        "methodParents": [],
        "nodeIndex": 183,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"SELECT CASE 1\\n\" +\r\"\\t\\tWHEN 1 THEN 'one'\\n\" +\"\\t\\tWHEN 2 THEN 'two'\\n\" +\"\\t\\tELSE 'more'\\n\" +\"\\tEND;\", text)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_mysql_ControlFlowFunctionsTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 38,
        "lineEnd": 42,
        "lineMapIndex": 25,
        "methodParents": [],
        "nodeIndex": 184,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            188,
            186
        ],
        "code": "final boolean bracket = x.isBracket()",
        "dfgs": [
            189
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 196,
        "lineEnd": 196,
        "lineMapIndex": 42,
        "methodParents": [
            110
        ],
        "nodeIndex": 185,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            187
        ],
        "code": "if (bracket)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 197,
        "lineEnd": 197,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 186,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            188
        ],
        "code": "print('(')",
        "dfgs": [
            189
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 198,
        "lineEnd": 198,
        "lineMapIndex": 45,
        "methodParents": [],
        "nodeIndex": 187,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            189
        ],
        "code": "if (bracket)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 317,
        "lineEnd": 317,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 188,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "print(')')",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 318,
        "lineEnd": 318,
        "lineMapIndex": 47,
        "methodParents": [],
        "nodeIndex": 189,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            191,
            193,
            195
        ],
        "code": "SQLExpr owner = x.getOwner()",
        "dfgs": [
            191,
            193,
            195
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 728,
        "lineEnd": 728,
        "lineMapIndex": 33,
        "methodParents": [],
        "nodeIndex": 190,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            192
        ],
        "code": "if (owner != null)",
        "dfgs": [
            192
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 730,
        "lineEnd": 730,
        "lineMapIndex": 26,
        "methodParents": [],
        "nodeIndex": 191,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "printMethodOwner(owner)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 731,
        "lineEnd": 731,
        "lineMapIndex": 27,
        "methodParents": [
            173
        ],
        "nodeIndex": 192,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            194
        ],
        "code": "if (owner != null)",
        "dfgs": [
            194
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 753,
        "lineEnd": 753,
        "lineMapIndex": 29,
        "methodParents": [],
        "nodeIndex": 193,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "printMethodOwner(owner)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 754,
        "lineEnd": 754,
        "lineMapIndex": 30,
        "methodParents": [
            173
        ],
        "nodeIndex": 194,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            196
        ],
        "code": "if (owner != null)",
        "dfgs": [
            196
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 779,
        "lineEnd": 779,
        "lineMapIndex": 32,
        "methodParents": [],
        "nodeIndex": 195,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "printMethodOwner(owner)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_visitor_MySqlOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 780,
        "lineEnd": 780,
        "lineMapIndex": -1,
        "methodParents": [
            173
        ],
        "nodeIndex": 196,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "assertEquals(\"SELECT channel_desc, calendar_month_desc, co.country_id\\n\" +\"\\t, TO_CHAR(SUM(amount_sold), '9,999,999,999') AS SALES$\\n\" +\"FROM sales, customers, times, channels, countries co\\n\" +\"WHERE sales.time_id = times.time_id\\n\" +\"\\tAND sales.cust_id = customers.cust_id\\n\" +\"\\tAND sales.channel_id = channels.channel_id\\n\" +\"\\tAND customers.country_id = co.country_id\\n\" +\"\\tAND channels.channel_desc IN ('Direct Sales', 'Internet')\\n\" +\"\\tAND times.calendar_month_desc IN ('2000-09', '2000-10')\\n\" +\"\\tAND co.country_iso_code IN ('UK', 'US')\\n\" +\"GROUP BY GROUPING SETS ((channel_desc, calendar_month_desc, co.country_id), (channel_desc, co.country_id), (calendar_month_desc, co.country_id));\", text)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_select_OracleSelectTest62.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 69,
        "lineEnd": 79,
        "lineMapIndex": 57,
        "methodParents": [],
        "nodeIndex": 197,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"select channel_desc, calendar_month_desc, co.country_id\\n\" +\"\\t, TO_CHAR(sum(amount_sold), '9,999,999,999') as SALES$\\n\" +\"from sales, customers, times, channels, countries co\\n\" +\"where sales.time_id = times.time_id\\n\" +\"\\tand sales.cust_id = customers.cust_id\\n\" +\"\\tand sales.channel_id = channels.channel_id\\n\" +\"\\tand customers.country_id = co.country_id\\n\" +\"\\tand channels.channel_desc in ('Direct Sales', 'Internet')\\n\" +\"\\tand times.calendar_month_desc in ('2000-09', '2000-10')\\n\" +\"\\tand co.country_iso_code in ('UK', 'US')\\n\" +\"group by grouping sets ((channel_desc, calendar_month_desc, co.country_id), (channel_desc, co.country_id), (calendar_month_desc, co.country_id));\", text)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_select_OracleSelectTest62.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 85,
        "lineEnd": 95,
        "lineMapIndex": 58,
        "methodParents": [],
        "nodeIndex": 198,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"DELETE FROM t1\\n\" +\"WHERE s11 > ANY (\\n\" +\"\\t\\tSELECT COUNT(*)\\n\" +\"\\t\\tFROM t2\\n\" +\"\\t\\tWHERE NOT EXISTS (\\n\" +\"\\t\\t\\tSELECT *\\n\" +\"\\t\\t\\tFROM t3\\n\" +\"\\t\\t\\tWHERE ROW(5 * t2.s1, 77) = (\\n\" +\"\\t\\t\\t\\tSELECT 50, 11 * s1\\n\" +\"\\t\\t\\t\\tFROM t4\\n\" +\"\\t\\t\\t\\tUNION\\n\" +\"\\t\\t\\t\\tSELECT 50, 77\\n\" +\"\\t\\t\\t\\tFROM (\\n\" +\"\\t\\t\\t\\t\\tSELECT *\\n\" +\"\\t\\t\\t\\t\\tFROM t5\\n\" +\"\\t\\t\\t\\t) t5\\n\" +\"\\t\\t\\t)\\n\" +\"\\t\\t)\\n\" +\"\\t)\", SQLUtils.toMySqlString(stmt))",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_mysql_MySqlDeleteTest_3.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 45,
        "lineEnd": 63,
        "lineMapIndex": 59,
        "methodParents": [],
        "nodeIndex": 199,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "assertEquals(\"delete from t1\\n\" +\"where s11 > any (\\n\" +\"\\t\\tselect count(*)\\n\" +\"\\t\\tfrom t2\\n\" +\"\\t\\twhere not exists (\\n\" +\"\\t\\t\\tselect *\\n\" +\"\\t\\t\\tfrom t3\\n\" +\"\\t\\t\\twhere ROW(5 * t2.s1, 77) = (\\n\" +\"\\t\\t\\t\\tselect 50, 11 * s1\\n\" +\"\\t\\t\\t\\tfrom t4\\n\" +\"\\t\\t\\t\\tunion\\n\" +\"\\t\\t\\t\\tselect 50, 77\\n\" +\"\\t\\t\\t\\tfrom (\\n\" +\"\\t\\t\\t\\t\\tselect *\\n\" +\"\\t\\t\\t\\t\\tfrom t5\\n\" +\"\\t\\t\\t\\t) t5\\n\" +\"\\t\\t\\t)\\n\" +\"\\t\\t)\\n\" +\"\\t)\", SQLUtils.toMySqlString(stmt, SQLUtils.DEFAULT_LCASE_FORMAT_OPTION))",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_mysql_MySqlDeleteTest_3.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 64,
        "lineEnd": 82,
        "lineMapIndex": 60,
        "methodParents": [],
        "nodeIndex": 200,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "boolean isBracket()",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_ast_statement_SQLSelectQuery.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 21,
        "lineEnd": 21,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 201,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "void setBracket(boolean bracket)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_ast_statement_SQLSelectQuery.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 22,
        "lineEnd": 22,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 202,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"(SELECT id\\n\" +\r\"FROM t1)\\n\" +\"UNION ALL\\n\" +\"(SELECT id\\n\" +\"FROM t2)\\n\" +\"UNION ALL\\n\" +\"(SELECT id\\n\" +\"FROM t3)\\n\" +\"ORDER BY d DESC\", output)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_cobar_DMLSelectParserTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 34,
        "lineEnd": 42,
        "lineMapIndex": 61,
        "methodParents": [],
        "nodeIndex": 203,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "assertEquals(\"(SELECT id\\n\" +\r\"FROM t1)\\n\" +\"UNION\\n\" +\"SELECT id\\n\" +\"FROM t2\\n\" +\"ORDER BY id\\n\" +\"UNION ALL\\n\" +\"(SELECT id\\n\" +\"FROM t3)\\n\" +\"ORDER BY d ASC\", output)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_cobar_DMLSelectParserTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 51,
        "lineEnd": 60,
        "lineMapIndex": 62,
        "methodParents": [],
        "nodeIndex": 204,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"(SELECT id\\n\" +\r\"FROM t1)\\n\" +\"UNION DISTINCT\\n\" +\"(SELECT id\\n\" +\"FROM t2)\\n\" +\"UNION\\n\" +\"SELECT id\\n\" +\"FROM t3\", output)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_cobar_DMLSelectParserTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 69,
        "lineEnd": 76,
        "lineMapIndex": 63,
        "methodParents": [],
        "nodeIndex": 205,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "select.setBracket(true)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_parser_MySqlSelectParser.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 81,
        "lineEnd": 81,
        "lineMapIndex": -1,
        "methodParents": [
            112
        ],
        "nodeIndex": 206,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "select.getQuery().setBracket(true)",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_mysql_parser_MySqlSelectParser.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 219,
        "lineEnd": 219,
        "lineMapIndex": -1,
        "methodParents": [
            112
        ],
        "nodeIndex": 207,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"CREATE OR REPLACE VIEW \\\"SC_001\\\".\\\"TB_001\\\"\\n\" +\"(\\n\" +\"\\t\\\"OBJECT_NAME\\\", \\n\" +\"\\t\\\"SESSION_ID\\\", \\n\" +\"\\t\\\"ORACLE_USERNAME\\\", \\n\" +\"\\t\\\"OS_USER_NAME\\\", \\n\" +\"\\t\\\"SQL_ACTIONS\\\", \\n\" +\"\\t\\\"LOCK_MODE\\\"\\n\" +\")\\n\" +\"AS\\n\" +\"SELECT /*+ no_merge(lo) */ DO.object_name, lo.SESSION_ID, lo.oracle_username, lo.OS_USER_NAME\\n\" +\"\\t, DECODE(locked_mode, 1, 'SELECT', 2, 'SELECT FOR UPDATE / LOCK ROW SHARE', 3, 'INSERT/UPDATE/DELETE/LOCK ROW EXCLUSIVE', 4, 'CREATE INDEX/LOCK SHARE', 5, 'LOCK SHARE ROW EXCLUSIVE', 6, 'ALTER TABLE/DROP TABLE/DROP INDEX/TRUNCATE TABLE/LOCK EXCLUSIVE') AS sql_actions\\n\" +\"\\t, DECODE(locked_mode, 1, 'NULL', 2, 'SS - SUB SHARE', 3, 'SX - SUB EXCLUSIVE', 4, 'S - SHARE', 5, 'SSX - SHARE/SUB EXCLUSIVE', 6, 'X - EXCLUSIVE') AS Lock_mode\\n\" +\"FROM sys.V_$LOCKED_OBJECT lo, TB_002 DO\\n\" +\"WHERE DO.object_id = lo.object_id\",//SQLUtils.toSQLString(stmt, JdbcConstants.ORACLE))",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_create_OracleCreateViewTest5.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 55,
        "lineEnd": 70,
        "lineMapIndex": 64,
        "methodParents": [],
        "nodeIndex": 208,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"SELECT COUNT(*)\\n\" +\"FROM (\\n\" +\"\\tSELECT id, name\\n\" +\"\\tFROM t1\\n\" +\"\\tUNION\\n\" +\"\\tSELECT id, name\\n\" +\"\\tFROM t2\\n\" +\") ALIAS_COUNT\", result)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_PagerUtilsTest_Count_MySql_0.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 61,
        "lineEnd": 68,
        "lineMapIndex": 65,
        "methodParents": [],
        "nodeIndex": 209,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "private boolean                     bracket         = false",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_ast_statement_SQLSelectQueryBlock.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 28,
        "lineEnd": 28,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 210,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            212
        ],
        "code": "\rpublic boolean isBracket()",
        "dfgs": [
            212
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_ast_statement_SQLSelectQueryBlock.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 380,
        "lineEnd": 381,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 211,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "return bracket",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_ast_statement_SQLSelectQueryBlock.java",
        "fieldParents": [
            210
        ],
        "isDel": false,
        "lineBeg": 382,
        "lineEnd": 382,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 212,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            214
        ],
        "code": "\rpublic void setBracket(boolean bracket)",
        "dfgs": [
            214
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_ast_statement_SQLSelectQueryBlock.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 385,
        "lineEnd": 386,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 213,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "this.bracket = bracket",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_ast_statement_SQLSelectQueryBlock.java",
        "fieldParents": [
            210
        ],
        "isDel": false,
        "lineBeg": 387,
        "lineEnd": 387,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 214,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            216
        ],
        "code": "public static SQLCaseExpr decodeToCase(SQLMethodInvokeExpr x) ",
        "dfgs": [
            221,
            222,
            223,
            241,
            216,
            217,
            220,
            224,
            234,
            218,
            219,
            226,
            232,
            233,
            240,
            225,
            227,
            228,
            229,
            235,
            236,
            237,
            230,
            238,
            231,
            239
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 814,
        "lineEnd": 814,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 215,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            217,
            218
        ],
        "code": "if (x == null)",
        "dfgs": [
            218
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 815,
        "lineEnd": 815,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 216,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "return null",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 816,
        "lineEnd": 816,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 217,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            219,
            220
        ],
        "code": "if (!\"decode\".equalsIgnoreCase(x.getMethodName()))",
        "dfgs": [
            220,
            219
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 819,
        "lineEnd": 819,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 218,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            220
        ],
        "code": "throw new IllegalArgumentException(x.getMethodName())",
        "dfgs": [
            220
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 820,
        "lineEnd": 820,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 219,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            221
        ],
        "code": "List<SQLExpr> parameters = x.getParameters()",
        "dfgs": [
            222
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 823,
        "lineEnd": 823,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 220,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            222
        ],
        "code": "SQLCaseExpr caseExpr = new SQLCaseExpr()",
        "dfgs": [
            222
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 824,
        "lineEnd": 824,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 221,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            223
        ],
        "code": "caseExpr.setValueExpr(parameters.get(0))",
        "dfgs": [
            241,
            223,
            233,
            240
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 826,
        "lineEnd": 826,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 222,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            224,
            234
        ],
        "code": "for (int i = 1; i + 1 < parameters.size(); i += 2)",
        "dfgs": [
            225,
            234
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 828,
        "lineEnd": 828,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 223,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            225
        ],
        "code": "SQLCaseExpr.Item item = new SQLCaseExpr.Item()",
        "dfgs": [
            226
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 829,
        "lineEnd": 829,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 224,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            226
        ],
        "code": "SQLExpr conditionExpr = parameters.get(i)",
        "dfgs": [
            226,
            227
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 830,
        "lineEnd": 830,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 225,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            227
        ],
        "code": "item.setConditionExpr(conditionExpr)",
        "dfgs": [
            232
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 832,
        "lineEnd": 832,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 226,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            228
        ],
        "code": "SQLExpr valueExpr = parameters.get(i + 1)",
        "dfgs": [
            228
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 834,
        "lineEnd": 834,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 227,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            229,
            232
        ],
        "code": "if (valueExpr instanceof SQLMethodInvokeExpr)",
        "dfgs": [
            232,
            229
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 836,
        "lineEnd": 836,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 228,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            230
        ],
        "code": "SQLMethodInvokeExpr methodInvokeExpr = (SQLMethodInvokeExpr) valueExpr",
        "dfgs": [
            230
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 837,
        "lineEnd": 837,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 229,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            231,
            232
        ],
        "code": "if (\"decode\".equalsIgnoreCase(methodInvokeExpr.getMethodName()))",
        "dfgs": [
            231
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 838,
        "lineEnd": 838,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 230,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            232
        ],
        "code": "valueExpr = decodeToCase(methodInvokeExpr)",
        "dfgs": [
            232,
            239
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 839,
        "lineEnd": 839,
        "lineMapIndex": -1,
        "methodParents": [
            215
        ],
        "nodeIndex": 231,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            233
        ],
        "code": "item.setValueExpr(valueExpr)",
        "dfgs": [
            233
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 843,
        "lineEnd": 843,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 232,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "caseExpr.addItem(item)",
        "dfgs": [
            241,
            240
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 844,
        "lineEnd": 844,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 233,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            235,
            241
        ],
        "code": "if (parameters.size() % 2 == 0)",
        "dfgs": [
            235
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 847,
        "lineEnd": 847,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 234,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            236
        ],
        "code": "SQLExpr defaultExpr = parameters.get(parameters.size() - 1)",
        "dfgs": [
            236
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 848,
        "lineEnd": 848,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 235,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            237,
            240
        ],
        "code": "if (defaultExpr instanceof SQLMethodInvokeExpr)",
        "dfgs": [
            240,
            237
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 850,
        "lineEnd": 850,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 236,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            238
        ],
        "code": "SQLMethodInvokeExpr methodInvokeExpr = (SQLMethodInvokeExpr) defaultExpr",
        "dfgs": [
            238
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 851,
        "lineEnd": 851,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 237,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            239,
            240
        ],
        "code": "if (\"decode\".equalsIgnoreCase(methodInvokeExpr.getMethodName()))",
        "dfgs": [
            239
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 852,
        "lineEnd": 852,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 238,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            240
        ],
        "code": "defaultExpr = decodeToCase(methodInvokeExpr)",
        "dfgs": [
            240
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 853,
        "lineEnd": 853,
        "lineMapIndex": -1,
        "methodParents": [
            215
        ],
        "nodeIndex": 239,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            241
        ],
        "code": "caseExpr.setElseExpr(defaultExpr)",
        "dfgs": [
            241
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 857,
        "lineEnd": 857,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 240,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "return caseExpr",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_SQLUtils.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 860,
        "lineEnd": 860,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 241,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "import com.alibaba.druid.sql.ast.*",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 22,
        "lineEnd": 22,
        "lineMapIndex": 66,
        "methodParents": [],
        "nodeIndex": 242,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            244
        ],
        "code": "protected void printMethodOwner(SQLExpr owner) ",
        "dfgs": [
            244,
            245
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 658,
        "lineEnd": 658,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 243,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            245
        ],
        "code": "owner.accept(this)",
        "dfgs": [
            245
        ],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 659,
        "lineEnd": 659,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 244,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "print(':')",
        "dfgs": [],
        "fName": "src_main_java_com_alibaba_druid_sql_dialect_odps_visitor_OdpsOutputVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 660,
        "lineEnd": 660,
        "lineMapIndex": 91,
        "methodParents": [],
        "nodeIndex": 245,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"CREATE OR REPLACE VIEW \\\"RMAN\\\".\\\"V_001\\\"\\n\" +\"(\\n\" +\"\\t\\\"DB_KEY\\\", \\n\" +\"\\t\\\"DB_ID\\\", \\n\" +\"\\t\\\"BS_KEY\\\", \\n\" +\"\\t\\\"RECID\\\", \\n\" +\"\\t\\\"STAMP\\\", \\n\" +\"\\t\\\"SET_STAMP\\\", \\n\" +\"\\t\\\"SET_COUNT\\\", \\n\" +\"\\t\\\"BACKUP_TYPE\\\", \\n\" +\"\\t\\\"INCREMENTAL_LEVEL\\\", \\n\" +\"\\t\\\"PIECES\\\", \\n\" +\"\\t\\\"START_TIME\\\", \\n\" +\"\\t\\\"COMPLETION_TIME\\\", \\n\" +\"\\t\\\"ELAPSED_SECONDS\\\", \\n\" +\"\\t\\\"STATUS\\\", \\n\" +\"\\t\\\"CONTROLFILE_INCLUDED\\\", \\n\" +\"\\t\\\"INPUT_FILE_SCAN_ONLY\\\", \\n\" +\"\\t\\\"KEEP\\\", \\n\" +\"\\t\\\"KEEP_UNTIL\\\", \\n\" +\"\\t\\\"KEEP_OPTIONS\\\"\\n\" +\")\\n\" +\"AS\\n\" +\"SELECT db.db_key, db.db_id, bs.bs_key, bs.bs_recid AS recid, bs.bs_stamp AS stamp\\n\" +\"\\t, bs.set_stamp, bs.set_count, bs.bck_type AS backup_type, bs.incr_level AS incremental_level, bs.pieces\\n\" +\"\\t, bs.start_time, bs.completion_time, abs((bs.completion_time - bs.start_time) * 86400) AS elapsed_seconds, bs.status\\n\" +\"\\t, bs.controlfile_included, bs.input_file_scan_only\\n\" +\"\\t, decode(keep_options, 0, 'NO', 'YES') AS keep\\n\" +\"\\t, keep_until\\n\" +\"\\t, decode(keep_options, 256, 'LOGS', 512, 'NOLOGS', 1024, 'CONSISTENT', NULL) AS keep_options\\n\" +\"FROM db, bs\\n\" +\"WHERE db.db_key = bs.db_key\",//SQLUtils.toSQLString(stmt, JdbcConstants.ORACLE))",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_create_OracleCreateViewTest2.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 67,
        "lineEnd": 99,
        "lineMapIndex": 97,
        "methodParents": [],
        "nodeIndex": 246,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "String expected = \"SELECT lottery_notice_issue, lottery_notice_date, lottery_notice_result\\n\" +\"FROM tb_lottery_notice\\n\" +\"WHERE lottery_type_id = 8\\n\" +\"\\tAND lottery_notice_issue <= 2014066\\n\" +\"UNION ALL\\n\" +\"SELECT NULL, NULL, NULL, NULL, NULL\\n\" +\"\\t, NULL# and lottery_notice_issue>=2014062 order by lottery_notice_issue desc\"",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_mysql_SQLUtilsTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 43,
        "lineEnd": 49,
        "lineMapIndex": 98,
        "methodParents": [],
        "nodeIndex": 247,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "assertEquals(\"CREATE ALGORITHM = UNDEFINED\\n\" +\r\"\\tDEFINER = root\\n\" +\"\\tSQL SECURITY = DEFINER\\n\" +\"\\tVIEW view_audit_enroll\\n\" +\"AS\\n\" +\"SELECT a.enroll_id AS 'enrollId'\\n\" +\"\\t, CASE \\n\" +\"\\t\\tWHEN (\\n\" +\"\\t\\t\\tSELECT audit\\n\" +\"\\t\\t\\tFROM actvty_audit\\n\" +\"\\t\\t\\tWHERE enroll_id = a.enroll_id\\n\" +\"\\t\\t\\t\\tAND rankjurisdiction = 1\\n\" +\"\\t\\t) > 0 THEN '\u53bf\u7ad9\u5df2\u5ba1\u6838'\\n\" +\"\\t\\tELSE NULL\\n\" +\"\\tEND AS 'countyAudit'\\n\" +\"\\t, CASE \\n\" +\"\\t\\tWHEN (\\n\" +\"\\t\\t\\tSELECT audit\\n\" +\"\\t\\t\\tFROM actvty_audit\\n\" +\"\\t\\t\\tWHERE enroll_id = a.enroll_id\\n\" +\"\\t\\t\\t\\tAND rankjurisdiction = 2\\n\" +\"\\t\\t) > 0 THEN '\u5e02\u9986\u5df2\u5ba1\u6838'\\n\" +\"\\t\\tELSE NULL\\n\" +\"\\tEND AS 'cityAudit'\\n\" +\"\\t, CASE \\n\" +\"\\t\\tWHEN (\\n\" +\"\\t\\t\\tSELECT audit\\n\" +\"\\t\\t\\tFROM actvty_audit\\n\" +\"\\t\\t\\tWHERE enroll_id = a.enroll_id\\n\" +\"\\t\\t\\t\\tAND rankjurisdiction = 3\\n\" +\"\\t\\t) > 0 THEN '\u7701\u9986\u5df2\u5ba1\u6838'\\n\" +\"\\t\\tELSE NULL\\n\" +\"\\tEND AS 'provinceAudit'\\n\" +\"FROM actvty_audit a\\n\" +\"GROUP BY a.enroll_id\", //SQLUtils.toMySqlString(stmt))",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_mysql_create_MySqlCreateViewTest1.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 46,
        "lineEnd": 81,
        "lineMapIndex": 99,
        "methodParents": [],
        "nodeIndex": 248,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"create algorithm = UNDEFINED\\n\" +\r\"\\tdefiner = root\\n\" +\"\\tsql security = DEFINER\\n\" +\"\\tview view_audit_enroll\\n\" +\"as\\n\" +\"select a.enroll_id as 'enrollId'\\n\" +\"\\t, case \\n\" +\"\\t\\twhen (\\n\" +\"\\t\\t\\tselect audit\\n\" +\"\\t\\t\\tfrom actvty_audit\\n\" +\"\\t\\t\\twhere enroll_id = a.enroll_id\\n\" +\"\\t\\t\\t\\tand rankjurisdiction = 1\\n\" +\"\\t\\t) > 0 then '\u53bf\u7ad9\u5df2\u5ba1\u6838'\\n\" +\"\\t\\telse null\\n\" +\"\\tend as 'countyAudit'\\n\" +\"\\t, case \\n\" +\"\\t\\twhen (\\n\" +\"\\t\\t\\tselect audit\\n\" +\"\\t\\t\\tfrom actvty_audit\\n\" +\"\\t\\t\\twhere enroll_id = a.enroll_id\\n\" +\"\\t\\t\\t\\tand rankjurisdiction = 2\\n\" +\"\\t\\t) > 0 then '\u5e02\u9986\u5df2\u5ba1\u6838'\\n\" +\"\\t\\telse null\\n\" +\"\\tend as 'cityAudit'\\n\" +\"\\t, case \\n\" +\"\\t\\twhen (\\n\" +\"\\t\\t\\tselect audit\\n\" +\"\\t\\t\\tfrom actvty_audit\\n\" +\"\\t\\t\\twhere enroll_id = a.enroll_id\\n\" +\"\\t\\t\\t\\tand rankjurisdiction = 3\\n\" +\"\\t\\t) > 0 then '\u7701\u9986\u5df2\u5ba1\u6838'\\n\" +\"\\t\\telse null\\n\" +\"\\tend as 'provinceAudit'\\n\" +\"from actvty_audit a\\n\" +\"group by a.enroll_id\", //SQLUtils.toMySqlString(stmt, SQLUtils.DEFAULT_LCASE_FORMAT_OPTION))",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_mysql_create_MySqlCreateViewTest1.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 83,
        "lineEnd": 118,
        "lineMapIndex": 100,
        "methodParents": [],
        "nodeIndex": 249,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "SQLServerStatementParser parser = new SQLServerStatementParser(sql)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_sqlserver_SQLServerUpdateTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 45,
        "lineEnd": 45,
        "lineMapIndex": 102,
        "methodParents": [],
        "nodeIndex": 250,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "SQLStatement stmt = parser.parseStatementList().get(0)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_sqlserver_SQLServerUpdateTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 46,
        "lineEnd": 46,
        "lineMapIndex": 103,
        "methodParents": [],
        "nodeIndex": 251,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "String text = TestUtils.outputSqlServer(stmt)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_sqlserver_SQLServerUpdateTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 48,
        "lineEnd": 48,
        "lineMapIndex": 104,
        "methodParents": [],
        "nodeIndex": 252,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "assertEquals(\"UPDATE reg_student_charge_item\\n\" +\"SET FAmountReceived = b.amount\\n\" +\"FROM reg_student_charge_item a, (\\n\" +\"\\t\\tSELECT a.FId\\n\" +\"\\t\\t\\t, CASE \\n\" +\"\\t\\t\\t\\tWHEN SUM(b.FChargeAmount) IS NULL THEN 0\\n\" +\"\\t\\t\\t\\tELSE SUM(b.FChargeAmount)\\n\" +\"\\t\\t\\tEND AS amount\\n\" +\"\\t\\tFROM reg_student_charge_item a\\n\" +\"\\t\\t\\tLEFT JOIN reg_student_charge_daybook b ON a.FId = b.FChargeItemId\\n\" +\"\\t\\tWHERE a.FId = ?\\n\" +\"\\t\\tGROUP BY a.FId\\n\" +\"\\t) b\\n\" +\"WHERE a.FId = b.FId\\n\" +\"\\tAND a.FId = ?\", text)",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_sqlserver_SQLServerUpdateTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 50,
        "lineEnd": 64,
        "lineMapIndex": 101,
        "methodParents": [],
        "nodeIndex": 253,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "String expect = \"SELECT DECODE(GROUPING(department_name), 1, 'All Departments', department_name) AS department\\n\" +\r\"\\t, DECODE(GROUPING(job_id), 1, 'All Jobs', job_id) AS job\\n\" +\"\\t, COUNT(*) AS \\\"Total Empl\\\", AVG(salary) * 12 AS \\\"Average Sal\\\"\\n\" +\"FROM employees e, departments d\\n\" +\"WHERE d.department_id = e.department_id\\n\" +\"GROUP BY ROLLUP(department_name, job_id);\"",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_OracleFlashbackQueryTest3.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 33,
        "lineEnd": 38,
        "lineMapIndex": 106,
        "methodParents": [],
        "nodeIndex": 254,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"CREATE OR REPLACE VIEW \\\"SC_001\\\".\\\"TV_001\\\"\\n\" +\"(\\n\" +\"\\t\\\"ID\\\", \\n\" +\"\\t\\\"GMT_CREATE\\\", \\n\" +\"\\t\\\"CREATOR\\\", \\n\" +\"\\t\\\"GMT_MODIFIED\\\", \\n\" +\"\\t\\\"MODIFIER\\\", \\n\" +\"\\t\\\"IS_DELETED\\\", \\n\" +\"\\t\\\"CONTRACT_PARTY\\\", \\n\" +\"\\t\\\"COMPANY_NAME\\\", \\n\" +\"\\t\\\"PRODUCT_TYPE\\\", \\n\" +\"\\t\\\"PERIOD\\\", \\n\" +\"\\t\\\"JOIN\\\", \\n\" +\"\\t\\\"OVER\\\", \\n\" +\"\\t\\\"CONTRACT_TERM\\\", \\n\" +\"\\t\\\"CONTRACT_CASH\\\", \\n\" +\"\\t\\\"EXEC_CASH\\\", \\n\" +\"\\t\\\"CANCELED_CASH\\\", \\n\" +\"\\t\\\"RECEIVERD_CASH\\\", \\n\" +\"\\t\\\"O_S_CASH\\\", \\n\" +\"\\t\\\"REMARK\\\", \\n\" +\"\\t\\\"FENTAN_CHECK\\\", \\n\" +\"\\t\\\"TOTAL_CASH\\\", \\n\" +\"\\t\\\"NOT_CONFIRMED\\\", \\n\" +\"\\t\\\"PRE_RECEIVED\\\", \\n\" +\"\\t\\\"NOT_RECEIVED\\\", \\n\" +\"\\t\\\"CONTRACT_DATE\\\", \\n\" +\"\\t\\\"OWNER_1\\\", \\n\" +\"\\t\\\"AREA_ID_1\\\", \\n\" +\"\\t\\\"FIRST_OWNER\\\", \\n\" +\"\\t\\\"FIRST_AREA_ID\\\", \\n\" +\"\\t\\\"CONTRACT_ID\\\", \\n\" +\"\\t\\\"IS_RENEW_UPGRADE\\\", \\n\" +\"\\t\\\"CATEGORY_ID_1\\\", \\n\" +\"\\t\\\"CATEGORY_ID_2\\\", \\n\" +\"\\t\\\"FIRST_RECEIPT_DATE\\\", \\n\" +\"\\t\\\"RECEIPT_REMARK\\\", \\n\" +\"\\t\\\"CONTRACT_SERIAL\\\", \\n\" +\"\\t\\\"IS_MERGED\\\"\\n\" +\")\\n\" +\"AS\\n\" +\"SELECT ID, GMT_CREATE, utl_raw.cast_to_raw(CREATOR) AS CREATOR, GMT_MODIFIED\\n\" +\"\\t, utl_raw.cast_to_raw(MODIFIER) AS MODIFIER, IS_DELETED, utl_raw.cast_to_raw(CONTRACT_PARTY) AS CONTRACT_PARTY\\n\" +\"\\t, utl_raw.cast_to_raw(COMPANY_NAME) AS COMPANY_NAME, utl_raw.cast_to_raw(PRODUCT_TYPE) AS PRODUCT_TYPE\\n\" +\"\\t, utl_raw.cast_to_raw(PERIOD) AS PERIOD, JOIN, OVER, CONTRACT_TERM\\n\" +\"\\t, CONTRACT_CASH, EXEC_CASH, CANCELED_CASH, RECEIVERD_CASH, O_S_CASH\\n\" +\"\\t, utl_raw.cast_to_raw(REMARK) AS REMARK, FENTAN_CHECK, TOTAL_CASH, NOT_CONFIRMED\\n\" +\"\\t, PRE_RECEIVED, NOT_RECEIVED, CONTRACT_DATE, utl_raw.cast_to_raw(OWNER_1) AS OWNER_1\\n\" +\"\\t, AREA_ID_1, utl_raw.cast_to_raw(FIRST_OWNER) AS FIRST_OWNER, FIRST_AREA_ID\\n\" +\"\\t, utl_raw.cast_to_raw(CONTRACT_ID) AS CONTRACT_ID, utl_raw.cast_to_raw(IS_RENEW_UPGRADE) AS IS_RENEW_UPGRADE, CATEGORY_ID_1\\n\" +\"\\t, CATEGORY_ID_2, FIRST_RECEIPT_DATE, utl_raw.cast_to_raw(RECEIPT_REMARK) AS RECEIPT_REMARK\\n\" +\"\\t, utl_raw.cast_to_raw(CONTRACT_SERIAL) AS CONTRACT_SERIAL, IS_MERGED\\n\" +\"FROM TB_002\",//SQLUtils.toSQLString(stmt, JdbcConstants.ORACLE))",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_create_OracleCreateViewTest6.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 81,
        "lineEnd": 134,
        "lineMapIndex": 107,
        "methodParents": [],
        "nodeIndex": 255,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "Assert.assertEquals(\"CREATE OR REPLACE VIEW \\\"SC_001\\\".\\\"V_001\\\"\\n\" +\"(\\n\" +\"\\t\\\"OBJ_OWNER\\\", \\n\" +\"\\t\\\"OBJ_NAME\\\", \\n\" +\"\\t\\\"OBJ_TYPE\\\", \\n\" +\"\\t\\\"OBJ_ROWID\\\", \\n\" +\"\\t\\\"DB_USER\\\", \\n\" +\"\\t\\\"SID\\\", \\n\" +\"\\t\\\"LOCK_TYPE\\\", \\n\" +\"\\t\\\"ROW_WAIT_FILE#\\\", \\n\" +\"\\t\\\"ROW_WAIT_BLOCK#\\\", \\n\" +\"\\t\\\"ROW_WAIT_ROW#\\\"\\n\" +\")\\n\" +\"AS\\n\" +\"SELECT owner AS obj_owner, object_name AS obj_name, object_type AS obj_type\\n\" +\"\\t, dbms_rowid.rowid_create(1, row_wait_obj#, ROW_WAIT_FILE#, ROW_WAIT_BLOCK#, ROW_WAIT_ROW#) AS obj_rowid\\n\" +\"\\t, a.username AS db_user, a.SID AS SID, a.TYPE AS lock_type, a.row_wait_file#, a.row_wait_block#\\n\" +\"\\t, a.row_wait_row#\\n\" +\"FROM TB_001, (\\n\" +\"\\tSELECT /*+ no_merge(a) no_merge(b) */ a.username, a.SID, a.row_wait_obj#, a.ROW_WAIT_FILE#, a.ROW_WAIT_BLOCK#\\n\" +\"\\t\\t, a.ROW_WAIT_ROW#, b.TYPE\\n\" +\"\\tFROM sys.V_$SESSION a, sys.V_$LOCK b\\n\" +\"\\tWHERE a.username IS NOT NULL\\n\" +\"\\t\\tAND a.row_wait_obj# <> -1\\n\" +\"\\t\\tAND a.SID = b.SID\\n\" +\"\\t\\tAND b.TYPE IN ('TX', 'TM')\\n\" +\") a\\n\" +\"WHERE object_id = a.row_wait_obj#\",//SQLUtils.toSQLString(stmt, JdbcConstants.ORACLE))",
        "dfgs": [],
        "fName": "src_test_java_com_alibaba_druid_bvt_sql_oracle_create_OracleCreateViewTest4.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 60,
        "lineEnd": 88,
        "lineMapIndex": 108,
        "methodParents": [],
        "nodeIndex": 256,
        "rootcause": false,
        "commits": []
    }
]