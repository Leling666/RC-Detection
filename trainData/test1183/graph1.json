[{"cfgs": [], "code": "import org.junit.Ignore", "dfgs": [], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 10, "lineEnd": 10, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 0, "rootcause": false, "commits": []}, {"cfgs": [], "code": "import static com.cronutils.model.field.expression.FieldExpression.always", "dfgs": [], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 16, "lineEnd": 16, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 1, "rootcause": false, "commits": []}, {"cfgs": [], "code": "public void testDaylightSavingOverlapMinuteNextRun() ", "dfgs": [], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 66, "lineEnd": 66, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 2, "rootcause": false, "commits": []}, {"cfgs": [4], "code": "LocalDateTime daylightSaving2020 = LocalDateTime.of(2020, 10, 25, 1, 10)", "dfgs": [4], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 69, "lineEnd": 69, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 3, "rootcause": false, "commits": []}, {"cfgs": [5], "code": "Clock clock = Clock.fixed(daylightSaving2020.toInstant(ZoneOffset.ofHours(2)),ZoneId.of(\"Europe/Rome\"))", "dfgs": [5, 14], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 70, "lineEnd": 70, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 4, "rootcause": false, "commits": []}, {"cfgs": [6], "code": "ZonedDateTime daylightSaving2020InLocalTimezone = ZonedDateTime.now(clock)", "dfgs": [6, 7], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 71, "lineEnd": 71, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 5, "rootcause": false, "commits": []}, {"cfgs": [7], "code": "System.out.println(\"\\nnow: \" + daylightSaving2020InLocalTimezone)", "dfgs": [], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 72, "lineEnd": 72, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 6, "rootcause": false, "commits": []}, {"cfgs": [8], "code": "Cron cron = getEvery30Minute(daylightSaving2020InLocalTimezone).instance()", "dfgs": [8], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 73, "lineEnd": 73, "lineMapIndex": -1, "methodParents": [66], "nodeIndex": 7, "rootcause": false, "commits": []}, {"cfgs": [9], "code": "ZonedDateTime nextRun = nextRun(cron, daylightSaving2020InLocalTimezone)", "dfgs": [9, 11], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 75, "lineEnd": 75, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 8, "rootcause": false, "commits": []}, {"cfgs": [10], "code": "Assert.assertEquals(40, nextRun.getMinute())", "dfgs": [10], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 76, "lineEnd": 76, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 9, "rootcause": false, "commits": []}, {"cfgs": [11], "code": "Assert.assertEquals(1, nextRun.getHour())", "dfgs": [12, 11], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 77, "lineEnd": 77, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 10, "rootcause": false, "commits": []}, {"cfgs": [12], "code": "nextRun = nextRun(cron, nextRun)", "dfgs": [12, 15], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 78, "lineEnd": 78, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 11, "rootcause": false, "commits": []}, {"cfgs": [13], "code": "Assert.assertEquals(10, nextRun.getMinute())", "dfgs": [13], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 79, "lineEnd": 79, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 12, "rootcause": false, "commits": []}, {"cfgs": [14], "code": "Assert.assertEquals(2, nextRun.getHour())", "dfgs": [14], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 80, "lineEnd": 80, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 13, "rootcause": false, "commits": []}, {"cfgs": [15], "code": "Assert.assertEquals(ZoneOffset.ofHours(2), nextRun.getOffset())", "dfgs": [16, 15, 18], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 81, "lineEnd": 81, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 14, "rootcause": false, "commits": []}, {"cfgs": [16], "code": "nextRun = nextRun(cron, nextRun)", "dfgs": [16, 19], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 82, "lineEnd": 82, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 15, "rootcause": false, "commits": []}, {"cfgs": [17], "code": "Assert.assertEquals(40, nextRun.getMinute())", "dfgs": [17], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 83, "lineEnd": 83, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 16, "rootcause": false, "commits": []}, {"cfgs": [18], "code": "Assert.assertEquals(2, nextRun.getHour())", "dfgs": [18], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 84, "lineEnd": 84, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 17, "rootcause": false, "commits": []}, {"cfgs": [19], "code": "Assert.assertEquals(ZoneOffset.ofHours(2), nextRun.getOffset())", "dfgs": [20, 19, 22], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 85, "lineEnd": 85, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 18, "rootcause": false, "commits": []}, {"cfgs": [20], "code": "nextRun = nextRun(cron, nextRun)", "dfgs": [20, 23], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 86, "lineEnd": 86, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 19, "rootcause": false, "commits": []}, {"cfgs": [21], "code": "Assert.assertEquals(10, nextRun.getMinute())", "dfgs": [21], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 87, "lineEnd": 87, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 20, "rootcause": false, "commits": []}, {"cfgs": [22], "code": "Assert.assertEquals(2, nextRun.getHour())", "dfgs": [22], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 88, "lineEnd": 88, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 21, "rootcause": false, "commits": []}, {"cfgs": [23], "code": "Assert.assertEquals(ZoneOffset.ofHours(1), nextRun.getOffset())", "dfgs": [24, 23, 26], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 89, "lineEnd": 89, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 22, "rootcause": false, "commits": []}, {"cfgs": [24], "code": "nextRun = nextRun(cron, nextRun)", "dfgs": [24, 27], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 90, "lineEnd": 90, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 23, "rootcause": false, "commits": []}, {"cfgs": [25], "code": "Assert.assertEquals(40, nextRun.getMinute())", "dfgs": [25], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 91, "lineEnd": 91, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 24, "rootcause": false, "commits": []}, {"cfgs": [26], "code": "Assert.assertEquals(2, nextRun.getHour())", "dfgs": [26], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 92, "lineEnd": 92, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 25, "rootcause": false, "commits": []}, {"cfgs": [27], "code": "Assert.assertEquals(ZoneOffset.ofHours(1), nextRun.getOffset())", "dfgs": [28, 27], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 93, "lineEnd": 93, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 26, "rootcause": false, "commits": []}, {"cfgs": [28], "code": "nextRun = nextRun(cron, nextRun)", "dfgs": [28, 30], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 94, "lineEnd": 94, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 27, "rootcause": false, "commits": []}, {"cfgs": [29], "code": "Assert.assertEquals(10, nextRun.getMinute())", "dfgs": [29], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 95, "lineEnd": 95, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 28, "rootcause": false, "commits": []}, {"cfgs": [30], "code": "Assert.assertEquals(3, nextRun.getHour())", "dfgs": [31, 30], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 96, "lineEnd": 96, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 29, "rootcause": false, "commits": []}, {"cfgs": [31], "code": "nextRun = nextRun(cron, nextRun)", "dfgs": [31], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 97, "lineEnd": 97, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 30, "rootcause": false, "commits": []}, {"cfgs": [32], "code": "Assert.assertEquals(40, nextRun.getMinute())", "dfgs": [32], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 98, "lineEnd": 98, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 31, "rootcause": false, "commits": []}, {"cfgs": [], "code": "Assert.assertEquals(3, nextRun.getHour())", "dfgs": [], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 99, "lineEnd": 99, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 32, "rootcause": false, "commits": []}, {"cfgs": [], "code": "public void testDaylightSavingOverlapHourNextRun() ", "dfgs": [], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 105, "lineEnd": 105, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 33, "rootcause": false, "commits": []}, {"cfgs": [35], "code": "LocalDateTime startDay = LocalDateTime.of(2020, 10, 24, 1, 0)", "dfgs": [47, 35], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 107, "lineEnd": 107, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 34, "rootcause": false, "commits": []}, {"cfgs": [36], "code": "Clock clock = Clock.fixed(startDay.toInstant(ZoneOffset.ofHours(2)),ZoneId.of(\"Europe/Rome\"))", "dfgs": [36, 42, 48], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 108, "lineEnd": 108, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 35, "rootcause": false, "commits": []}, {"cfgs": [37], "code": "ZonedDateTime daylightSaving2020InLocalTimezone = ZonedDateTime.now(clock)", "dfgs": [37, 49, 38], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 109, "lineEnd": 109, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 36, "rootcause": false, "commits": []}, {"cfgs": [38], "code": "System.out.println(\"\\nnow: \" + daylightSaving2020InLocalTimezone)", "dfgs": [50], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 110, "lineEnd": 110, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 37, "rootcause": false, "commits": []}, {"cfgs": [39], "code": "Cron cron = getEveryHour(daylightSaving2020InLocalTimezone).instance()", "dfgs": [39], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 111, "lineEnd": 111, "lineMapIndex": -1, "methodParents": [64], "nodeIndex": 38, "rootcause": false, "commits": []}, {"cfgs": [40], "code": "ZonedDateTime nextRun = nextRun(cron, daylightSaving2020InLocalTimezone)", "dfgs": [40, 43], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 113, "lineEnd": 113, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 39, "rootcause": false, "commits": []}, {"cfgs": [41], "code": "Assert.assertEquals(0, nextRun.getMinute())", "dfgs": [41], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 114, "lineEnd": 114, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 40, "rootcause": false, "commits": []}, {"cfgs": [42], "code": "Assert.assertEquals(2, nextRun.getHour())", "dfgs": [42], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 115, "lineEnd": 115, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 41, "rootcause": false, "commits": []}, {"cfgs": [43], "code": "Assert.assertEquals(ZoneOffset.ofHours(2), nextRun.getOffset())", "dfgs": [44, 43, 46], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 116, "lineEnd": 116, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 42, "rootcause": false, "commits": []}, {"cfgs": [44], "code": "nextRun = nextRun(cron, nextRun)", "dfgs": [44, 52], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 117, "lineEnd": 117, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 43, "rootcause": false, "commits": []}, {"cfgs": [45], "code": "Assert.assertEquals(0, nextRun.getMinute())", "dfgs": [45], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 118, "lineEnd": 118, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 44, "rootcause": false, "commits": []}, {"cfgs": [46], "code": "Assert.assertEquals(3, nextRun.getHour())", "dfgs": [46], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 119, "lineEnd": 119, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 45, "rootcause": false, "commits": []}, {"cfgs": [47], "code": "Assert.assertEquals(ZoneOffset.ofHours(2), nextRun.getOffset())", "dfgs": [53, 48], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 120, "lineEnd": 120, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 46, "rootcause": false, "commits": []}, {"cfgs": [48], "code": "startDay = LocalDateTime.of(2020, 10, 25, 1, 0)", "dfgs": [48], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 122, "lineEnd": 122, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 47, "rootcause": false, "commits": []}, {"cfgs": [49], "code": "clock = Clock.fixed(startDay.toInstant(ZoneOffset.ofHours(2)),ZoneId.of(\"Europe/Rome\"))", "dfgs": [49, 55], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 123, "lineEnd": 123, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 48, "rootcause": false, "commits": []}, {"cfgs": [50], "code": "daylightSaving2020InLocalTimezone = ZonedDateTime.now(clock)", "dfgs": [50, 51], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 124, "lineEnd": 124, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 49, "rootcause": false, "commits": []}, {"cfgs": [51], "code": "System.out.println(\"\\nnow: \" + daylightSaving2020InLocalTimezone)", "dfgs": [], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 125, "lineEnd": 125, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 50, "rootcause": false, "commits": []}, {"cfgs": [52], "code": "cron = getEveryHour(daylightSaving2020InLocalTimezone).instance()", "dfgs": [52], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 126, "lineEnd": 126, "lineMapIndex": -1, "methodParents": [64], "nodeIndex": 51, "rootcause": false, "commits": []}, {"cfgs": [53], "code": "nextRun = nextRun(cron, daylightSaving2020InLocalTimezone)", "dfgs": [53, 56], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 128, "lineEnd": 128, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 52, "rootcause": false, "commits": []}, {"cfgs": [54], "code": "Assert.assertEquals(0, nextRun.getMinute())", "dfgs": [54], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 129, "lineEnd": 129, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 53, "rootcause": false, "commits": []}, {"cfgs": [55], "code": "Assert.assertEquals(2, nextRun.getHour())", "dfgs": [55], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 130, "lineEnd": 130, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 54, "rootcause": false, "commits": []}, {"cfgs": [56], "code": "Assert.assertEquals(ZoneOffset.ofHours(2), nextRun.getOffset())", "dfgs": [57, 56, 59], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 131, "lineEnd": 131, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 55, "rootcause": false, "commits": []}, {"cfgs": [57], "code": "nextRun = nextRun(cron, nextRun)", "dfgs": [57, 60], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 132, "lineEnd": 132, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 56, "rootcause": false, "commits": []}, {"cfgs": [58], "code": "Assert.assertEquals(0, nextRun.getMinute())", "dfgs": [58], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 133, "lineEnd": 133, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 57, "rootcause": false, "commits": []}, {"cfgs": [59], "code": "Assert.assertEquals(2, nextRun.getHour())", "dfgs": [59], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 134, "lineEnd": 134, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 58, "rootcause": false, "commits": []}, {"cfgs": [60], "code": "Assert.assertEquals(ZoneOffset.ofHours(1), nextRun.getOffset())", "dfgs": [61, 60, 63], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 135, "lineEnd": 135, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 59, "rootcause": false, "commits": []}, {"cfgs": [61], "code": "nextRun = nextRun(cron, nextRun)", "dfgs": [61], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 136, "lineEnd": 136, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 60, "rootcause": false, "commits": []}, {"cfgs": [62], "code": "Assert.assertEquals(0, nextRun.getMinute())", "dfgs": [62], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 137, "lineEnd": 137, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 61, "rootcause": false, "commits": []}, {"cfgs": [63], "code": "Assert.assertEquals(3, nextRun.getHour())", "dfgs": [63], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 138, "lineEnd": 138, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 62, "rootcause": false, "commits": []}, {"cfgs": [], "code": "Assert.assertEquals(ZoneOffset.ofHours(1), nextRun.getOffset())", "dfgs": [], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 139, "lineEnd": 139, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 63, "rootcause": false, "commits": []}, {"cfgs": [65], "code": "public static CronBuilder getEveryHour(ZonedDateTime now) ", "dfgs": [65], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 144, "lineEnd": 144, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 64, "rootcause": false, "commits": []}, {"cfgs": [], "code": "return CronBuilder.cron(definition).withMinute(on(now.getMinute())).withHour(every(on(now.getHour()),1)).withDoW(questionMark()).withDoM(on(now.getDayOfMonth())).withDoY(questionMark()).withMonth(on(now.getMonthValue()))", "dfgs": [], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 145, "lineEnd": 151, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 65, "rootcause": false, "commits": []}, {"cfgs": [67], "code": "public static CronBuilder getEvery30Minute(ZonedDateTime now) ", "dfgs": [67], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 154, "lineEnd": 154, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 66, "rootcause": false, "commits": []}, {"cfgs": [], "code": "return CronBuilder.cron(definition).withMinute(every(on(now.getMinute()),30)).withHour(always()).withDoW(questionMark()).withDoM(on(now.getDayOfMonth())).withDoY(questionMark()).withMonth(on(now.getMonthValue()))", "dfgs": [], "fName": "src_test_java_com_cronutils_Issue446Test.java", "fieldParents": [], "isDel": false, "lineBeg": 155, "lineEnd": 161, "lineMapIndex": -1, "methodParents": [], "nodeIndex": 67, "rootcause": false, "commits": []}]