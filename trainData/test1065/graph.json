[{"cfgs":[],"code":"final int argc =(lastToken == null || lastToken.getType() == Token.TOKEN_OPERATOR || lastToken.getType() == Token.TOKEN_PARENTHESES_OPEN)? 1 : 2","dfgs":[],"fName":"src_main_java_net_objecthunter_exp4j_tokenizer_Tokenizer.java","fieldParents":[],"isDel":true,"lineBeg":212,"lineEnd":214,"lineMapIndex":1,"methodParents":[],"nodeIndex":0},{"cfgs":[],"code":"final int argc =(lastToken == null ||lastToken.getType() == Token.TOKEN_OPERATOR ||lastToken.getType() == Token.TOKEN_PARENTHESES_OPEN ||lastToken.getType() == Token.TOKEN_SEPARATOR)? 1 : 2","dfgs":[],"fName":"src_main_java_net_objecthunter_exp4j_tokenizer_Tokenizer.java","fieldParents":[],"isDel":false,"lineBeg":212,"lineEnd":217,"lineMapIndex":0,"methodParents":[],"nodeIndex":1},{"cfgs":[],"code":"public void testSecondArgumentNegative() throws Exception ","dfgs":[],"fName":"src_test_java_net_objecthunter_exp4j_ExpressionBuilderTest.java","fieldParents":[],"isDel":false,"lineBeg":2519,"lineEnd":2519,"lineMapIndex":-1,"methodParents":[],"nodeIndex":2},{"cfgs":[4],"code":"Function round = new Function(\"MULTIPLY\", 2) {@Overridepublic double apply(double... args) {return Math.round(args[0] * args[1]);}}","dfgs":[4],"fName":"src_test_java_net_objecthunter_exp4j_ExpressionBuilderTest.java","fieldParents":[],"isDel":false,"lineBeg":2520,"lineEnd":2525,"lineMapIndex":-1,"methodParents":[],"nodeIndex":3},{"cfgs":[5],"code":"double result = new ExpressionBuilder(\"MULTIPLY(2,-1)\").function(round).build().evaluate()","dfgs":[5],"fName":"src_test_java_net_objecthunter_exp4j_ExpressionBuilderTest.java","fieldParents":[],"isDel":false,"lineBeg":2526,"lineEnd":2529,"lineMapIndex":-1,"methodParents":[],"nodeIndex":4},{"cfgs":[],"code":"assertEquals(-2d, result, 0d)","dfgs":[],"fName":"src_test_java_net_objecthunter_exp4j_ExpressionBuilderTest.java","fieldParents":[],"isDel":false,"lineBeg":2530,"lineEnd":2530,"lineMapIndex":-1,"methodParents":[],"nodeIndex":5}]