[{"cfgs":[],"code":"if (Math.abs(u) <= 1 || Math.abs(v) <= 1)","dfgs":[],"fName":"src_main_java_org_apache_commons_lang3_math_Fraction.java","fieldParents":[],"isDel":true,"lineBeg":583,"lineEnd":583,"lineMapIndex":5,"methodParents":[],"nodeIndex":0},{"cfgs":[2,5],"code":"if ((u == 0) || (v == 0))","dfgs":[5,2,4],"fName":"src_main_java_org_apache_commons_lang3_math_Fraction.java","fieldParents":[],"isDel":false,"lineBeg":583,"lineEnd":583,"lineMapIndex":-1,"methodParents":[],"nodeIndex":1},{"cfgs":[3,4],"code":"if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE))","dfgs":[4],"fName":"src_main_java_org_apache_commons_lang3_math_Fraction.java","fieldParents":[],"isDel":false,"lineBeg":584,"lineEnd":584,"lineMapIndex":-1,"methodParents":[],"nodeIndex":2},{"cfgs":[4],"code":"throw new ArithmeticException(\"overflow: gcd is 2^31\")","dfgs":[],"fName":"src_main_java_org_apache_commons_lang3_math_Fraction.java","fieldParents":[],"isDel":false,"lineBeg":585,"lineEnd":585,"lineMapIndex":-1,"methodParents":[],"nodeIndex":3},{"cfgs":[],"code":"return Math.abs(u) + Math.abs(v)","dfgs":[],"fName":"src_main_java_org_apache_commons_lang3_math_Fraction.java","fieldParents":[],"isDel":false,"lineBeg":587,"lineEnd":587,"lineMapIndex":-1,"methodParents":[],"nodeIndex":4},{"cfgs":[],"code":"if (Math.abs(u) == 1 || Math.abs(v) == 1)","dfgs":[],"fName":"src_main_java_org_apache_commons_lang3_math_Fraction.java","fieldParents":[],"isDel":false,"lineBeg":590,"lineEnd":590,"lineMapIndex":0,"methodParents":[],"nodeIndex":5},{"cfgs":[],"code":"f = Fraction.getReducedFraction(Integer.MIN_VALUE, 2)","dfgs":[],"fName":"src_test_java_org_apache_commons_lang3_math_FractionTest.java","fieldParents":[],"isDel":false,"lineBeg":335,"lineEnd":335,"lineMapIndex":-1,"methodParents":[],"nodeIndex":6},{"cfgs":[],"code":"assertEquals(Integer.MIN_VALUE / 2, f.getNumerator())","dfgs":[],"fName":"src_test_java_org_apache_commons_lang3_math_FractionTest.java","fieldParents":[],"isDel":false,"lineBeg":336,"lineEnd":336,"lineMapIndex":-1,"methodParents":[],"nodeIndex":7},{"cfgs":[],"code":"assertEquals(1, f.getDenominator())","dfgs":[],"fName":"src_test_java_org_apache_commons_lang3_math_FractionTest.java","fieldParents":[],"isDel":false,"lineBeg":337,"lineEnd":337,"lineMapIndex":-1,"methodParents":[],"nodeIndex":8},{"cfgs":[10],"code":"f = Fraction.getFraction(Integer.MIN_VALUE, 2)","dfgs":[10,11],"fName":"src_test_java_org_apache_commons_lang3_math_FractionTest.java","fieldParents":[],"isDel":false,"lineBeg":652,"lineEnd":652,"lineMapIndex":-1,"methodParents":[],"nodeIndex":9},{"cfgs":[11],"code":"result = f.reduce()","dfgs":[11],"fName":"src_test_java_org_apache_commons_lang3_math_FractionTest.java","fieldParents":[],"isDel":false,"lineBeg":653,"lineEnd":653,"lineMapIndex":-1,"methodParents":[],"nodeIndex":10},{"cfgs":[12],"code":"assertEquals(Integer.MIN_VALUE / 2, result.getNumerator())","dfgs":[12],"fName":"src_test_java_org_apache_commons_lang3_math_FractionTest.java","fieldParents":[],"isDel":false,"lineBeg":654,"lineEnd":654,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[],"code":"assertEquals(1, result.getDenominator())","dfgs":[],"fName":"src_test_java_org_apache_commons_lang3_math_FractionTest.java","fieldParents":[],"isDel":false,"lineBeg":655,"lineEnd":655,"lineMapIndex":-1,"methodParents":[],"nodeIndex":12}]