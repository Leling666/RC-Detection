[{"cfgs":[],"code":"assertEquals(expected,((CreateTableAsSelectNode) queryExecutionPlan.root.getExecutableNodeBaseDependent(0).getExecutableNodeBaseDependent(0)).selectQuery)","dfgs":[],"fName":"src_test_java_org_verdictdb_core_querying_TpchAyncExecutionPlanTest.java","fieldParents":[],"isDel":true,"lineBeg":1430,"lineEnd":1432,"lineMapIndex":13,"methodParents":[],"nodeIndex":0},{"cfgs":[],"code":"String sql = \"select\\n\" +\"  s_name,\\n\" +\"  count(1) as numwait\\n\" +\"from (\\n\" +\"  select s_name from (\\n\" +\"    select\\n\" +\"      s_name,\\n\" +\"      t2.l_orderkey,\\n\" +\"      l_suppkey,\\n\" +\"      count_suppkey,\\n\" +\"      max_suppkey\\n\" +\"    from\\n\" +\"      (select\\n\" +\"  l_orderkey,\\n\" +\"  count(l_suppkey) count_suppkey,\\n\" +\"  max(l_suppkey) as max_suppkey\\n\" +\"from\\n\" +\"  lineitem_scrambled\\n\" +\"where\\n\" +\"  l_receiptdate > l_commitdate\\n\" +\"  and l_orderkey is not null\\n\" +\"group by\\n\" +\"  l_orderkey) as t2 right outer join (\\n\" +\"      select\\n\" +\"        s_name as s_name,\\n\" +\"        l_orderkey,\\n\" +\"        l_suppkey from (\\n\" +\"        select\\n\" +\"          s_name as s_name,\\n\" +\"          t1.l_orderkey,\\n\" +\"          l_suppkey,\\n\" +\"          count_suppkey,\\n\" +\"          max_suppkey\\n\" +\"        from\\n\" +\"          (select\\n\" +\"             l_orderkey,\\n\" +\"             count(l_suppkey) as count_suppkey,\\n\" +\"             max(l_suppkey) as max_suppkey\\n\" +\"           from\\n\" +\"             lineitem_scrambled\\n\" +\"           where\\n\" +\"             l_orderkey is not null\\n\" +\"           group by\\n\" +\"             l_orderkey) as t1 join \"+ \"        (select\\n\" +\"             s_name,\\n\" +\"             l_orderkey,\\n\" +\"             l_suppkey\\n\" +\"           from\\n\" +\"             orders_scrambled o join \"+ \"        (select\\n\" +\"             s_name,\\n\" +\"             l_orderkey,\\n\" +\"             l_suppkey\\n\" +\"           from\\n\" +\"             nation n join supplier s\\n\" +\"             on s.s_nationkey = n.n_nationkey\\n\" +\"                and n.n_name = 'SAUDI ARABIA'\\n\" +\"             join lineitem_scrambled l\\n\" +\"             on s.s_suppkey = l.l_suppkey\\n\" +\"           where\\n\" +\"             l.l_receiptdate > l.l_commitdate\\n\" +\"             and l.l_orderkey is not null\\n\" +\"            ) l1 on o.o_orderkey = l1.l_orderkey and o.o_orderstatus = 'F'\\n\" +\"          ) l2 on l2.l_orderkey = t1.l_orderkey\\n\" +\"        ) a\\n\" +\"      where\\n\" +\"        (count_suppkey > 1)\\n\" +\"        or ((count_suppkey=1)\\n\" +\"        and (l_suppkey <> max_suppkey))\\n\" +\"    ) l3 on l3.l_orderkey = t2.l_orderkey\\n\" +\"  ) b\\n\" +\"  where\\n\" +\"    (count_suppkey is null)\\n\" +\"    or ((count_suppkey=1)\\n\" +\"    and (l_suppkey = max_suppkey))\\n\" +\") c\\n\" +\"group by\\n\" +\"  s_name\\n\" +\"order by\\n\" +\"  numwait desc,\\n\" +\"  s_name \\n\" +\"limit 100;\"","dfgs":[],"fName":"src_test_java_org_verdictdb_core_querying_TpchAyncExecutionPlanTest.java","fieldParents":[],"isDel":true,"lineBeg":2051,"lineEnd":2133,"lineMapIndex":14,"methodParents":[],"nodeIndex":1},{"cfgs":[],"code":"to.selectQuery = from.selectQuery","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_QueryNodeBase.java","fieldParents":[],"isDel":true,"lineBeg":38,"lineEnd":38,"lineMapIndex":16,"methodParents":[],"nodeIndex":2},{"cfgs":[4],"code":"int channel = a.getRight()","dfgs":[4],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":true,"lineBeg":113,"lineEnd":113,"lineMapIndex":20,"methodParents":[],"nodeIndex":3},{"cfgs":[],"code":"channels.get(channel).add(token)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":true,"lineBeg":115,"lineEnd":115,"lineMapIndex":21,"methodParents":[],"nodeIndex":4},{"cfgs":[],"code":"for (Pair<ExecutableNodeBase, Integer> s : sources)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":true,"lineBeg":152,"lineEnd":152,"lineMapIndex":25,"methodParents":[],"nodeIndex":5},{"cfgs":[],"code":"to.channels = new TreeMap<>(from.channels)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":true,"lineBeg":205,"lineEnd":205,"lineMapIndex":26,"methodParents":[],"nodeIndex":6},{"cfgs":[],"code":"return new EqualsBuilder().appendSuper(super.equals(obj)).append(uniqueId, rhs.uniqueId).isEquals()","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":true,"lineBeg":238,"lineEnd":241,"lineMapIndex":29,"methodParents":[],"nodeIndex":7},{"cfgs":[],"code":"return new ToStringBuilder(this, ToStringStyle.DEFAULT_STYLE).append(\"subscriberCount\", subscribers.size()).append(\"sources\", sources)//        .append(\"channels\", channels)//        .append(\"channels\", channels).toString()","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":true,"lineBeg":246,"lineEnd":251,"lineMapIndex":30,"methodParents":[8],"nodeIndex":8},{"cfgs":[],"code":"System.out.println(new ToStringBuilder(node, ToStringStyle.DEFAULT_STYLE) + \"sucess count: \" + successSourceCount)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_execution_ExecutableNodeRunner.java","fieldParents":[],"isDel":true,"lineBeg":83,"lineEnd":83,"lineMapIndex":33,"methodParents":[],"nodeIndex":9},{"cfgs":[],"code":"System.out.println(\"runTillEnd: \" + token)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_execution_ExecutablePlanRunner.java","fieldParents":[],"isDel":true,"lineBeg":35,"lineEnd":35,"lineMapIndex":-1,"methodParents":[],"nodeIndex":10},{"cfgs":[],"code":"System.out.println(\"Submitting: \" + node)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_execution_ExecutablePlanRunner.java","fieldParents":[],"isDel":true,"lineBeg":71,"lineEnd":71,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[],"code":"queryExecutionPlan.getRootNode().print()","dfgs":[],"fName":"src_test_java_org_verdictdb_core_querying_TpchAyncExecutionPlanTest.java","fieldParents":[],"isDel":false,"lineBeg":726,"lineEnd":726,"lineMapIndex":-1,"methodParents":[],"nodeIndex":12},{"cfgs":[],"code":"assertEquals(expected,((CreateTableAsSelectNode) queryExecutionPlan.root.getExecutableNodeBaseDependent(0).getExecutableNodeBaseDependent(0)).getSelectQuery())","dfgs":[],"fName":"src_test_java_org_verdictdb_core_querying_TpchAyncExecutionPlanTest.java","fieldParents":[],"isDel":false,"lineBeg":1430,"lineEnd":1435,"lineMapIndex":0,"methodParents":[],"nodeIndex":13},{"cfgs":[15],"code":"String sql = \"select s_name, count(1) as numwait\\n\" +\"from (\" +\"  select s_name \" +\"  from (\" +\"    select s_name, t2.l_orderkey, l_suppkey, count_suppkey, max_suppkey\\n\" +\"    from (\" +\"      select l_orderkey, count(l_suppkey) count_suppkey, max(l_suppkey) as max_suppkey\\n\" +\"      from lineitem_scrambled\\n\" +\"      where l_receiptdate > l_commitdate and l_orderkey is not null\\n\" +\"      group by l_orderkey) as t2\" +\"    right outer join (\" +\"      select s_name as s_name, l_orderkey, l_suppkey \" +\"      from (\" +\"        select s_name as s_name, t1.l_orderkey, l_suppkey, count_suppkey, max_suppkey\\n\" +\"        from (\" +\"          select l_orderkey, count(l_suppkey) as count_suppkey, max(l_suppkey) as max_suppkey\\n\" +\"          from lineitem_scrambled\\n\" +\"          where l_orderkey is not null\\n\" +\"          group by l_orderkey) as t1 \" +\"          join (\" +\"          select s_name, l_orderkey, l_suppkey\\n\" +\"          from orders_scrambled o join (\" +\"            select s_name, l_orderkey, l_suppkey\\n\" +\"            from nation n join supplier s\\n\" +\"              on s.s_nationkey = n.n_nationkey and n.n_name = 'SAUDI ARABIA'\\n\" +\"            join lineitem_scrambled l on s.s_suppkey = l.l_suppkey\\n\" +\"          where l.l_receiptdate > l.l_commitdate\\n\" +\"            and l.l_orderkey is not null) l1 \"+ \"        on o.o_orderkey = l1.l_orderkey and o.o_orderstatus = 'F'\\n\" +\"          ) l2 on l2.l_orderkey = t1.l_orderkey\\n\" +\"        ) a\\n\" +\"      where (count_suppkey > 1) or ((count_suppkey=1) and (l_suppkey <> max_suppkey))\\n\" +\"    ) l3 on l3.l_orderkey = t2.l_orderkey\\n\" +\"  ) b\\n\" +\"  where (count_suppkey is null) or ((count_suppkey=1) and (l_suppkey = max_suppkey))\\n\" +\") c \" +\"group by s_name \" +\"order by numwait desc, s_name \" +\"limit 100;\"","dfgs":[15],"fName":"src_test_java_org_verdictdb_core_querying_TpchAyncExecutionPlanTest.java","fieldParents":[],"isDel":false,"lineBeg":2054,"lineEnd":2092,"lineMapIndex":1,"methodParents":[],"nodeIndex":14},{"cfgs":[],"code":"queryExecutionPlan.getRootNode().print()","dfgs":[],"fName":"src_test_java_org_verdictdb_core_querying_TpchAyncExecutionPlanTest.java","fieldParents":[],"isDel":false,"lineBeg":2105,"lineEnd":2105,"lineMapIndex":-1,"methodParents":[],"nodeIndex":15},{"cfgs":[],"code":"to.selectQuery = from.selectQuery.deepcopy()","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_QueryNodeBase.java","fieldParents":[],"isDel":false,"lineBeg":38,"lineEnd":38,"lineMapIndex":2,"methodParents":[],"nodeIndex":16},{"cfgs":[],"code":"import java.util.Collections","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":false,"lineBeg":5,"lineEnd":5,"lineMapIndex":-1,"methodParents":[],"nodeIndex":17},{"cfgs":[],"code":"import java.util.Comparator","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":false,"lineBeg":6,"lineEnd":6,"lineMapIndex":-1,"methodParents":[],"nodeIndex":18},{"cfgs":[20],"code":"if (source.equals(a.getLeft()))","dfgs":[20],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":false,"lineBeg":115,"lineEnd":115,"lineMapIndex":-1,"methodParents":[29],"nodeIndex":19},{"cfgs":[21],"code":"int channel = a.getRight()","dfgs":[21],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":false,"lineBeg":116,"lineEnd":116,"lineMapIndex":3,"methodParents":[],"nodeIndex":20},{"cfgs":[],"code":"channels.get(channel).add(token)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":false,"lineBeg":117,"lineEnd":117,"lineMapIndex":4,"methodParents":[],"nodeIndex":21},{"cfgs":[23],"code":"List<Pair<ExecutableNodeBase, Integer>> temp = getSourcesAndChannels()","dfgs":[23],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":false,"lineBeg":155,"lineEnd":155,"lineMapIndex":-1,"methodParents":[],"nodeIndex":22},{"cfgs":[25],"code":"Collections.sort(temp, new Comparator<Pair<ExecutableNodeBase, Integer>>() {@Overridepublic int compare(Pair<ExecutableNodeBase, Integer> o1, Pair<ExecutableNodeBase, Integer> o2) {return o1.getRight() - o2.getRight();}})","dfgs":[25],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":false,"lineBeg":156,"lineEnd":161,"lineMapIndex":-1,"methodParents":[],"nodeIndex":23},{"cfgs":[],"code":"return o1.getRight() - o2.getRight()","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":false,"lineBeg":159,"lineEnd":159,"lineMapIndex":-1,"methodParents":[],"nodeIndex":24},{"cfgs":[],"code":"for (Pair<ExecutableNodeBase, Integer> s : temp)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":false,"lineBeg":164,"lineEnd":164,"lineMapIndex":5,"methodParents":[],"nodeIndex":25},{"cfgs":[27],"code":"to.channels = new TreeMap<>()","dfgs":[28],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":false,"lineBeg":218,"lineEnd":218,"lineMapIndex":6,"methodParents":[],"nodeIndex":26},{"cfgs":[28],"code":"for (Entry<Integer, ExecutionTokenQueue> a : from.channels.entrySet())","dfgs":[28],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":false,"lineBeg":219,"lineEnd":219,"lineMapIndex":-1,"methodParents":[],"nodeIndex":27},{"cfgs":[],"code":"to.channels.put(a.getKey(), new ExecutionTokenQueue())","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":false,"lineBeg":220,"lineEnd":220,"lineMapIndex":-1,"methodParents":[],"nodeIndex":28},{"cfgs":[],"code":"return new EqualsBuilder().appendSuper(super.equals(obj)).append(uniqueId, rhs.uniqueId).isEquals()","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":false,"lineBeg":255,"lineEnd":258,"lineMapIndex":7,"methodParents":[],"nodeIndex":29},{"cfgs":[],"code":"return new ToStringBuilder(this, ToStringStyle.DEFAULT_STYLE).append(\"subscriberCount\", subscribers.size()).append(\"sources\", sources)//        .append(\"channels\", channels)//        .append(\"channels\", channels).toString()","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_ExecutableNodeBase.java","fieldParents":[],"isDel":false,"lineBeg":263,"lineEnd":268,"lineMapIndex":8,"methodParents":[30],"nodeIndex":30},{"cfgs":[],"code":"import org.apache.commons.lang3.builder.ToStringBuilder","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_QueryNodeWithPlaceHolders.java","fieldParents":[],"isDel":false,"lineBeg":6,"lineEnd":6,"lineMapIndex":-1,"methodParents":[],"nodeIndex":31},{"cfgs":[],"code":"import org.apache.commons.lang3.builder.ToStringStyle","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_QueryNodeWithPlaceHolders.java","fieldParents":[],"isDel":false,"lineBeg":7,"lineEnd":7,"lineMapIndex":-1,"methodParents":[],"nodeIndex":32},{"cfgs":[],"code":"System.out.println(new ToStringBuilder(node, ToStringStyle.DEFAULT_STYLE) + \" tokens: \" + tokens)","dfgs":[],"fName":"src_main_java_org_verdictdb_core_execution_ExecutableNodeRunner.java","fieldParents":[],"isDel":false,"lineBeg":77,"lineEnd":77,"lineMapIndex":9,"methodParents":[],"nodeIndex":33},{"cfgs":[],"code":"newNode.cancelSubscriptionTo(source.getLeft())","dfgs":[],"fName":"src_main_java_org_verdictdb_core_querying_ola_AggExecutionNodeBlock.java","fieldParents":[],"isDel":false,"lineBeg":314,"lineEnd":314,"lineMapIndex":-1,"methodParents":[],"nodeIndex":34}]