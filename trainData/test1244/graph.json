[{"cfgs":[1],"code":"long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR)","dfgs":[1,2,3,4],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":true,"lineBeg":1164,"lineEnd":1164,"lineMapIndex":8,"methodParents":[],"nodeIndex":0},{"cfgs":[2],"code":"long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR)","dfgs":[2,4],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":true,"lineBeg":1165,"lineEnd":1165,"lineMapIndex":7,"methodParents":[],"nodeIndex":1},{"cfgs":[3,4],"code":"if (before == after)","dfgs":[5],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":true,"lineBeg":1166,"lineEnd":1166,"lineMapIndex":-1,"methodParents":[],"nodeIndex":2},{"cfgs":[],"code":"return instant","dfgs":[],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":true,"lineBeg":1167,"lineEnd":1167,"lineMapIndex":12,"methodParents":[],"nodeIndex":3},{"cfgs":[5],"code":"long local = convertUTCToLocal(instant)","dfgs":[5],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":true,"lineBeg":1169,"lineEnd":1169,"lineMapIndex":-1,"methodParents":[],"nodeIndex":4},{"cfgs":[],"code":"return convertLocalToUTC(local, false, earlierOrLater ? after : before)","dfgs":[],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":true,"lineBeg":1170,"lineEnd":1170,"lineMapIndex":-1,"methodParents":[],"nodeIndex":5},{"cfgs":[],"code":"assertEquals(baseAfter, baseAfter.withLaterOffsetAtOverlap())","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":true,"lineBeg":1244,"lineEnd":1244,"lineMapIndex":46,"methodParents":[],"nodeIndex":6},{"cfgs":[8],"code":"long instantBefore = instant - 3 * DateTimeConstants.MILLIS_PER_HOUR","dfgs":[8,9,12,17],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":false,"lineBeg":1167,"lineEnd":1167,"lineMapIndex":1,"methodParents":[],"nodeIndex":7},{"cfgs":[9],"code":"long instantAfter = instant + 3 * DateTimeConstants.MILLIS_PER_HOUR","dfgs":[10],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":false,"lineBeg":1168,"lineEnd":1168,"lineMapIndex":0,"methodParents":[],"nodeIndex":8},{"cfgs":[10],"code":"long offsetBefore = getOffset(instantBefore)","dfgs":[10,11,14],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":false,"lineBeg":1169,"lineEnd":1169,"lineMapIndex":-1,"methodParents":[],"nodeIndex":9},{"cfgs":[11],"code":"long offsetAfter = getOffset(instantAfter)","dfgs":[11,14],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":false,"lineBeg":1170,"lineEnd":1170,"lineMapIndex":-1,"methodParents":[],"nodeIndex":10},{"cfgs":[12,13],"code":"if (offsetBefore <= offsetAfter)","dfgs":[13],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":false,"lineBeg":1171,"lineEnd":1171,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[],"code":"return instant","dfgs":[],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":false,"lineBeg":1172,"lineEnd":1172,"lineMapIndex":3,"methodParents":[],"nodeIndex":12},{"cfgs":[14],"code":"long diff = offsetBefore - offsetAfter","dfgs":[15],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":false,"lineBeg":1176,"lineEnd":1176,"lineMapIndex":-1,"methodParents":[],"nodeIndex":13},{"cfgs":[15],"code":"long transition = nextTransition(instantBefore)","dfgs":[15],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":false,"lineBeg":1177,"lineEnd":1177,"lineMapIndex":-1,"methodParents":[],"nodeIndex":14},{"cfgs":[16],"code":"long overlapStart = transition - diff","dfgs":[16,20,17],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":false,"lineBeg":1178,"lineEnd":1178,"lineMapIndex":-1,"methodParents":[],"nodeIndex":15},{"cfgs":[17],"code":"long overlapEnd = transition + diff","dfgs":[17],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":false,"lineBeg":1179,"lineEnd":1179,"lineMapIndex":-1,"methodParents":[],"nodeIndex":16},{"cfgs":[18,19],"code":"if (instant < overlapStart || instant >= overlapEnd)","dfgs":[18,19],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":false,"lineBeg":1180,"lineEnd":1180,"lineMapIndex":-1,"methodParents":[],"nodeIndex":17},{"cfgs":[],"code":"return instant","dfgs":[],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":false,"lineBeg":1181,"lineEnd":1181,"lineMapIndex":-1,"methodParents":[],"nodeIndex":18},{"cfgs":[20],"code":"long afterStart = instant - overlapStart","dfgs":[20,21,23],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":false,"lineBeg":1185,"lineEnd":1185,"lineMapIndex":-1,"methodParents":[],"nodeIndex":19},{"cfgs":[21,22],"code":"if (afterStart >= diff)","dfgs":[23,21],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":false,"lineBeg":1186,"lineEnd":1186,"lineMapIndex":-1,"methodParents":[],"nodeIndex":20},{"cfgs":[],"code":"return earlierOrLater ? instant : instant - diff","dfgs":[],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":false,"lineBeg":1188,"lineEnd":1188,"lineMapIndex":-1,"methodParents":[],"nodeIndex":21},{"cfgs":[23],"code":"else","dfgs":[],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":false,"lineBeg":1189,"lineEnd":1189,"lineMapIndex":-1,"methodParents":[],"nodeIndex":22},{"cfgs":[],"code":"return earlierOrLater ? instant + diff : instant","dfgs":[],"fName":"src_main_java_org_joda_time_DateTimeZone.java","fieldParents":[],"isDel":false,"lineBeg":1191,"lineEnd":1191,"lineMapIndex":-1,"methodParents":[],"nodeIndex":23},{"cfgs":[],"code":"assertEquals(baseAfter, baseBefore.withLaterOffsetAtOverlap())","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1243,"lineEnd":1243,"lineMapIndex":-1,"methodParents":[],"nodeIndex":24},{"cfgs":[],"code":"assertEquals(baseBefore, baseAfter.withEarlierOffsetAtOverlap())","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1246,"lineEnd":1246,"lineMapIndex":-1,"methodParents":[],"nodeIndex":25},{"cfgs":[],"code":"public void testBug3476684_adjustOffset() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1249,"lineEnd":1249,"lineMapIndex":-1,"methodParents":[],"nodeIndex":26},{"cfgs":[],"code":"final DateTimeZone zone = DateTimeZone.forID(\"America/Sao_Paulo\")","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1250,"lineEnd":1250,"lineMapIndex":-1,"methodParents":[],"nodeIndex":27},{"cfgs":[],"code":"DateTime base = new DateTime(2012, 2, 25, 22, 15, zone)","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1251,"lineEnd":1251,"lineMapIndex":-1,"methodParents":[],"nodeIndex":28},{"cfgs":[],"code":"DateTime baseBefore = base.plusHours(1)","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1252,"lineEnd":1252,"lineMapIndex":-1,"methodParents":[],"nodeIndex":29},{"cfgs":[],"code":"DateTime baseAfter = base.plusHours(2)","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1253,"lineEnd":1253,"lineMapIndex":-1,"methodParents":[],"nodeIndex":30},{"cfgs":[],"code":"assertSame(base, base.withEarlierOffsetAtOverlap())","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1255,"lineEnd":1255,"lineMapIndex":-1,"methodParents":[],"nodeIndex":31},{"cfgs":[],"code":"assertSame(base, base.withLaterOffsetAtOverlap())","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1256,"lineEnd":1256,"lineMapIndex":-1,"methodParents":[],"nodeIndex":32},{"cfgs":[],"code":"assertSame(baseBefore, baseBefore.withEarlierOffsetAtOverlap())","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1258,"lineEnd":1258,"lineMapIndex":-1,"methodParents":[],"nodeIndex":33},{"cfgs":[],"code":"assertEquals(baseAfter, baseBefore.withLaterOffsetAtOverlap())","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1259,"lineEnd":1259,"lineMapIndex":-1,"methodParents":[],"nodeIndex":34},{"cfgs":[],"code":"assertSame(baseAfter, baseAfter.withLaterOffsetAtOverlap())","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1261,"lineEnd":1261,"lineMapIndex":-1,"methodParents":[],"nodeIndex":35},{"cfgs":[],"code":"public void testBug3476684_adjustOffset_springGap() ","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1265,"lineEnd":1265,"lineMapIndex":-1,"methodParents":[],"nodeIndex":36},{"cfgs":[],"code":"final DateTimeZone zone = DateTimeZone.forID(\"America/Sao_Paulo\")","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1266,"lineEnd":1266,"lineMapIndex":-1,"methodParents":[],"nodeIndex":37},{"cfgs":[],"code":"DateTime base = new DateTime(2011, 10, 15, 22, 15, zone)","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1267,"lineEnd":1267,"lineMapIndex":-1,"methodParents":[],"nodeIndex":38},{"cfgs":[],"code":"DateTime baseBefore = base.plusHours(1)","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1268,"lineEnd":1268,"lineMapIndex":-1,"methodParents":[],"nodeIndex":39},{"cfgs":[],"code":"DateTime baseAfter = base.plusHours(2)","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1269,"lineEnd":1269,"lineMapIndex":-1,"methodParents":[],"nodeIndex":40},{"cfgs":[],"code":"assertSame(base, base.withEarlierOffsetAtOverlap())","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1271,"lineEnd":1271,"lineMapIndex":-1,"methodParents":[],"nodeIndex":41},{"cfgs":[],"code":"assertSame(base, base.withLaterOffsetAtOverlap())","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1272,"lineEnd":1272,"lineMapIndex":-1,"methodParents":[],"nodeIndex":42},{"cfgs":[],"code":"assertSame(baseBefore, baseBefore.withEarlierOffsetAtOverlap())","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1274,"lineEnd":1274,"lineMapIndex":-1,"methodParents":[],"nodeIndex":43},{"cfgs":[],"code":"assertEquals(baseBefore, baseBefore.withLaterOffsetAtOverlap())","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1275,"lineEnd":1275,"lineMapIndex":-1,"methodParents":[],"nodeIndex":44},{"cfgs":[],"code":"assertSame(baseAfter, baseAfter.withLaterOffsetAtOverlap())","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1277,"lineEnd":1277,"lineMapIndex":-1,"methodParents":[],"nodeIndex":45},{"cfgs":[],"code":"assertEquals(baseAfter, baseAfter.withEarlierOffsetAtOverlap())","dfgs":[],"fName":"src_test_java_org_joda_time_TestDateTimeZoneCutover.java","fieldParents":[],"isDel":false,"lineBeg":1278,"lineEnd":1278,"lineMapIndex":6,"methodParents":[],"nodeIndex":46}]