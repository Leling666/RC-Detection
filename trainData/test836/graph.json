[{"cfgs":[1],"code":"mike.setEmail(\"mike@sauls.com\")","dfgs":[1],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":true,"lineBeg":107,"lineEnd":107,"lineMapIndex":-1,"methodParents":[],"nodeIndex":0},{"cfgs":[],"code":"Mono<ReactiveResultSet> resultSet = batchOperations.insert(Arrays.asList(walter, mike), options).execute().then(template.getReactiveCqlOperations().queryForResultSet(\"SELECT TTL(email) FROM group;\"))","dfgs":[],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":true,"lineBeg":113,"lineEnd":114,"lineMapIndex":-1,"methodParents":[],"nodeIndex":1},{"cfgs":[3],"code":"mike.setEmail(\"mike@sauls.com\")","dfgs":[3],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":true,"lineBeg":190,"lineEnd":190,"lineMapIndex":-1,"methodParents":[],"nodeIndex":2},{"cfgs":[],"code":"Mono<ReactiveResultSet> resultSet = batchOperations.update(Arrays.asList(walter, mike), options).execute().then(template.getReactiveCqlOperations().queryForResultSet(\"SELECT TTL(email) FROM group;\"))","dfgs":[],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":true,"lineBeg":196,"lineEnd":197,"lineMapIndex":-1,"methodParents":[],"nodeIndex":3},{"cfgs":[],"code":"import java.util.Collections","dfgs":[],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_CassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":true,"lineBeg":21,"lineEnd":21,"lineMapIndex":-1,"methodParents":[],"nodeIndex":4},{"cfgs":[],"code":"WriteResult writeResult = batchOperations.insert(Collections.singleton(walter), lwtOptions).insert(mike).execute()","dfgs":[],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_CassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":true,"lineBeg":88,"lineEnd":88,"lineMapIndex":46,"methodParents":[],"nodeIndex":5},{"cfgs":[7],"code":"batchOperations.update(Arrays.asList(walter, mike), options).execute()","dfgs":[8],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_CassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":true,"lineBeg":172,"lineEnd":172,"lineMapIndex":48,"methodParents":[],"nodeIndex":6},{"cfgs":[8],"code":"ResultSet resultSet = template.getCqlOperations().queryForResultSet(\"SELECT TTL(email) FROM group;\")","dfgs":[8],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_CassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":true,"lineBeg":174,"lineEnd":174,"lineMapIndex":49,"methodParents":[],"nodeIndex":7},{"cfgs":[],"code":"assertThat(row.getInt(0)).isBetween(1, ttl)","dfgs":[],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_CassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":true,"lineBeg":179,"lineEnd":179,"lineMapIndex":51,"methodParents":[],"nodeIndex":8},{"cfgs":[],"code":"import reactor.core.publisher.Flux","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplate.java","fieldParents":[],"isDel":true,"lineBeg":25,"lineEnd":25,"lineMapIndex":-1,"methodParents":[],"nodeIndex":9},{"cfgs":[],"code":"import reactor.core.publisher.Mono","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplate.java","fieldParents":[],"isDel":true,"lineBeg":26,"lineEnd":26,"lineMapIndex":-1,"methodParents":[],"nodeIndex":10},{"cfgs":[],"code":"import com.datastax.oss.driver.api.core.cql.Row","dfgs":[],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":43,"lineEnd":43,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[],"code":"// #1135void insertAsVarargsShouldRejectQueryOptions()","dfgs":[],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":79,"lineEnd":80,"lineMapIndex":-1,"methodParents":[],"nodeIndex":12},{"cfgs":[14],"code":"Mono<ReactiveResultSet> resultSet = batchOperations.insert(walter, options).execute().then(template.getReactiveCqlOperations().queryForResultSet(\"SELECT TTL(email), email FROM group;\"))","dfgs":[14],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":121,"lineEnd":122,"lineMapIndex":-1,"methodParents":[25],"nodeIndex":13},{"cfgs":[],"code":"resultSet.flatMapMany(ReactiveResultSet::availableRows) //.collectList().as(StepVerifier::create) //.assertNext(rows -> {for (Row row : rows) {if (walter.getEmail().equals(row.getString(1))) {assertThat(row.getInt(0)).isBetween(1, ttl);} else {assertThat(row.getInt(0)).isZero();}}}).verifyComplete()","dfgs":[],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":124,"lineEnd":138,"lineMapIndex":-1,"methodParents":[],"nodeIndex":14},{"cfgs":[16],"code":"// #1135void updateAsVarargsShouldRejectQueryOptions()","dfgs":[16],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":160,"lineEnd":161,"lineMapIndex":-1,"methodParents":[],"nodeIndex":15},{"cfgs":[],"code":"assertThatIllegalArgumentException().isThrownBy(() -> template.batchOps().update(mike, walter, InsertOptions.empty()))","dfgs":[],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":162,"lineEnd":163,"lineMapIndex":-1,"methodParents":[],"nodeIndex":16},{"cfgs":[18],"code":"Mono<ReactiveResultSet> resultSet = batchOperations.update(walter, options).execute().then(template.getReactiveCqlOperations().queryForResultSet(\"SELECT TTL(email), email FROM group;\"))","dfgs":[18],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":220,"lineEnd":221,"lineMapIndex":-1,"methodParents":[28],"nodeIndex":17},{"cfgs":[19],"code":"resultSet.flatMapMany(ReactiveResultSet::availableRows) //.collectList().as(StepVerifier::create) //.assertNext(rows -> {for (Row row : rows) {if (walter.getEmail().equals(row.getString(1))) {assertThat(row.getInt(0)).isBetween(1, ttl);} else {assertThat(row.getInt(0)).isZero();}}}).verifyComplete()","dfgs":[19,20,22],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":223,"lineEnd":237,"lineMapIndex":-1,"methodParents":[],"nodeIndex":18},{"cfgs":[20,21],"code":"if (walter.getEmail().equals(row.getString(1)))","dfgs":[20,22],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":230,"lineEnd":230,"lineMapIndex":-1,"methodParents":[],"nodeIndex":19},{"cfgs":[],"code":"assertThat(row.getInt(0)).isBetween(1, ttl)","dfgs":[22],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":231,"lineEnd":231,"lineMapIndex":-1,"methodParents":[],"nodeIndex":20},{"cfgs":[22],"code":"else","dfgs":[],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":232,"lineEnd":232,"lineMapIndex":-1,"methodParents":[],"nodeIndex":21},{"cfgs":[],"code":"assertThat(row.getInt(0)).isZero()","dfgs":[],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":233,"lineEnd":233,"lineMapIndex":-1,"methodParents":[],"nodeIndex":22},{"cfgs":[],"code":"import java.util.Collections","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":18,"lineEnd":18,"lineMapIndex":-1,"methodParents":[],"nodeIndex":23},{"cfgs":[],"code":"import org.springframework.util.Assert","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":21,"lineEnd":21,"lineMapIndex":-1,"methodParents":[],"nodeIndex":24},{"cfgs":[26],"code":"default CassandraBatchOperations insert(Object entity, WriteOptions options) ","dfgs":[26,27],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":69,"lineEnd":69,"lineMapIndex":-1,"methodParents":[],"nodeIndex":25},{"cfgs":[27],"code":"Assert.notNull(entity, \"Entity must not be null\")","dfgs":[27],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":71,"lineEnd":71,"lineMapIndex":-1,"methodParents":[],"nodeIndex":26},{"cfgs":[],"code":"return insert(Collections.singleton(entity), options)","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":73,"lineEnd":73,"lineMapIndex":-1,"methodParents":[25],"nodeIndex":27},{"cfgs":[29],"code":"default CassandraBatchOperations update(Object entity, WriteOptions options) ","dfgs":[29,30],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":115,"lineEnd":115,"lineMapIndex":-1,"methodParents":[],"nodeIndex":28},{"cfgs":[30],"code":"Assert.notNull(entity, \"Entity must not be null\")","dfgs":[30],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":117,"lineEnd":117,"lineMapIndex":-1,"methodParents":[],"nodeIndex":29},{"cfgs":[],"code":"return insert(Collections.singleton(entity), options)","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":119,"lineEnd":119,"lineMapIndex":-1,"methodParents":[25],"nodeIndex":30},{"cfgs":[32],"code":"default CassandraBatchOperations delete(Object entity, WriteOptions options) ","dfgs":[32,33],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":161,"lineEnd":161,"lineMapIndex":-1,"methodParents":[],"nodeIndex":31},{"cfgs":[33],"code":"Assert.notNull(entity, \"Entity must not be null\")","dfgs":[33],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":163,"lineEnd":163,"lineMapIndex":-1,"methodParents":[],"nodeIndex":32},{"cfgs":[],"code":"return delete(Collections.singleton(entity), options)","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":165,"lineEnd":165,"lineMapIndex":-1,"methodParents":[31],"nodeIndex":33},{"cfgs":[],"code":"import java.util.Collections","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":20,"lineEnd":20,"lineMapIndex":-1,"methodParents":[],"nodeIndex":34},{"cfgs":[],"code":"import org.springframework.util.Assert","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":25,"lineEnd":25,"lineMapIndex":-1,"methodParents":[],"nodeIndex":35},{"cfgs":[37],"code":"default ReactiveCassandraBatchOperations insert(Object entity, WriteOptions options) ","dfgs":[37,38],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":74,"lineEnd":74,"lineMapIndex":-1,"methodParents":[],"nodeIndex":36},{"cfgs":[38],"code":"Assert.notNull(entity, \"Entity must not be null\")","dfgs":[38],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":76,"lineEnd":76,"lineMapIndex":-1,"methodParents":[],"nodeIndex":37},{"cfgs":[],"code":"return insert(Collections.singleton(entity), options)","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":78,"lineEnd":78,"lineMapIndex":-1,"methodParents":[25],"nodeIndex":38},{"cfgs":[40],"code":"default ReactiveCassandraBatchOperations update(Object entity, WriteOptions options) ","dfgs":[40,41],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":139,"lineEnd":139,"lineMapIndex":-1,"methodParents":[],"nodeIndex":39},{"cfgs":[41],"code":"Assert.notNull(entity, \"Entity must not be null\")","dfgs":[41],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":141,"lineEnd":141,"lineMapIndex":-1,"methodParents":[],"nodeIndex":40},{"cfgs":[],"code":"return insert(Collections.singleton(entity), options)","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":143,"lineEnd":143,"lineMapIndex":-1,"methodParents":[25],"nodeIndex":41},{"cfgs":[43],"code":"default ReactiveCassandraBatchOperations delete(Object entity, WriteOptions options) ","dfgs":[43,44],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":204,"lineEnd":204,"lineMapIndex":-1,"methodParents":[],"nodeIndex":42},{"cfgs":[44],"code":"Assert.notNull(entity, \"Entity must not be null\")","dfgs":[44],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":206,"lineEnd":206,"lineMapIndex":-1,"methodParents":[],"nodeIndex":43},{"cfgs":[],"code":"return delete(Collections.singleton(entity), options)","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchOperations.java","fieldParents":[],"isDel":false,"lineBeg":208,"lineEnd":208,"lineMapIndex":-1,"methodParents":[31],"nodeIndex":44},{"cfgs":[],"code":"// #1135void insertAsVarargsShouldRejectQueryOptions()","dfgs":[],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_CassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":75,"lineEnd":76,"lineMapIndex":-1,"methodParents":[],"nodeIndex":45},{"cfgs":[],"code":"WriteResult writeResult = batchOperations.insert(walter, lwtOptions).insert(mike).execute()","dfgs":[],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_CassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":94,"lineEnd":94,"lineMapIndex":5,"methodParents":[25],"nodeIndex":46},{"cfgs":[],"code":"// #1135void updateAsVarargsShouldRejectQueryOptions()","dfgs":[],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_CassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":140,"lineEnd":141,"lineMapIndex":-1,"methodParents":[],"nodeIndex":47},{"cfgs":[49],"code":"batchOperations.update(walter, options).execute()","dfgs":[50,51,53],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_CassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":184,"lineEnd":184,"lineMapIndex":6,"methodParents":[28],"nodeIndex":48},{"cfgs":[50],"code":"ResultSet resultSet = template.getCqlOperations().queryForResultSet(\"SELECT TTL(email), email FROM group\")","dfgs":[50,51,53],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_CassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":186,"lineEnd":186,"lineMapIndex":7,"methodParents":[],"nodeIndex":49},{"cfgs":[51,52],"code":"if (walter.getEmail().equals(row.getString(\"email\")))","dfgs":[51,53],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_CassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":192,"lineEnd":192,"lineMapIndex":-1,"methodParents":[],"nodeIndex":50},{"cfgs":[],"code":"assertThat(row.getInt(0)).isBetween(1, ttl)","dfgs":[53],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_CassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":193,"lineEnd":193,"lineMapIndex":8,"methodParents":[],"nodeIndex":51},{"cfgs":[53],"code":"else","dfgs":[],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_CassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":194,"lineEnd":194,"lineMapIndex":-1,"methodParents":[],"nodeIndex":52},{"cfgs":[],"code":"assertThat(row.getInt(0)).isZero()","dfgs":[],"fName":"spring-data-cassandra_src_test_java_org_springframework_data_cassandra_core_CassandraBatchTemplateIntegrationTests.java","fieldParents":[],"isDel":false,"lineBeg":195,"lineEnd":195,"lineMapIndex":-1,"methodParents":[],"nodeIndex":53},{"cfgs":[],"code":"import org.springframework.data.cassandra.core.cql.QueryOptions","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":23,"lineEnd":23,"lineMapIndex":-1,"methodParents":[],"nodeIndex":54},{"cfgs":[],"code":"assertNotQueryOptions(entities)","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":160,"lineEnd":160,"lineMapIndex":-1,"methodParents":[58],"nodeIndex":55},{"cfgs":[],"code":"assertNotQueryOptions(entities)","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":208,"lineEnd":208,"lineMapIndex":-1,"methodParents":[58],"nodeIndex":56},{"cfgs":[],"code":"assertNotQueryOptions(entities)","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":253,"lineEnd":253,"lineMapIndex":-1,"methodParents":[58],"nodeIndex":57},{"cfgs":[59],"code":"private void assertNotQueryOptions(Iterable<?> entities) ","dfgs":[59,60,61],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":270,"lineEnd":270,"lineMapIndex":-1,"methodParents":[],"nodeIndex":58},{"cfgs":[60],"code":"for (Object entity : entities)","dfgs":[60],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":272,"lineEnd":272,"lineMapIndex":-1,"methodParents":[],"nodeIndex":59},{"cfgs":[61],"code":"if (entity instanceof QueryOptions)","dfgs":[61],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":273,"lineEnd":273,"lineMapIndex":-1,"methodParents":[],"nodeIndex":60},{"cfgs":[],"code":"throw new IllegalArgumentException(String.format(\"%s must not be used as entity. Please make sure to call the appropriate method accepting %s\",ClassUtils.getDescriptiveType(entity), ClassUtils.getShortName(entity.getClass())))","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_CassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":274,"lineEnd":276,"lineMapIndex":-1,"methodParents":[],"nodeIndex":61},{"cfgs":[],"code":"import reactor.core.publisher.Flux","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":18,"lineEnd":18,"lineMapIndex":-1,"methodParents":[],"nodeIndex":62},{"cfgs":[],"code":"import reactor.core.publisher.Mono","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":19,"lineEnd":19,"lineMapIndex":-1,"methodParents":[],"nodeIndex":63},{"cfgs":[],"code":"import org.springframework.data.cassandra.core.cql.QueryOptions","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":30,"lineEnd":30,"lineMapIndex":-1,"methodParents":[],"nodeIndex":64},{"cfgs":[],"code":"assertNotQueryOptions(entities)","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":200,"lineEnd":200,"lineMapIndex":-1,"methodParents":[58],"nodeIndex":65},{"cfgs":[],"code":"assertNotQueryOptions(entities)","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":279,"lineEnd":279,"lineMapIndex":-1,"methodParents":[58],"nodeIndex":66},{"cfgs":[],"code":"assertNotQueryOptions(entities)","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":356,"lineEnd":356,"lineMapIndex":-1,"methodParents":[58],"nodeIndex":67},{"cfgs":[69],"code":"private void assertNotQueryOptions(Iterable<?> entities) ","dfgs":[69,70,71],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":378,"lineEnd":378,"lineMapIndex":-1,"methodParents":[],"nodeIndex":68},{"cfgs":[70],"code":"for (Object entity : entities)","dfgs":[70],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":380,"lineEnd":380,"lineMapIndex":-1,"methodParents":[],"nodeIndex":69},{"cfgs":[71],"code":"if (entity instanceof QueryOptions)","dfgs":[71],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":381,"lineEnd":381,"lineMapIndex":-1,"methodParents":[],"nodeIndex":70},{"cfgs":[],"code":"throw new IllegalArgumentException(String.format(\"%s must not be used as entity. Please make sure to call the appropriate method accepting %s\",ClassUtils.getDescriptiveType(entity), ClassUtils.getShortName(entity.getClass())))","dfgs":[],"fName":"spring-data-cassandra_src_main_java_org_springframework_data_cassandra_core_ReactiveCassandraBatchTemplate.java","fieldParents":[],"isDel":false,"lineBeg":382,"lineEnd":384,"lineMapIndex":-1,"methodParents":[],"nodeIndex":71}]