[
    {
        "cfgs": [],
        "code": "return new Object[][]{{\"A,B,C\\n1,2,3\\n1,2,3\\n1,2,3\",Arrays.asList(new String[]{\"A\", \"B\", \"C\"}, new String[]{\"1\", \"2\", \"3\"}, new String[]{\"1\", \"2\", \"3\"}, new String[]{\"1\", \"2\", \"3\"})},{\"\\\"A\\\";'B';\\\"C\\\"\\n\\\"1\\\\\\\" and \\\\\\\"2\\\";\\\"3\\\\\\\"A\\\";'B';\\\"C\\\"\\n\\\"A\\\";'B';\\\"C\\\"\\n\\\"A\\\";'B';\\\"C\\\"\\n\",Arrays.asList(new String[]{\"A\", \"'B'\", \"C\"}, new String[]{\"1\\\" and \\\"2\", \"3\\\"A\", \"'B'\", \"C\"}, new String[]{\"A\", \"'B'\", \"C\"}, new String[]{\"A\", \"'B'\", \"C\"})},{\"\\\"A\\\";'B';\\\"C\\\"\\n\\\"1\\\\\\\" and \\\\\\\"2\\\";\\\"3' and '4\\\";\\\"5\\\\\\\" and \\\\\\\"6\\\"\\n\\\"A\\\";'B';\\\"C\\\"\\n\\\"A\\\";'B';\\\"C\\\"\\n\",Arrays.asList(new String[]{\"A\", \"'B'\", \"C\"}, new String[]{\"1\\\" and \\\"2\", \"3' and '4\", \"5\\\" and \\\"6\"}, new String[]{\"A\", \"'B'\", \"C\"}, new String[]{\"A\", \"'B'\", \"C\"})},{\"1,2;2,3;3,4\\n1,2;2,3;3,4\\n1,2;2,3;3,4\\n1,2;2,3;3,4\\n\",Arrays.asList(new String[]{\"1,2\", \"2,3\", \"3,4\"}, new String[]{\"1,2\", \"2,3\", \"3,4\"}, new String[]{\"1,2\", \"2,3\", \"3,4\"}, new String[]{\"1,2\", \"2,3\", \"3,4\"})},{\"A;B;C;D;E\\n$1.2;$2.3;$3.4\\n$1.2;$2.3;$3.4\\n$1.2;$2.3;$3.4\\n$1.2;$2.3;$3.4\\n\",Arrays.asList(new String[]{\"A\", \"B\", \"C\", \"D\", \"E\"}, new String[]{\"$1.2\", \"$2.3\", \"$3.4\"}, new String[]{\"$1.2\", \"$2.3\", \"$3.4\"}, new String[]{\"$1.2\", \"$2.3\", \"$3.4\"},new String[]{\"$1.2\", \"$2.3\", \"$3.4\"})},{\"\\\"A'A\\\",\\\"BB\\\",\\\"CC\\\"\\n\\\"11\\\",\\\"22\\\",\\\"33\\\"\\n\\\"11\\\",\\\"22\\\",\\\"33\\\"\\n\\\"11\\\",\\\"22\\\",\\\"33\\\"\\n\",Arrays.asList(new String[]{\"A'A\", \"BB\", \"CC\"}, new String[]{\"11\", \"22\", \"33\"}, new String[]{\"11\", \"22\", \"33\"}, new String[]{\"11\", \"22\", \"33\"})}}",
        "dfgs": [],
        "fName": "src_test_java_com_univocity_parsers_csv_CsvFormatDetectorTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 29,
        "lineEnd": 44,
        "lineMapIndex": 2,
        "methodParents": [],
        "nodeIndex": 0,
        "rootcause": false,
        "commits": [
            "8d8dc7f8cf540b0fb080652b6f881b2e4821337b",
            "c4fa74c61c693bac6b9a9d35703d3940ae3c120a"
        ]
    },
    {
        "cfgs": [],
        "code": "char delimiter = min(sums, totals, suggestedDelimiter)",
        "dfgs": [],
        "fName": "src_main_java_com_univocity_parsers_csv_CsvFormatDetector.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 181,
        "lineEnd": 181,
        "lineMapIndex": 17,
        "methodParents": [],
        "nodeIndex": 1,
        "rootcause": true,
        "commits": [
            "1a5d197a1781737c68c75a19bdabfd2902eb30cc"
        ]
    },
    {
        "cfgs": [],
        "code": "return new Object[][]{{\"A,B,C\\n1,2,3\\n1,2,3\\n1,2,3\",Arrays.asList(new String[]{\"A\", \"B\", \"C\"}, new String[]{\"1\", \"2\", \"3\"}, new String[]{\"1\", \"2\", \"3\"}, new String[]{\"1\", \"2\", \"3\"})},{\"\\\"A\\\";'B';\\\"C\\\"\\n\\\"1\\\\\\\" and \\\\\\\"2\\\";\\\"3\\\\\\\"A\\\";'B';\\\"C\\\"\\n\\\"A\\\";'B';\\\"C\\\"\\n\\\"A\\\";'B';\\\"C\\\"\\n\",Arrays.asList(new String[]{\"A\", \"'B'\", \"C\"}, new String[]{\"1\\\" and \\\"2\", \"3\\\"A\", \"'B'\", \"C\"}, new String[]{\"A\", \"'B'\", \"C\"}, new String[]{\"A\", \"'B'\", \"C\"})},{\"\\\"A\\\";'B';\\\"C\\\"\\n\\\"1\\\\\\\" and \\\\\\\"2\\\";\\\"3' and '4\\\";\\\"5\\\\\\\" and \\\\\\\"6\\\"\\n\\\"A\\\";'B';\\\"C\\\"\\n\\\"A\\\";'B';\\\"C\\\"\\n\",Arrays.asList(new String[]{\"A\", \"'B'\", \"C\"}, new String[]{\"1\\\" and \\\"2\", \"3' and '4\", \"5\\\" and \\\"6\"}, new String[]{\"A\", \"'B'\", \"C\"}, new String[]{\"A\", \"'B'\", \"C\"})},{\"1,2;2,3;3,4;a\\n1,2;2,3;3,4;b\\n1,2;2,3;3,4;c\\n1,2;2,3;3,4;d\\n\",Arrays.asList(new String[]{\"1,2\", \"2,3\", \"3,4\", \"a\"}, new String[]{\"1,2\", \"2,3\", \"3,4\", \"b\"}, new String[]{\"1,2\", \"2,3\", \"3,4\", \"c\"}, new String[]{\"1,2\", \"2,3\", \"3,4\", \"d\"})},{\"A;B;C;D;E\\n$1.2;$2.3;$3.4\\n$1.2;$2.3;$3.4\\n$1.2;$2.3;$3.4\\n$1.2;$2.3;$3.4\\n\",Arrays.asList(new String[]{\"A\", \"B\", \"C\", \"D\", \"E\"}, new String[]{\"$1.2\", \"$2.3\", \"$3.4\"}, new String[]{\"$1.2\", \"$2.3\", \"$3.4\"}, new String[]{\"$1.2\", \"$2.3\", \"$3.4\"},new String[]{\"$1.2\", \"$2.3\", \"$3.4\"})},{\"\\\"A'A\\\",\\\"BB\\\",\\\"CC\\\"\\n\\\"11\\\",\\\"22\\\",\\\"33\\\"\\n\\\"11\\\",\\\"22\\\",\\\"33\\\"\\n\\\"11\\\",\\\"22\\\",\\\"33\\\"\\n\",Arrays.asList(new String[]{\"A'A\", \"BB\", \"CC\"}, new String[]{\"11\", \"22\", \"33\"}, new String[]{\"11\", \"22\", \"33\"}, new String[]{\"11\", \"22\", \"33\"})}}",
        "dfgs": [],
        "fName": "src_test_java_com_univocity_parsers_csv_CsvFormatDetectorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 29,
        "lineEnd": 44,
        "lineMapIndex": 0,
        "methodParents": [],
        "nodeIndex": 2,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "public void testAutodetection() throws Exception ",
        "dfgs": [],
        "fName": "src_test_java_com_univocity_parsers_csv_CsvFormatDetectorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 76,
        "lineEnd": 76,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 3,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            5
        ],
        "code": "CsvParserSettings settings = new CsvParserSettings()",
        "dfgs": [
            5
        ],
        "fName": "src_test_java_com_univocity_parsers_csv_CsvFormatDetectorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 77,
        "lineEnd": 77,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 4,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            6
        ],
        "code": "settings.detectFormatAutomatically()",
        "dfgs": [
            6
        ],
        "fName": "src_test_java_com_univocity_parsers_csv_CsvFormatDetectorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 78,
        "lineEnd": 78,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 5,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            7
        ],
        "code": "CsvParser parser = new CsvParser(settings)",
        "dfgs": [
            8
        ],
        "fName": "src_test_java_com_univocity_parsers_csv_CsvFormatDetectorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 79,
        "lineEnd": 79,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 6,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            8
        ],
        "code": "String s = \"\" +\"1;2001-01-01;First row;1.1\\n\" +\"2;2002-02-02;Second row;2.2\\n\" +\"3;2003-03-03;Third row;3.3\\n\" +\"4;2004-04-04;Fourth row;4.4\"",
        "dfgs": [
            8
        ],
        "fName": "src_test_java_com_univocity_parsers_csv_CsvFormatDetectorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 81,
        "lineEnd": 85,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 7,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            9
        ],
        "code": "List<String[]> rows = parser.parseAll(new StringReader(s))",
        "dfgs": [
            9,
            11
        ],
        "fName": "src_test_java_com_univocity_parsers_csv_CsvFormatDetectorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 87,
        "lineEnd": 87,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 8,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            10
        ],
        "code": "CsvFormat format = parser.getDetectedFormat()",
        "dfgs": [
            10,
            13
        ],
        "fName": "src_test_java_com_univocity_parsers_csv_CsvFormatDetectorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 89,
        "lineEnd": 89,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 9,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            11
        ],
        "code": "assertEquals(format.getDelimiter(), ';')",
        "dfgs": [
            11
        ],
        "fName": "src_test_java_com_univocity_parsers_csv_CsvFormatDetectorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 90,
        "lineEnd": 90,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 10,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            12
        ],
        "code": "assertEquals(rows.size(), 4)",
        "dfgs": [
            15
        ],
        "fName": "src_test_java_com_univocity_parsers_csv_CsvFormatDetectorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 91,
        "lineEnd": 91,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 11,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            13
        ],
        "code": "s = \"\" +\"1;2001-01-01;First row;1.1\\n\" +\"2;2002-02-02;Second row;2\\n\" +\"3;2003-03-03;Third row;3.3\\n\" +\"4;2004-04-04;Fourth row;4.4\"",
        "dfgs": [
            13
        ],
        "fName": "src_test_java_com_univocity_parsers_csv_CsvFormatDetectorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 93,
        "lineEnd": 97,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 12,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            14
        ],
        "code": "rows = parser.parseAll(new StringReader(s))",
        "dfgs": [
            14,
            16
        ],
        "fName": "src_test_java_com_univocity_parsers_csv_CsvFormatDetectorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 99,
        "lineEnd": 99,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 13,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            15
        ],
        "code": "format = parser.getDetectedFormat()",
        "dfgs": [
            15
        ],
        "fName": "src_test_java_com_univocity_parsers_csv_CsvFormatDetectorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 101,
        "lineEnd": 101,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 14,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            16
        ],
        "code": "assertEquals(format.getDelimiter(), ';')",
        "dfgs": [
            16
        ],
        "fName": "src_test_java_com_univocity_parsers_csv_CsvFormatDetectorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 102,
        "lineEnd": 102,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 15,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "assertEquals(rows.size(), 4)",
        "dfgs": [],
        "fName": "src_test_java_com_univocity_parsers_csv_CsvFormatDetectorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 103,
        "lineEnd": 103,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 16,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "char delimiter = max(sums, totals, suggestedDelimiter)",
        "dfgs": [],
        "fName": "src_main_java_com_univocity_parsers_csv_CsvFormatDetector.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 181,
        "lineEnd": 181,
        "lineMapIndex": 1,
        "methodParents": [],
        "nodeIndex": 17,
        "rootcause": false,
        "commits": []
    }
]