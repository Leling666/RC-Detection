[{"cfgs":[],"code":"if (!maybeModifiedArguments &&!staleVars.contains(v) && referenceInfo.isWellDefined() &&referenceInfo.isAssignedOnceInLifetime())","dfgs":[],"fName":"src_com_google_javascript_jscomp_InlineVariables.java","fieldParents":[],"isDel":true,"lineBeg":301,"lineEnd":303,"lineMapIndex":11,"methodParents":[],"nodeIndex":0},{"cfgs":[2],"code":"public void testExternalIssue1053() ","dfgs":[2],"fName":"test_com_google_javascript_jscomp_InlineVariablesTest.java","fieldParents":[],"isDel":false,"lineBeg":1068,"lineEnd":1068,"lineMapIndex":-1,"methodParents":[],"nodeIndex":1},{"cfgs":[],"code":"testSame(\"var u; function f() { u = Random(); var x = u; f(); alert(x===u)}\")","dfgs":[],"fName":"test_com_google_javascript_jscomp_InlineVariablesTest.java","fieldParents":[],"isDel":false,"lineBeg":1069,"lineEnd":1070,"lineMapIndex":-1,"methodParents":[],"nodeIndex":2},{"cfgs":[4],"code":"boolean isOnlyAssignmentSameScopeAsDeclaration() ","dfgs":[10,5,4,6,9,8],"fName":"src_com_google_javascript_jscomp_ReferenceCollectingCallback.java","fieldParents":[],"isDel":false,"lineBeg":444,"lineEnd":444,"lineMapIndex":-1,"methodParents":[],"nodeIndex":3},{"cfgs":[5],"code":"Reference ref = getOneAndOnlyAssignment()","dfgs":[5],"fName":"src_com_google_javascript_jscomp_ReferenceCollectingCallback.java","fieldParents":[],"isDel":false,"lineBeg":445,"lineEnd":445,"lineMapIndex":-1,"methodParents":[],"nodeIndex":4},{"cfgs":[6],"code":"Preconditions.checkNotNull(ref)","dfgs":[6],"fName":"src_com_google_javascript_jscomp_ReferenceCollectingCallback.java","fieldParents":[],"isDel":false,"lineBeg":446,"lineEnd":446,"lineMapIndex":-1,"methodParents":[],"nodeIndex":5},{"cfgs":[7,10],"code":"for (BasicBlock block = ref.getBasicBlock();block != null; block = block.getParent())","dfgs":[8],"fName":"src_com_google_javascript_jscomp_ReferenceCollectingCallback.java","fieldParents":[],"isDel":false,"lineBeg":451,"lineEnd":452,"lineMapIndex":-1,"methodParents":[],"nodeIndex":6},{"cfgs":[8],"code":"if (block.isFunction)","dfgs":[],"fName":"src_com_google_javascript_jscomp_ReferenceCollectingCallback.java","fieldParents":[],"isDel":false,"lineBeg":453,"lineEnd":453,"lineMapIndex":-1,"methodParents":[],"nodeIndex":7},{"cfgs":[9],"code":"if (ref.getSymbol().getScope() != ref.scope)","dfgs":[],"fName":"src_com_google_javascript_jscomp_ReferenceCollectingCallback.java","fieldParents":[],"isDel":false,"lineBeg":454,"lineEnd":454,"lineMapIndex":-1,"methodParents":[],"nodeIndex":8},{"cfgs":[],"code":"return false","dfgs":[],"fName":"src_com_google_javascript_jscomp_ReferenceCollectingCallback.java","fieldParents":[],"isDel":false,"lineBeg":455,"lineEnd":455,"lineMapIndex":-1,"methodParents":[],"nodeIndex":9},{"cfgs":[],"code":"return true","dfgs":[],"fName":"src_com_google_javascript_jscomp_ReferenceCollectingCallback.java","fieldParents":[],"isDel":false,"lineBeg":460,"lineEnd":460,"lineMapIndex":-1,"methodParents":[],"nodeIndex":10},{"cfgs":[],"code":"if (!maybeModifiedArguments &&!staleVars.contains(v) &&referenceInfo.isWellDefined() &&referenceInfo.isAssignedOnceInLifetime() &&// Inlining the variable based solely on well-defined and assigned// once is *NOT* correct. We relax the correctness requirement if// the variable is declared constant.(isInlineableDeclaredConstant(v, referenceInfo) ||referenceInfo.isOnlyAssignmentSameScopeAsDeclaration()))","dfgs":[],"fName":"src_com_google_javascript_jscomp_InlineVariables.java","fieldParents":[],"isDel":false,"lineBeg":301,"lineEnd":309,"lineMapIndex":0,"methodParents":[],"nodeIndex":11}]