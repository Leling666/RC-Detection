[{"cfgs":[],"code":"dest[destOffset+i]=dest[offset+(stride*indices[i])]","dfgs":[],"fName":"src_main_java_mikera_vectorz_impl_AStridedVector.java","fieldParents":[],"isDel":true,"lineBeg":306,"lineEnd":306,"lineMapIndex":1,"methodParents":[],"nodeIndex":0},{"cfgs":[],"code":"dest[destOffset+i]=data[offset+(stride*indices[i])]","dfgs":[],"fName":"src_main_java_mikera_vectorz_impl_AStridedVector.java","fieldParents":[],"isDel":false,"lineBeg":306,"lineEnd":306,"lineMapIndex":0,"methodParents":[],"nodeIndex":1},{"cfgs":[3],"code":"public void testMatrixConvert() ","dfgs":[4,7,3,6,5],"fName":"src_test_java_mikera_matrixx_impl_TestSparseRowMatrix.java","fieldParents":[],"isDel":false,"lineBeg":35,"lineEnd":35,"lineMapIndex":-1,"methodParents":[],"nodeIndex":2},{"cfgs":[4],"code":"Matrix m =Matrix.create(67, 128)","dfgs":[6,5],"fName":"src_test_java_mikera_matrixx_impl_TestSparseRowMatrix.java","fieldParents":[],"isDel":false,"lineBeg":36,"lineEnd":36,"lineMapIndex":-1,"methodParents":[],"nodeIndex":3},{"cfgs":[5,6],"code":"for (int i=0; i<300; i++)","dfgs":[],"fName":"src_test_java_mikera_matrixx_impl_TestSparseRowMatrix.java","fieldParents":[],"isDel":false,"lineBeg":37,"lineEnd":37,"lineMapIndex":-1,"methodParents":[],"nodeIndex":4},{"cfgs":[],"code":"m.set(Rand.r(67),Rand.r(128),Rand.nextGaussian())","dfgs":[6],"fName":"src_test_java_mikera_matrixx_impl_TestSparseRowMatrix.java","fieldParents":[],"isDel":false,"lineBeg":38,"lineEnd":38,"lineMapIndex":-1,"methodParents":[],"nodeIndex":5},{"cfgs":[7],"code":"AMatrix sm=m.sparse()","dfgs":[7],"fName":"src_test_java_mikera_matrixx_impl_TestSparseRowMatrix.java","fieldParents":[],"isDel":false,"lineBeg":40,"lineEnd":40,"lineMapIndex":-1,"methodParents":[],"nodeIndex":6},{"cfgs":[],"code":"assertEquals(m,sm)","dfgs":[],"fName":"src_test_java_mikera_matrixx_impl_TestSparseRowMatrix.java","fieldParents":[],"isDel":false,"lineBeg":42,"lineEnd":42,"lineMapIndex":-1,"methodParents":[],"nodeIndex":7}]