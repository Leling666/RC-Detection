[{"cfgs":[],"code":"setIndex(SERVER_IDX, database.getServer().getFullyQualifiedName())","dfgs":[],"fName":"src_main_java_net_sf_jsqlparser_schema_Table.java","fieldParents":[],"isDel":true,"lineBeg":67,"lineEnd":67,"lineMapIndex":28,"methodParents":[1],"nodeIndex":0},{"cfgs":[],"code":"for (int i = partItems.size()-1 ; i >=0; i--)","dfgs":[],"fName":"src_main_java_net_sf_jsqlparser_schema_Table.java","fieldParents":[],"isDel":true,"lineBeg":116,"lineEnd":116,"lineMapIndex":29,"methodParents":[],"nodeIndex":1},{"cfgs":[],"code":"return getFullyQualifiedName()+ ((alias != null) ? alias.toString() : \"\")+ ((pivot != null) ? \" \" + pivot : \"\")+ ((hint != null) ? hint.toString() : \"\")","dfgs":[],"fName":"src_main_java_net_sf_jsqlparser_schema_Table.java","fieldParents":[],"isDel":true,"lineBeg":159,"lineEnd":162,"lineMapIndex":-1,"methodParents":[1],"nodeIndex":2},{"cfgs":[],"code":"import net.sf.jsqlparser.JSQLParserException","dfgs":[],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":12,"lineEnd":12,"lineMapIndex":-1,"methodParents":[],"nodeIndex":3},{"cfgs":[],"code":"import net.sf.jsqlparser.parser.CCJSqlParserUtil","dfgs":[],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":13,"lineEnd":13,"lineMapIndex":-1,"methodParents":[],"nodeIndex":4},{"cfgs":[],"code":"import net.sf.jsqlparser.statement.select.PlainSelect","dfgs":[],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":14,"lineEnd":14,"lineMapIndex":-1,"methodParents":[],"nodeIndex":5},{"cfgs":[],"code":"import net.sf.jsqlparser.statement.select.Select","dfgs":[],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":15,"lineEnd":15,"lineMapIndex":-1,"methodParents":[],"nodeIndex":6},{"cfgs":[],"code":"import net.sf.jsqlparser.util.deparser.ExpressionDeParser","dfgs":[],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":16,"lineEnd":16,"lineMapIndex":-1,"methodParents":[],"nodeIndex":7},{"cfgs":[],"code":"import net.sf.jsqlparser.util.deparser.SelectDeParser","dfgs":[],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":17,"lineEnd":17,"lineMapIndex":-1,"methodParents":[],"nodeIndex":8},{"cfgs":[],"code":"import static org.junit.Assert.assertEquals","dfgs":[],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":18,"lineEnd":18,"lineMapIndex":-1,"methodParents":[],"nodeIndex":9},{"cfgs":[],"code":"public void tableSetDatabase() ","dfgs":[],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":35,"lineEnd":35,"lineMapIndex":-1,"methodParents":[],"nodeIndex":10},{"cfgs":[12],"code":"Table table = new Table()","dfgs":[12],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":36,"lineEnd":36,"lineMapIndex":-1,"methodParents":[],"nodeIndex":11},{"cfgs":[13],"code":"table.setName(\"testtable\")","dfgs":[14],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":37,"lineEnd":37,"lineMapIndex":-1,"methodParents":[],"nodeIndex":12},{"cfgs":[14],"code":"Database database = new Database(\"default\")","dfgs":[14],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":38,"lineEnd":38,"lineMapIndex":-1,"methodParents":[],"nodeIndex":13},{"cfgs":[15],"code":"table.setDatabase(database)","dfgs":[15],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":39,"lineEnd":39,"lineMapIndex":-1,"methodParents":[27],"nodeIndex":14},{"cfgs":[],"code":"assertEquals(\"default..testtable\", table.toString())","dfgs":[],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":40,"lineEnd":40,"lineMapIndex":-1,"methodParents":[],"nodeIndex":15},{"cfgs":[],"code":"public void tableSetDatabaseIssue812() throws JSQLParserException ","dfgs":[],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":44,"lineEnd":44,"lineMapIndex":-1,"methodParents":[],"nodeIndex":16},{"cfgs":[18],"code":"String sql = \"SELECT * FROM MY_TABLE1 as T1, MY_TABLE2, (SELECT * FROM MY_DB.TABLE3) LEFT OUTER JOIN MY_TABLE4 \"+ \" WHERE ID = (SELECT MAX(ID) FROM MY_TABLE5) AND ID2 IN (SELECT * FROM MY_TABLE6)\"","dfgs":[18],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":45,"lineEnd":46,"lineMapIndex":-1,"methodParents":[],"nodeIndex":17},{"cfgs":[19],"code":"Select select = (Select) CCJSqlParserUtil.parse(sql)","dfgs":[26],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":48,"lineEnd":48,"lineMapIndex":-1,"methodParents":[],"nodeIndex":18},{"cfgs":[20],"code":"StringBuilder buffer = new StringBuilder()","dfgs":[22],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":49,"lineEnd":49,"lineMapIndex":-1,"methodParents":[],"nodeIndex":19},{"cfgs":[21],"code":"ExpressionDeParser expressionDeParser = new ExpressionDeParser()","dfgs":[22],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":50,"lineEnd":50,"lineMapIndex":-1,"methodParents":[],"nodeIndex":20},{"cfgs":[22],"code":"final Database database = new Database(\"default\")","dfgs":[],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":51,"lineEnd":51,"lineMapIndex":-1,"methodParents":[],"nodeIndex":21},{"cfgs":[26],"code":"SelectDeParser deparser = new SelectDeParser(expressionDeParser, buffer) {@Overridepublic void visit(Table tableName) {System.out.println(tableName);tableName.setDatabase(database); // ExceptionSystem.out.println(tableName.getDatabase());}}","dfgs":[26],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":52,"lineEnd":60,"lineMapIndex":-1,"methodParents":[],"nodeIndex":22},{"cfgs":[],"code":"System.out.println(tableName)","dfgs":[],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":56,"lineEnd":56,"lineMapIndex":-1,"methodParents":[],"nodeIndex":23},{"cfgs":[],"code":"tableName.setDatabase(database)","dfgs":[],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":57,"lineEnd":57,"lineMapIndex":-1,"methodParents":[27],"nodeIndex":24},{"cfgs":[],"code":"System.out.println(tableName.getDatabase())","dfgs":[],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":58,"lineEnd":58,"lineMapIndex":-1,"methodParents":[],"nodeIndex":25},{"cfgs":[],"code":"deparser.visit((PlainSelect) select.getSelectBody())","dfgs":[],"fName":"src_test_java_net_sf_jsqlparser_schema_TableTest.java","fieldParents":[],"isDel":false,"lineBeg":62,"lineEnd":62,"lineMapIndex":-1,"methodParents":[23],"nodeIndex":26},{"cfgs":[28],"code":"if (database.getServer() != null)","dfgs":[28],"fName":"src_main_java_net_sf_jsqlparser_schema_Table.java","fieldParents":[],"isDel":false,"lineBeg":67,"lineEnd":67,"lineMapIndex":-1,"methodParents":[],"nodeIndex":27},{"cfgs":[],"code":"setIndex(SERVER_IDX, database.getServer().getFullyQualifiedName())","dfgs":[],"fName":"src_main_java_net_sf_jsqlparser_schema_Table.java","fieldParents":[],"isDel":false,"lineBeg":68,"lineEnd":68,"lineMapIndex":0,"methodParents":[29],"nodeIndex":28},{"cfgs":[],"code":"for (int i = partItems.size() - 1; i >= 0; i--)","dfgs":[],"fName":"src_main_java_net_sf_jsqlparser_schema_Table.java","fieldParents":[],"isDel":false,"lineBeg":118,"lineEnd":118,"lineMapIndex":1,"methodParents":[],"nodeIndex":29}]