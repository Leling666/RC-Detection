[
    {
        "cfgs": [],
        "code": "public void testGetSoyTypeForBinaryOperatorArithmeticOp() ",
        "dfgs": [],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 507,
        "lineEnd": 507,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 0,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            2
        ],
        "code": "SoyTypes.SoyTypeBinaryOperator plusOp = new SoyTypes.SoyTypeArithmeticOperator()",
        "dfgs": [
            2
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 508,
        "lineEnd": 508,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 1,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            3
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(INT_TYPE, FLOAT_TYPE, plusOp)).isEqualTo(FLOAT_TYPE)",
        "dfgs": [
            3
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 510,
        "lineEnd": 511,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 2,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            4
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(FLOAT_TYPE, INT_TYPE, plusOp)).isEqualTo(FLOAT_TYPE)",
        "dfgs": [
            4,
            5
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 512,
        "lineEnd": 513,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 3,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            5
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(INT_TYPE, INT_TYPE, plusOp)).isEqualTo(INT_TYPE)",
        "dfgs": [
            5,
            7
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 514,
        "lineEnd": 515,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 4,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            6
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(FLOAT_TYPE, FLOAT_TYPE, plusOp)).isEqualTo(FLOAT_TYPE)",
        "dfgs": [
            6
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 516,
        "lineEnd": 517,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 5,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            7
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(FLOAT_TYPE, NUMBER_TYPE, plusOp)).isEqualTo(FLOAT_TYPE)",
        "dfgs": [
            7,
            9
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 518,
        "lineEnd": 519,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 6,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            8
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(INT_TYPE, NUMBER_TYPE, plusOp)).isEqualTo(NUMBER_TYPE)",
        "dfgs": [
            8,
            12
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 520,
        "lineEnd": 521,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 7,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            9
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(NUMBER_TYPE, NUMBER_TYPE, plusOp)).isEqualTo(NUMBER_TYPE)",
        "dfgs": [
            9,
            14
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 522,
        "lineEnd": 523,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 8,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            10
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(FLOAT_TYPE, UNKNOWN_TYPE, plusOp)).isEqualTo(UNKNOWN_TYPE)",
        "dfgs": [
            10
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 526,
        "lineEnd": 527,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 9,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            11
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(UNKNOWN_TYPE, FLOAT_TYPE, plusOp)).isEqualTo(UNKNOWN_TYPE)",
        "dfgs": [
            11,
            13
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 528,
        "lineEnd": 529,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 10,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            12
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(UNKNOWN_TYPE, UNKNOWN_TYPE, plusOp)).isEqualTo(UNKNOWN_TYPE)",
        "dfgs": [
            12
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 530,
        "lineEnd": 531,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 11,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            13
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(INT_TYPE, STRING_TYPE, plusOp)).isNull()",
        "dfgs": [
            13,
            16
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 534,
        "lineEnd": 534,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 12,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            14
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(STRING_TYPE, FLOAT_TYPE, plusOp)).isNull()",
        "dfgs": [
            14,
            18
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 535,
        "lineEnd": 535,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 13,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            15
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(STRING_TYPE, NUMBER_TYPE, plusOp)).isNull()",
        "dfgs": [
            15
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 536,
        "lineEnd": 536,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 14,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            16
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(STRING_TYPE, STRING_TYPE, plusOp)).isNull()",
        "dfgs": [
            16,
            17
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 537,
        "lineEnd": 537,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 15,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            17
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(INT_TYPE, URI_TYPE, plusOp)).isNull()",
        "dfgs": [
            17,
            19
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 538,
        "lineEnd": 538,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 16,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            18
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(HTML_TYPE, STRING_TYPE, plusOp)).isNull()",
        "dfgs": [
            18
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 539,
        "lineEnd": 539,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 17,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            19
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(ListType.of(STRING_TYPE), FLOAT_TYPE, plusOp)).isNull()",
        "dfgs": [
            19,
            20,
            22
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 542,
        "lineEnd": 543,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 18,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            20
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(INT_TYPE, MapType.of(INT_TYPE, STRING_TYPE), plusOp)).isNull()",
        "dfgs": [
            20,
            22
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 544,
        "lineEnd": 547,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 19,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            21
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(INT_TYPE, RecordType.of(ImmutableMap.of(\"a\", INT_TYPE, \"b\", FLOAT_TYPE)), plusOp)).isNull()",
        "dfgs": [
            21
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 548,
        "lineEnd": 551,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 20,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            22
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(INT_TYPE, UnionType.of(BOOL_TYPE, FLOAT_TYPE, INT_TYPE), plusOp)).isNull()",
        "dfgs": [
            22,
            26
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 554,
        "lineEnd": 557,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 21,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            23
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(UnionType.of(STRING_TYPE, INT_TYPE),UnionType.of(INT_TYPE, STRING_TYPE, ListType.of(INT_TYPE)),plusOp)).isNull()",
        "dfgs": [
            23
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 558,
        "lineEnd": 563,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 22,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            24
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(UnionType.of(NULL_TYPE, STRING_TYPE), UnionType.of(NULL_TYPE, INT_TYPE), plusOp)).isNull()",
        "dfgs": [
            24,
            25
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 564,
        "lineEnd": 567,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 23,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            25
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(INT_TYPE, NULL_TYPE, plusOp)).isNull()",
        "dfgs": [
            25
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 570,
        "lineEnd": 570,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 24,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            26
        ],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(INT_TYPE, UnionType.of(NULL_TYPE, INT_TYPE), plusOp)).isEqualTo(INT_TYPE)",
        "dfgs": [
            26
        ],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 571,
        "lineEnd": 574,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 25,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [],
        "code": "assertThat(SoyTypes.getSoyTypeForBinaryOperator(UnionType.of(NULL_TYPE, FLOAT_TYPE), UnionType.of(NULL_TYPE, INT_TYPE), plusOp)).isEqualTo(UnionType.of(NULL_TYPE, FLOAT_TYPE))",
        "dfgs": [],
        "fName": "java_tests_com_google_template_soy_types_SoyTypesTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 575,
        "lineEnd": 578,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 26,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [],
        "code": "public static final class SoyTypeArithmeticOperator implements SoyTypeBinaryOperator ",
        "dfgs": [],
        "fName": "java_src_com_google_template_soy_types_SoyTypes.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 299,
        "lineEnd": 299,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 27,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            29
        ],
        "code": "public SoyType resolve(SoyType left, SoyType right) ",
        "dfgs": [
            29,
            30
        ],
        "fName": "java_src_com_google_template_soy_types_SoyTypes.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 302,
        "lineEnd": 302,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 28,
        "rootcause": false,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            30
        ],
        "code": "Optional<SoyType> arithmeticType = SoyTypes.computeLowestCommonTypeArithmetic(left, right)",
        "dfgs": [
            30
        ],
        "fName": "java_src_com_google_template_soy_types_SoyTypes.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 303,
        "lineEnd": 303,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 29,
        "rootcause": true,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [],
        "code": "return arithmeticType.orNull()",
        "dfgs": [],
        "fName": "java_src_com_google_template_soy_types_SoyTypes.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 304,
        "lineEnd": 304,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 30,
        "rootcause": true,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [],
        "code": "visitArithmeticOpNode(node)",
        "dfgs": [],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 568,
        "lineEnd": 568,
        "lineMapIndex": -1,
        "methodParents": [
            32
        ],
        "nodeIndex": 31,
        "rootcause": true,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            33
        ],
        "code": "boolean isDivide = node instanceof DivideByOpNode",
        "dfgs": [
            33,
            37,
            35
        ],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 924,
        "lineEnd": 924,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 32,
        "rootcause": true,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            34
        ],
        "code": "SoyType result =SoyTypes.getSoyTypeForBinaryOperator(left, right, new SoyTypes.SoyTypeArithmeticOperator())",
        "dfgs": [
            34,
            35
        ],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 927,
        "lineEnd": 929,
        "lineMapIndex": 48,
        "methodParents": [],
        "nodeIndex": 33,
        "rootcause": true,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            35,
            37
        ],
        "code": "if (result == null)",
        "dfgs": [
            37
        ],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 930,
        "lineEnd": 930,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 34,
        "rootcause": true,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            36
        ],
        "code": "errorReporter.report(node.getSourceLocation(), INCOMPATIBLE_AIRTHMETIC_OP, left, right)",
        "dfgs": [
            37
        ],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 931,
        "lineEnd": 931,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 35,
        "rootcause": true,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [
            37
        ],
        "code": "result = UnknownType.getInstance()",
        "dfgs": [
            37
        ],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 932,
        "lineEnd": 932,
        "lineMapIndex": 46,
        "methodParents": [],
        "nodeIndex": 36,
        "rootcause": true,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [],
        "code": "node.setType(isDivide ? FloatType.getInstance() : result)",
        "dfgs": [],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 938,
        "lineEnd": 938,
        "lineMapIndex": 44,
        "methodParents": [],
        "nodeIndex": 37,
        "rootcause": true,
        "commits": [
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [],
        "code": "SoyFileSetNode soyTree =SoyFileSetParserBuilder.forFileContents(constructTemplateSource(\"{@param pa: unknown}\",\"{@param pi: int}\",\"{@param pf: float}\",\"{captureType($pa + $pa)}\",\"{captureType($pi + $pi)}\",\"{captureType($pf + $pf)}\",\"{captureType($pa - $pa)}\",\"{captureType($pi - $pi)}\",\"{captureType($pf - $pf)}\",\"{captureType($pa * $pa)}\",\"{captureType($pi * $pi)}\",\"{captureType($pf * $pf)}\",\"{captureType($pa / $pa)}\",\"{captureType($pi / $pi)}\",\"{captureType($pf / $pf)}\",\"{captureType($pa % $pa)}\",\"{captureType($pi % $pi)}\",\"{captureType($pf % $pf)}\",\"{captureType(-$pa)}\",\"{captureType(-$pi)}\",\"{captureType(-$pf)}\")).declaredSyntaxVersion(SyntaxVersion.V2_0).addSoyFunction(CAPTURE_TYPE_FUNCTION).typeRegistry(TYPE_REGISTRY).parse().fileSet()",
        "dfgs": [],
        "fName": "java_tests_com_google_template_soy_passes_ResolveExpressionTypesVisitorTest.java",
        "fieldParents": [],
        "isDel": true,
        "lineBeg": 207,
        "lineEnd": 235,
        "lineMapIndex": 53,
        "methodParents": [],
        "nodeIndex": 38,
        "rootcause": false,
        "commits": [
            "e9c6e75d6471a770bd6c0298f312ace40bce89fd",
            "33b1b2fe8f1abefe341ad58015cbaceb29ec40ea",
            "c1c56e259f181b7d9a571cb19fdcfe1e228d5a27",
            "7dae5a1a2b6868da939e7643741b67db1610f190",
            "c8858e098f45e874f328a805c980f3f1ed564abe"
        ]
    },
    {
        "cfgs": [],
        "code": "import com.google.common.base.Optional",
        "dfgs": [],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 20,
        "lineEnd": 20,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 39,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            41
        ],
        "code": "visitChildren(node)",
        "dfgs": [
            47,
            41
        ],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 570,
        "lineEnd": 570,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 40,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            42
        ],
        "code": "SoyType left = node.getChild(0).getType()",
        "dfgs": [
            42,
            43
        ],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 571,
        "lineEnd": 571,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 41,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            43
        ],
        "code": "SoyType right = node.getChild(1).getType()",
        "dfgs": [
            43,
            44,
            46
        ],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 572,
        "lineEnd": 572,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 42,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            44,
            45
        ],
        "code": "if (SoyTypes.isNumericOrUnknown(left) && SoyTypes.isNumericOrUnknown(right))",
        "dfgs": [],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 573,
        "lineEnd": 573,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 43,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            47
        ],
        "code": "node.setType(FloatType.getInstance())",
        "dfgs": [
            47
        ],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 574,
        "lineEnd": 574,
        "lineMapIndex": 37,
        "methodParents": [],
        "nodeIndex": 44,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            46
        ],
        "code": "else",
        "dfgs": [],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 575,
        "lineEnd": 575,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 45,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            47
        ],
        "code": "node.setType(UnknownType.getInstance())",
        "dfgs": [
            47
        ],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 578,
        "lineEnd": 578,
        "lineMapIndex": 36,
        "methodParents": [],
        "nodeIndex": 46,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "tryApplySubstitution(node)",
        "dfgs": [],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 580,
        "lineEnd": 580,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 47,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            49
        ],
        "code": "Optional<SoyType> arithmeticType = SoyTypes.computeLowestCommonTypeArithmetic(left, right)",
        "dfgs": [
            49,
            52
        ],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 938,
        "lineEnd": 938,
        "lineMapIndex": 33,
        "methodParents": [],
        "nodeIndex": 48,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            50,
            51
        ],
        "code": "if (arithmeticType.isPresent())",
        "dfgs": [
            50
        ],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 939,
        "lineEnd": 939,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 49,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "node.setType(arithmeticType.get())",
        "dfgs": [],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 940,
        "lineEnd": 940,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 50,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            52
        ],
        "code": "else",
        "dfgs": [],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 941,
        "lineEnd": 941,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 51,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "node.setType(SoyTypes.NUMBER_TYPE)",
        "dfgs": [],
        "fName": "java_src_com_google_template_soy_passes_ResolveExpressionTypesVisitor.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 946,
        "lineEnd": 946,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 52,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            54
        ],
        "code": "SoyFileSetNode soyTree =SoyFileSetParserBuilder.forFileContents(constructTemplateSource(\"{@param pa: unknown}\",\"{@param pi: int}\",\"{@param pf: float}\",\"{@param ps: string}\",\"{captureType($pa + $pa)}\",\"{captureType($pi + $pi)}\",\"{captureType($pf + $pf)}\",\"{captureType($pa - $pa)}\",\"{captureType($pi - $pi)}\",\"{captureType($pf - $pf)}\",\"{captureType($pa * $pa)}\",\"{captureType($pi * $pi)}\",\"{captureType($pf * $pf)}\",\"{captureType($pa / $pa)}\",\"{captureType($pi / $pi)}\",\"{captureType($pf / $pf)}\",\"{captureType($pa % $pa)}\",\"{captureType($pi % $pi)}\",\"{captureType($pf % $pf)}\",\"{captureType(-$pa)}\",\"{captureType(-$pi)}\",\"{captureType(-$pf)}\",// The remainder are all logically template errors but are not enforced by the// compiler\"{captureType(-$ps)}\",\"{captureType($ps / $pf)}\")).declaredSyntaxVersion(SyntaxVersion.V2_0).addSoyFunction(CAPTURE_TYPE_FUNCTION).typeRegistry(TYPE_REGISTRY).parse().fileSet()",
        "dfgs": [
            54
        ],
        "fName": "java_tests_com_google_template_soy_passes_ResolveExpressionTypesVisitorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 207,
        "lineEnd": 240,
        "lineMapIndex": 38,
        "methodParents": [],
        "nodeIndex": 53,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [
            55
        ],
        "code": "assertThat(types.get(18)).isEqualTo(UnknownType.getInstance())",
        "dfgs": [
            55
        ],
        "fName": "java_tests_com_google_template_soy_passes_ResolveExpressionTypesVisitorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 262,
        "lineEnd": 262,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 54,
        "rootcause": false,
        "commits": []
    },
    {
        "cfgs": [],
        "code": "assertThat(types.get(19)).isEqualTo(UnknownType.getInstance())",
        "dfgs": [],
        "fName": "java_tests_com_google_template_soy_passes_ResolveExpressionTypesVisitorTest.java",
        "fieldParents": [],
        "isDel": false,
        "lineBeg": 263,
        "lineEnd": 263,
        "lineMapIndex": -1,
        "methodParents": [],
        "nodeIndex": 55,
        "rootcause": false,
        "commits": []
    }
]